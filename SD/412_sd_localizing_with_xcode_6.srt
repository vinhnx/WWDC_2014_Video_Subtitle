

1
00:00:16.265 --> 00:00:20.596 A:middle
&gt;&gt; Welcome everybody to
Localization with Xcode 6.

2
00:00:21.946 --> 00:00:23.456 A:middle
My name is Zoltan Foley-Fisher

3
00:00:24.206 --> 00:00:28.336 A:middle
and I'm an engineer
with the Xcode team.

4
00:00:28.566 --> 00:00:31.336 A:middle
Later my colleague Chris
Hanson will join me on stage.

5
00:00:32.776 --> 00:00:36.176 A:middle
So you've spent time on
your applications artwork.

6
00:00:37.316 --> 00:00:40.796 A:middle
You've spent time on your
applications code but you

7
00:00:41.016 --> 00:00:44.076 A:middle
yet have to consider
your global audience.

8
00:00:45.346 --> 00:00:48.806 A:middle
The App Store is available in
150 countries around the world.

9
00:00:49.506 --> 00:00:50.876 A:middle
Here's a small fraction of them.

10
00:00:50.876 --> 00:00:53.546 A:middle
And there are literally
hundreds of millions

11
00:00:53.546 --> 00:00:55.656 A:middle
of users shopping
in these stores.

12
00:00:56.876 --> 00:01:00.956 A:middle
The interesting thing is
there's no one dominant language

13
00:01:00.996 --> 00:01:01.756 A:middle
around the world.

14
00:01:02.386 --> 00:01:05.946 A:middle
IOS is localized
into 40 languages

15
00:01:06.186 --> 00:01:09.656 A:middle
to reach a global audience
to take your application

16
00:01:09.656 --> 00:01:13.196 A:middle
to the next level, you
simply must localize.

17
00:01:14.166 --> 00:01:16.216 A:middle
So if this sounds like an
interesting opportunity,

18
00:01:16.706 --> 00:01:17.886 A:middle
you've come to the right place.

19
00:01:18.436 --> 00:01:21.366 A:middle
We'll bring you guys up to speed

20
00:01:22.456 --> 00:01:29.186 A:middle
on Apple's award winning
support for iOS and Mac OS X.

21
00:01:29.186 --> 00:01:33.716 A:middle
And of course we'll detail
some of the workflows in Xcode

22
00:01:33.716 --> 00:01:35.826 A:middle
to help you get your
application localized.

23
00:01:36.926 --> 00:01:39.856 A:middle
And for the old hands out
there, we have some new features

24
00:01:39.856 --> 00:01:41.416 A:middle
that I think you'll
find very interesting.

25
00:01:41.906 --> 00:01:44.236 A:middle
I want to take a step
back for a moment though

26
00:01:44.236 --> 00:01:46.106 A:middle
and introduce an
useful distinction.

27
00:01:47.316 --> 00:01:51.676 A:middle
Internationalization isn't
quite the same as localization.

28
00:01:51.756 --> 00:01:56.466 A:middle
I like to think of
internationalization

29
00:01:56.926 --> 00:02:01.326 A:middle
as a milestone on a path
to a localized application.

30
00:02:03.096 --> 00:02:07.146 A:middle
Internationalization is where
you structure your application

31
00:02:07.446 --> 00:02:10.086 A:middle
to be language and
region independent.

32
00:02:10.606 --> 00:02:14.586 A:middle
That involves corralling
the source strings,

33
00:02:15.786 --> 00:02:19.276 A:middle
using interface builders
auto layout support.

34
00:02:20.316 --> 00:02:24.106 A:middle
And then once the application
is ready, then you can proceed

35
00:02:24.106 --> 00:02:26.786 A:middle
to the second step,
localization.

36
00:02:28.016 --> 00:02:29.906 A:middle
And I should be clear that users

37
00:02:29.906 --> 00:02:32.386 A:middle
around the world see
your applications

38
00:02:32.556 --> 00:02:33.826 A:middle
in very different ways.

39
00:02:34.756 --> 00:02:40.456 A:middle
So here's an English
application in the U.S. region.

40
00:02:41.216 --> 00:02:44.446 A:middle
Here's the same application
in Mexico.

41
00:02:45.156 --> 00:02:47.886 A:middle
And you'll notice that in
addition to being in Spanish,

42
00:02:49.126 --> 00:02:51.516 A:middle
it's also got a subtle
difference in the date.

43
00:02:52.796 --> 00:02:57.186 A:middle
Here's the same application
running in Spain also in Spanish

44
00:02:58.346 --> 00:03:03.766 A:middle
but again a difference in the
dates and the number formats.

45
00:03:05.106 --> 00:03:07.156 A:middle
So your applications
are going to have

46
00:03:07.206 --> 00:03:11.866 A:middle
to handle these subtleties, and
we're going to show you how.

47
00:03:12.416 --> 00:03:15.996 A:middle
First we'll create an
internationalized application

48
00:03:15.996 --> 00:03:18.666 A:middle
and then later, we'll
localize it.

49
00:03:19.316 --> 00:03:21.526 A:middle
And to get things started,

50
00:03:21.886 --> 00:03:23.786 A:middle
I'd like to introduce
you to Chris Hanson.

51
00:03:25.516 --> 00:03:27.556 A:middle
[ Applause ]

52
00:03:28.056 --> 00:03:28.566 A:middle
&gt;&gt; Thank you, Zoltan.

53
00:03:29.336 --> 00:03:32.436 A:middle
So as Zoltan said
internationalization is the

54
00:03:32.556 --> 00:03:33.636 A:middle
first step on the route

55
00:03:33.636 --> 00:03:35.896 A:middle
to having a fully
localized application.

56
00:03:36.266 --> 00:03:39.716 A:middle
And I'd like to show you how to
prepare your application and how

57
00:03:39.716 --> 00:03:43.306 A:middle
to leverage Apple's frameworks
to prepare for localization.

58
00:03:45.046 --> 00:03:47.666 A:middle
So we have some excellent
Framework Support

59
00:03:47.666 --> 00:03:52.716 A:middle
for internationalization and
localization in iOS and OS X.

60
00:03:52.716 --> 00:03:55.696 A:middle
And it's completely
pervasive throughout the

61
00:03:55.696 --> 00:03:56.576 A:middle
systems frameworks.

62
00:03:57.126 --> 00:03:59.286 A:middle
Otherwise I don't
think we'd be able

63
00:03:59.286 --> 00:04:02.216 A:middle
to localize iOS into
40 languages.

64
00:04:04.106 --> 00:04:08.366 A:middle
And what our system does is
separate your localizable data

65
00:04:09.046 --> 00:04:12.816 A:middle
from the rest of your
application thus making it much

66
00:04:13.016 --> 00:04:17.776 A:middle
easier to produce localized
variance of your application

67
00:04:18.516 --> 00:04:22.626 A:middle
that are actually all
built into a single bundle.

68
00:04:23.176 --> 00:04:28.356 A:middle
And these localized resources
these localized data can be

69
00:04:28.356 --> 00:04:33.576 A:middle
images, sounds and movies,
and documentation in addition

70
00:04:33.576 --> 00:04:37.186 A:middle
to the user-facing text
in your application.

71
00:04:37.956 --> 00:04:41.266 A:middle
And even the user-facing
text in your source code.

72
00:04:41.826 --> 00:04:45.866 A:middle
And as I said, it's
extremely simple to use.

73
00:04:46.686 --> 00:04:53.126 A:middle
Now the first step is to
start with NSLocalizedString.

74
00:04:53.906 --> 00:04:58.366 A:middle
NSLocalizedString lets you
internationalize strings

75
00:04:58.966 --> 00:05:01.876 A:middle
that are used in your user
interface but that come

76
00:05:01.876 --> 00:05:02.866 A:middle
from your source code.

77
00:05:03.566 --> 00:05:08.546 A:middle
And the way NSLocalizedString
works,

78
00:05:09.386 --> 00:05:14.406 A:middle
it lets you keep nice strings in
your code such as format code.

79
00:05:14.836 --> 00:05:17.896 A:middle
You don't have to replace
all the nice readable strings

80
00:05:17.896 --> 00:05:19.796 A:middle
in your code with some sort

81
00:05:19.796 --> 00:05:23.296 A:middle
of all uppercase identifier
pointing into a resource file.

82
00:05:23.606 --> 00:05:27.026 A:middle
Instead with NSLocalizedString
you can keep those strings

83
00:05:27.136 --> 00:05:32.266 A:middle
as they are and still have your
application fetch localized

84
00:05:32.266 --> 00:05:33.826 A:middle
resources automatically.

85
00:05:34.126 --> 00:05:36.086 A:middle
And that's the important part.

86
00:05:36.296 --> 00:05:39.266 A:middle
There's no explicit
loading or management

87
00:05:39.546 --> 00:05:41.786 A:middle
of your localized
strings needed at all.

88
00:05:41.786 --> 00:05:48.016 A:middle
And we have a couple of
variants of NSLocalizedString

89
00:05:48.306 --> 00:05:50.386 A:middle
such as
NSLocalizedStringFromTable

90
00:05:50.536 --> 00:05:54.786 A:middle
that you can use if you do need
to keep different string tables

91
00:05:55.046 --> 00:05:56.556 A:middle
for different purposes.

92
00:05:57.256 --> 00:05:59.356 A:middle
Let's just dive into some code.

93
00:06:00.866 --> 00:06:03.616 A:middle
Here we have the
kind of format string

94
00:06:03.926 --> 00:06:05.586 A:middle
that will often appear
in your code.

95
00:06:06.036 --> 00:06:09.446 A:middle
Here I'm just saying how
tall a particular mountain is

96
00:06:09.936 --> 00:06:13.116 A:middle
so I can assign that to a label.

97
00:06:13.536 --> 00:06:16.476 A:middle
Now obviously this
string is in English

98
00:06:16.476 --> 00:06:20.166 A:middle
and it's completely unlocalized
and un-internationalized.

99
00:06:22.236 --> 00:06:25.006 A:middle
So that's not really
great for my users

100
00:06:25.086 --> 00:06:26.286 A:middle
who use other languages.

101
00:06:28.016 --> 00:06:33.166 A:middle
Fortunately all I have to do is
wrap that with NSLocalizedString

102
00:06:33.596 --> 00:06:36.966 A:middle
and add in a comment explaining
what the string is for

103
00:06:37.516 --> 00:06:39.996 A:middle
and I've made that
code localized.

104
00:06:40.886 --> 00:06:42.946 A:middle
Now that comment is important.

105
00:06:43.176 --> 00:06:46.316 A:middle
It tells your localizers,
your translators,

106
00:06:46.816 --> 00:06:49.226 A:middle
just why you're using
that string.

107
00:06:49.776 --> 00:06:53.266 A:middle
Because different languages
might use different terminology

108
00:06:53.496 --> 00:06:54.706 A:middle
based on context.

109
00:06:55.406 --> 00:06:59.556 A:middle
So for example, a
language might say

110
00:06:59.686 --> 00:07:02.676 A:middle
that a person is a
certain height tall

111
00:07:02.776 --> 00:07:04.366 A:middle
in a completely different way

112
00:07:04.606 --> 00:07:07.686 A:middle
than it says a mountain
is a certain height.

113
00:07:09.096 --> 00:07:12.246 A:middle
Of course, that wasn't
quite enough.

114
00:07:12.496 --> 00:07:14.646 A:middle
We were using StringWithFormat.

115
00:07:16.286 --> 00:07:19.936 A:middle
We should actually switch to
LocalizedStringWithFormat.

116
00:07:20.516 --> 00:07:23.596 A:middle
What that will do is it will
ensure that when we pass

117
00:07:23.836 --> 00:07:25.676 A:middle
out that height as a number,

118
00:07:25.886 --> 00:07:29.136 A:middle
that that number is
also properly formatted

119
00:07:29.746 --> 00:07:34.196 A:middle
for the user's language and
region, including such things

120
00:07:34.476 --> 00:07:40.816 A:middle
as localized digits because not
everybody uses the same digit

121
00:07:40.816 --> 00:07:44.216 A:middle
system, the same Arabic
numerals that we use

122
00:07:44.646 --> 00:07:46.256 A:middle
in say, the United States.

123
00:07:47.636 --> 00:07:50.816 A:middle
And of course, as with all
of our system frameworks,

124
00:07:51.036 --> 00:07:53.546 A:middle
this is all available
from SWF as well.

125
00:07:53.816 --> 00:07:55.846 A:middle
And in fact, I think
you'll like how we've --

126
00:07:56.526 --> 00:07:59.476 A:middle
how we're handling
NSLocalizedString in SWF.

127
00:08:00.286 --> 00:08:04.896 A:middle
Now those localized strings,

128
00:08:05.246 --> 00:08:06.866 A:middle
when you localize
your application

129
00:08:06.866 --> 00:08:09.326 A:middle
into another language will come

130
00:08:09.326 --> 00:08:12.256 A:middle
from a dictionary called a
localizable strings file.

131
00:08:12.446 --> 00:08:17.156 A:middle
And this is a nice
readable file within Xcode

132
00:08:18.076 --> 00:08:23.876 A:middle
where you can specify all
of your localizable strings.

133
00:08:24.216 --> 00:08:26.846 A:middle
Of course, Zoltan will show
you how you don't even have

134
00:08:26.846 --> 00:08:28.626 A:middle
to author these files yourself.

135
00:08:28.626 --> 00:08:30.846 A:middle
How Xcode will take
care of that for you.

136
00:08:33.155 --> 00:08:37.296 A:middle
At the very beginning of a
particular entry in the file,

137
00:08:37.296 --> 00:08:40.226 A:middle
you'll see that comment that
you put in your source code.

138
00:08:40.806 --> 00:08:43.496 A:middle
And that's so somebody
who is localizing

139
00:08:43.496 --> 00:08:46.276 A:middle
that file will know just
what that string is for.

140
00:08:46.966 --> 00:08:51.936 A:middle
Then the string exactly as it
appears in your code will show

141
00:08:51.936 --> 00:08:54.816 A:middle
up as a key in that file,

142
00:08:54.816 --> 00:08:59.376 A:middle
and that's how our frameworks
localization system will look

143
00:08:59.376 --> 00:09:02.256 A:middle
up the string to use
in another language.

144
00:09:03.546 --> 00:09:05.656 A:middle
And finally on the
right-hand side,

145
00:09:05.976 --> 00:09:08.496 A:middle
you'll see a modified
version of that string.

146
00:09:09.376 --> 00:09:11.406 A:middle
Now here this is
just an English file,

147
00:09:12.706 --> 00:09:17.026 A:middle
but some languages actually
use a different word order

148
00:09:17.026 --> 00:09:17.646 A:middle
than English.

149
00:09:18.296 --> 00:09:22.516 A:middle
And instead of making you
write some code to say, well,

150
00:09:22.516 --> 00:09:26.026 A:middle
if I'm using this language,
then I need to pass my arguments

151
00:09:26.166 --> 00:09:29.146 A:middle
to StringsWithFormat or
LocalizedStringWithFormat

152
00:09:29.146 --> 00:09:31.846 A:middle
in this order, and then in
this other language I need

153
00:09:31.846 --> 00:09:34.666 A:middle
to pass them in a different
order, you can pass them all

154
00:09:34.666 --> 00:09:37.546 A:middle
in a stable order in your
code and you don't have

155
00:09:37.746 --> 00:09:40.126 A:middle
to write anything
language specific.

156
00:09:40.516 --> 00:09:43.816 A:middle
Instead you can use this one
dollar sign and two dollar sign

157
00:09:43.816 --> 00:09:47.156 A:middle
in syntax which Xcode will
put in for you automatically

158
00:09:47.946 --> 00:09:51.006 A:middle
to indicate what order
the arguments come in.

159
00:09:51.586 --> 00:09:55.556 A:middle
And here's an example
just in English

160
00:09:55.746 --> 00:09:58.976 A:middle
of how you might say the same
thing but in a different order.

161
00:09:59.786 --> 00:10:02.656 A:middle
And some languages
will use one order.

162
00:10:02.736 --> 00:10:04.546 A:middle
Some languages will
use another order.

163
00:10:05.036 --> 00:10:08.046 A:middle
One order might be formal;
one order might be informal.

164
00:10:08.336 --> 00:10:09.416 A:middle
It doesn't really matter.

165
00:10:09.826 --> 00:10:13.306 A:middle
The point is that
Cocoa will take care

166
00:10:13.306 --> 00:10:15.006 A:middle
of the heavy lifting for you.

167
00:10:15.006 --> 00:10:20.876 A:middle
Now sort of at the next level
up, we have NSFormatter.

168
00:10:21.686 --> 00:10:26.556 A:middle
A lot of what your apps do is
present information from objects

169
00:10:27.656 --> 00:10:30.406 A:middle
to users as human-readable text.

170
00:10:31.416 --> 00:10:33.766 A:middle
And that's exactly what
formatters are for.

171
00:10:35.016 --> 00:10:39.526 A:middle
Formatters actually
translate between objects

172
00:10:39.946 --> 00:10:40.866 A:middle
and human-readable text.

173
00:10:42.056 --> 00:10:44.236 A:middle
Not just from one to the other.

174
00:10:45.126 --> 00:10:47.246 A:middle
And they can be used
both for presenting

175
00:10:47.246 --> 00:10:48.606 A:middle
and interpreting text.

176
00:10:49.386 --> 00:10:52.836 A:middle
So if you're say getting
numeric input from a user,

177
00:10:53.056 --> 00:10:55.366 A:middle
you'll probably want to use
the formatter just as much

178
00:10:55.646 --> 00:10:56.976 A:middle
as you'll want to
use a formatter

179
00:10:57.126 --> 00:10:58.746 A:middle
to present numeric output.

180
00:10:59.446 --> 00:11:04.906 A:middle
And formatters use the
user's current locale,

181
00:11:05.296 --> 00:11:07.246 A:middle
their current language
and region

182
00:11:07.246 --> 00:11:09.576 A:middle
and other settings by default.

183
00:11:09.846 --> 00:11:13.126 A:middle
You don't have to do any
special setup or configuration

184
00:11:13.306 --> 00:11:15.016 A:middle
to tell a formatter, hey,

185
00:11:15.306 --> 00:11:20.666 A:middle
use the user's specific
language and region.

186
00:11:20.946 --> 00:11:23.126 A:middle
So some very simple
formatter code.

187
00:11:24.336 --> 00:11:28.886 A:middle
Dates are actually extremely
difficult to format properly

188
00:11:29.146 --> 00:11:31.396 A:middle
for every language and
region in the world.

189
00:11:32.026 --> 00:11:33.926 A:middle
And that's why we
built support to them

190
00:11:34.266 --> 00:11:35.696 A:middle
in our systems frameworks

191
00:11:35.996 --> 00:11:39.206 A:middle
so that everybody doesn't
have to do that work.

192
00:11:40.956 --> 00:11:43.896 A:middle
Here we're configuring
the formatter

193
00:11:44.116 --> 00:11:46.886 A:middle
to present a medium
length date string.

194
00:11:47.376 --> 00:11:49.676 A:middle
Now that's a date string
that might not have the day

195
00:11:49.676 --> 00:11:52.796 A:middle
of the week but might
present say the month

196
00:11:52.796 --> 00:11:54.626 A:middle
and the day and the year only.

197
00:11:54.976 --> 00:11:58.786 A:middle
And since a NSDate doesn't
just carry a day, a year,

198
00:11:58.786 --> 00:12:00.746 A:middle
and a month, but
also carries a time,

199
00:12:02.326 --> 00:12:04.916 A:middle
we're telling this formatter
that we actually don't care

200
00:12:04.916 --> 00:12:06.316 A:middle
about the time that's
in the date.

201
00:12:06.706 --> 00:12:09.106 A:middle
We just care about the
date portion of it.

202
00:12:10.196 --> 00:12:13.066 A:middle
And of course, once we
have a formatter set up,

203
00:12:13.256 --> 00:12:14.926 A:middle
we can just keep reusing it.

204
00:12:15.446 --> 00:12:17.936 A:middle
So once we have a date,
we just need to pass it

205
00:12:18.086 --> 00:12:21.456 A:middle
through that formatter using
the stringFromDate method

206
00:12:21.456 --> 00:12:23.246 A:middle
in the case of NSDateFormatter.

207
00:12:23.476 --> 00:12:25.666 A:middle
Or in the equivalent method
for any other formatter

208
00:12:26.406 --> 00:12:28.506 A:middle
and we can the assign it
straight to our label.

209
00:12:29.256 --> 00:12:34.426 A:middle
And of course, in SWF, this
all looks very similar.

210
00:12:34.796 --> 00:12:37.516 A:middle
It's actually a little bit
more concise though thanks

211
00:12:37.586 --> 00:12:39.256 A:middle
to SWF's enum syntax.

212
00:12:39.836 --> 00:12:42.956 A:middle
Now we have formatters
for dates as I said,

213
00:12:42.956 --> 00:12:47.206 A:middle
but we also have formatters
for individual date components,

214
00:12:47.666 --> 00:12:50.246 A:middle
and for time intervals
which are also very hard

215
00:12:50.246 --> 00:12:52.196 A:middle
to get right in all situations.

216
00:12:52.816 --> 00:12:55.416 A:middle
We also have formatters
for numbers.

217
00:12:56.356 --> 00:13:00.356 A:middle
And for formatting numbers
specifically in currency

218
00:13:00.456 --> 00:13:03.476 A:middle
which might have slightly
different rules and even

219
00:13:03.476 --> 00:13:06.006 A:middle
for formatting byte counts
such as the number of bytes

220
00:13:06.006 --> 00:13:08.376 A:middle
or megabytes uploaded
or downloaded.

221
00:13:09.256 --> 00:13:11.436 A:middle
That way you don't have to
figure out how to format

222
00:13:11.436 --> 00:13:13.436 A:middle
that properly in
your apps themselves.

223
00:13:14.066 --> 00:13:20.446 A:middle
And new in iOS 8 and OS X
Yosemite we have support

224
00:13:20.446 --> 00:13:23.106 A:middle
for formatters for
health-related quantities

225
00:13:24.146 --> 00:13:26.996 A:middle
such as energy in
calories and kilocalories.

226
00:13:27.566 --> 00:13:29.666 A:middle
We have formatters
for length and height.

227
00:13:30.236 --> 00:13:31.866 A:middle
We have formatters for mass.

228
00:13:32.756 --> 00:13:36.946 A:middle
And this way you can present
this information consistently

229
00:13:36.946 --> 00:13:41.086 A:middle
to your user with other
apps on the system.

230
00:13:41.326 --> 00:13:44.976 A:middle
Now underlying all of this
is the concept of a bundle.

231
00:13:45.506 --> 00:13:46.696 A:middle
Your apps are actually built

232
00:13:46.696 --> 00:13:48.746 A:middle
into directories,
not single files.

233
00:13:48.746 --> 00:13:50.896 A:middle
And those directories
are called bundles.

234
00:13:51.336 --> 00:13:52.566 A:middle
And that doesn't
just cover your apps.

235
00:13:52.826 --> 00:13:55.326 A:middle
That goes for your app
extensions, your frameworks.

236
00:13:55.326 --> 00:13:56.836 A:middle
Everything else in
the system too.

237
00:13:58.416 --> 00:14:03.236 A:middle
And NSBundle provides an
API that's the standard way

238
00:14:03.236 --> 00:14:05.606 A:middle
to access resources
within those bundles.

239
00:14:07.156 --> 00:14:10.746 A:middle
And when you use
NSBundle's APIs,

240
00:14:11.456 --> 00:14:15.456 A:middle
they automatically get the
most appropriate resource

241
00:14:15.616 --> 00:14:17.356 A:middle
for your current language.

242
00:14:17.946 --> 00:14:24.196 A:middle
And what's more, building
bundles is directly supported

243
00:14:24.196 --> 00:14:24.846 A:middle
by Xcode.

244
00:14:25.436 --> 00:14:29.396 A:middle
So when you have localized
resources in your application,

245
00:14:29.396 --> 00:14:32.266 A:middle
you don't need to write
scripts to place them

246
00:14:32.266 --> 00:14:33.876 A:middle
in the right place in your app.

247
00:14:34.986 --> 00:14:37.146 A:middle
Just tell Xcode that
they're localized

248
00:14:37.146 --> 00:14:38.646 A:middle
and what language they're for

249
00:14:38.806 --> 00:14:42.666 A:middle
and XCode will automatically
include them in the right place.

250
00:14:43.026 --> 00:14:47.456 A:middle
The NSBundle API is very simple.

251
00:14:48.316 --> 00:14:52.466 A:middle
Here we see getting a resource
that represents a game menu

252
00:14:52.956 --> 00:14:55.636 A:middle
from our main bundle
which represents our app.

253
00:14:55.906 --> 00:14:57.796 A:middle
And then we're just
creating an image with it

254
00:14:58.066 --> 00:15:01.236 A:middle
and assigning it
to UIImage View.

255
00:15:03.226 --> 00:15:07.216 A:middle
Now most of the time, these
are very common operations

256
00:15:07.466 --> 00:15:09.666 A:middle
so we have some shorthand
in our frameworks for them.

257
00:15:10.416 --> 00:15:13.266 A:middle
For example, UIImage has
the image name method

258
00:15:13.896 --> 00:15:18.436 A:middle
and that will just
automatically go to NSBundle

259
00:15:18.436 --> 00:15:20.456 A:middle
for your main bundle
and ask for that image,

260
00:15:20.456 --> 00:15:23.056 A:middle
and it will even handle
differences in things

261
00:15:23.056 --> 00:15:24.736 A:middle
like the path extension for you.

262
00:15:26.626 --> 00:15:30.916 A:middle
But not everything is going to
come from one of those methods.

263
00:15:31.356 --> 00:15:34.186 A:middle
For example, if I want
to play a welcome message

264
00:15:34.396 --> 00:15:38.226 A:middle
when my application starts
up, I'm probably going to want

265
00:15:38.226 --> 00:15:41.816 A:middle
that audio message to
be localized as well.

266
00:15:41.816 --> 00:15:49.906 A:middle
But AVAudioPlayer doesn't simply
have a player with file method.

267
00:15:50.346 --> 00:15:51.016 A:middle
That's okay.

268
00:15:51.016 --> 00:15:54.976 A:middle
We can just the URL from our
main bundle to that message

269
00:15:55.426 --> 00:15:57.706 A:middle
and then pass it
along to AVAudioPlayer

270
00:15:57.916 --> 00:16:01.296 A:middle
because those URLs
are just regular URLs.

271
00:16:01.296 --> 00:16:03.976 A:middle
So there's nothing special about
them that requires any form

272
00:16:03.976 --> 00:16:06.216 A:middle
of translation before they
can be passed elsewhere.

273
00:16:06.836 --> 00:16:11.906 A:middle
And as always, we
support this in SWF.

274
00:16:13.276 --> 00:16:18.786 A:middle
And in SWF, when you're
following sort of a chain

275
00:16:18.786 --> 00:16:22.256 A:middle
of methods like this, you can
actually use the Let Syntax

276
00:16:22.606 --> 00:16:26.516 A:middle
so you don't accidently reassign
to one of these variables.

277
00:16:26.946 --> 00:16:28.406 A:middle
I find that really handy.

278
00:16:29.016 --> 00:16:33.266 A:middle
Now let's talk about tools.

279
00:16:33.786 --> 00:16:38.066 A:middle
Since Xcode 5 we've supported
a concept called base

280
00:16:38.066 --> 00:16:40.206 A:middle
internationalization in Xcode

281
00:16:41.586 --> 00:16:44.166 A:middle
that helps you internationalize
your interface

282
00:16:44.896 --> 00:16:49.926 A:middle
by keeping your strings that are
in the interface files separate

283
00:16:49.926 --> 00:16:54.156 A:middle
from the UI components that
are in those interface files.

284
00:16:54.836 --> 00:16:59.146 A:middle
And of course in Xcode,
we also make it very easy

285
00:16:59.146 --> 00:17:04.195 A:middle
to localize your other project
resources as you need to.

286
00:17:04.685 --> 00:17:09.286 A:middle
And new in Xcode 6, we have
some powerful preview features

287
00:17:09.736 --> 00:17:12.396 A:middle
that let you preview how
your application will look

288
00:17:12.396 --> 00:17:15.146 A:middle
in other regions and
in other languages,

289
00:17:15.925 --> 00:17:20.165 A:middle
both while it's running
and directly within Xcode

290
00:17:20.165 --> 00:17:21.316 A:middle
in any interface builder.

291
00:17:22.746 --> 00:17:24.705 A:middle
But first let's talk
a little bit more

292
00:17:24.705 --> 00:17:26.506 A:middle
about base internationalization.

293
00:17:27.796 --> 00:17:30.776 A:middle
As I said, it keeps your strings

294
00:17:31.276 --> 00:17:33.816 A:middle
and your user-facing
text separate

295
00:17:34.276 --> 00:17:35.646 A:middle
from your interface objects.

296
00:17:36.756 --> 00:17:41.986 A:middle
So the placeholder text that
you put into your IB storyboard

297
00:17:41.986 --> 00:17:46.366 A:middle
or your xib files is
only representative

298
00:17:46.366 --> 00:17:47.806 A:middle
of your development language.

299
00:17:49.196 --> 00:17:53.826 A:middle
What this means is that when
you have other languages added

300
00:17:53.826 --> 00:17:56.656 A:middle
to your project, you only
need to change the strings.

301
00:17:57.356 --> 00:17:58.976 A:middle
You don't need to
go through any more

302
00:17:59.206 --> 00:18:03.006 A:middle
and adjust every single xib
file or every single storyboard

303
00:18:03.236 --> 00:18:05.666 A:middle
for every single
language you support.

304
00:18:06.266 --> 00:18:12.976 A:middle
And for other resources, we just
show them exactly the same way

305
00:18:12.976 --> 00:18:15.176 A:middle
that we show localized
strings in Xcode.

306
00:18:16.006 --> 00:18:20.906 A:middle
So as an example, I have an app
here that has a stop sign icon

307
00:18:20.906 --> 00:18:22.636 A:middle
and the yield sign icon.

308
00:18:23.256 --> 00:18:27.296 A:middle
Well those have text on
them so I'm probably going

309
00:18:27.296 --> 00:18:29.586 A:middle
to want a different
stop sign icon

310
00:18:29.946 --> 00:18:32.546 A:middle
and a different yield sign
icon, at least for the text,

311
00:18:32.956 --> 00:18:36.346 A:middle
possibly even for the shape
for English and for Swedish.

312
00:18:36.906 --> 00:18:42.476 A:middle
And you can do this with any
kind of resource: Images,

313
00:18:43.056 --> 00:18:50.726 A:middle
sounds, movies, documentation,
and really any kind of resource

314
00:18:50.776 --> 00:18:52.646 A:middle
that you can put in Xcode
and in your project.

315
00:18:53.346 --> 00:18:57.756 A:middle
And Xcode knows about
the structure of bundles

316
00:18:58.366 --> 00:19:02.826 A:middle
so you don't have to tell it,
hey, I want these over here; no,

317
00:19:02.826 --> 00:19:03.986 A:middle
I want those over there.

318
00:19:04.646 --> 00:19:07.786 A:middle
Xcode just knows and will
automatically put everything

319
00:19:07.786 --> 00:19:10.066 A:middle
in the right place in your app.

320
00:19:11.496 --> 00:19:18.036 A:middle
Now new in Xcode 6 we
support preview at run time.

321
00:19:18.966 --> 00:19:21.706 A:middle
This debug time preview
is accessed

322
00:19:21.706 --> 00:19:23.746 A:middle
through the edit scheme sheet

323
00:19:24.336 --> 00:19:27.256 A:middle
where you can set your
application language

324
00:19:28.226 --> 00:19:29.286 A:middle
from a pop up.

325
00:19:29.376 --> 00:19:31.956 A:middle
And this pop up will let you
pick the system language;

326
00:19:32.536 --> 00:19:34.356 A:middle
it will let you pick
any language

327
00:19:34.356 --> 00:19:36.546 A:middle
into which your application
has been localized;

328
00:19:37.186 --> 00:19:41.556 A:middle
and it will let you pick a
couple of pseudo-languages

329
00:19:42.246 --> 00:19:44.686 A:middle
that I'll explain
a little bit later.

330
00:19:45.326 --> 00:19:49.716 A:middle
But that's not all.

331
00:19:50.526 --> 00:19:54.366 A:middle
We've also added the ability
to IB's preview assistant

332
00:19:55.436 --> 00:20:00.486 A:middle
to select a language in which
you want to preview your NIB.

333
00:20:01.216 --> 00:20:03.706 A:middle
So you can preview
your interface

334
00:20:04.286 --> 00:20:06.346 A:middle
by just selecting any language

335
00:20:06.346 --> 00:20:08.486 A:middle
in which your application
has been translated

336
00:20:08.766 --> 00:20:11.656 A:middle
from the language pop up
on the lower right corner

337
00:20:12.306 --> 00:20:13.376 A:middle
of the preview window.

338
00:20:14.086 --> 00:20:20.746 A:middle
Now we also support a
pseudo-language directly

339
00:20:20.746 --> 00:20:24.706 A:middle
within IB for checking your
auto layout constraints.

340
00:20:24.866 --> 00:20:26.666 A:middle
And I'll show you that
a little bit later too.

341
00:20:31.236 --> 00:20:37.036 A:middle
And here it is zoomed in a
little bit so you can read it.

342
00:20:37.576 --> 00:20:41.966 A:middle
Now the stages of
internationalization are simply

343
00:20:41.966 --> 00:20:44.486 A:middle
to identify the strings
that you're going to use

344
00:20:44.486 --> 00:20:47.516 A:middle
for your translations,
to make sure

345
00:20:47.516 --> 00:20:49.896 A:middle
that your application
is properly using base

346
00:20:49.896 --> 00:20:52.056 A:middle
internationalization
and Auto Layout;

347
00:20:52.746 --> 00:20:57.716 A:middle
and then to localize any other
project resources that you need.

348
00:20:58.416 --> 00:21:01.876 A:middle
And I'd like to show that
to you now in Xcode 6.

349
00:21:02.776 --> 00:21:04.826 A:middle
And so here I have
an application

350
00:21:06.306 --> 00:21:09.376 A:middle
that when I run it will
show some earthquakes data

351
00:21:09.796 --> 00:21:12.346 A:middle
from the U.S. Geological
Survey's web data feed.

352
00:21:12.976 --> 00:21:15.846 A:middle
Now I'm not actually using the
live feed so don't be alarmed

353
00:21:15.846 --> 00:21:16.996 A:middle
if you see anything in there.

354
00:21:18.376 --> 00:21:21.466 A:middle
On the other hand, we won't
see what might be going on,

355
00:21:21.686 --> 00:21:23.276 A:middle
this is California after all.

356
00:21:23.636 --> 00:21:31.846 A:middle
And you can see that in this
app, I have a nice big title.

357
00:21:33.046 --> 00:21:35.706 A:middle
I have a label indicating

358
00:21:35.706 --> 00:21:37.226 A:middle
where a particular
earthquake happened.

359
00:21:37.226 --> 00:21:42.196 A:middle
I have a graphic indicating the
-- well, indicating the strength

360
00:21:42.196 --> 00:21:45.426 A:middle
or the severity of that
earthquake; the date and time

361
00:21:45.426 --> 00:21:48.176 A:middle
of that earthquake,
and its magnitude

362
00:21:48.176 --> 00:21:48.976 A:middle
on the Richter's scale.

363
00:21:50.036 --> 00:21:56.046 A:middle
And then when I press -- or when
I tap one of these earthquakes,

364
00:21:57.086 --> 00:22:00.466 A:middle
I also get an action
sheet allowing me to see

365
00:22:00.466 --> 00:22:02.946 A:middle
that earthquake on the U.S.
Geological Survey website

366
00:22:03.776 --> 00:22:07.456 A:middle
and to see its location in Maps.

367
00:22:08.056 --> 00:22:11.396 A:middle
Now there's a lot of strings,
a lot of text in this interface

368
00:22:12.686 --> 00:22:14.216 A:middle
and where does it all come from.

369
00:22:15.246 --> 00:22:17.796 A:middle
Well, I need to figure
that out to make sure

370
00:22:17.796 --> 00:22:20.286 A:middle
that my application is
properly internationalize.

371
00:22:20.926 --> 00:22:24.786 A:middle
So to start with let's take
a look at that action sheet.

372
00:22:25.396 --> 00:22:27.336 A:middle
I happen to know
that that's brought

373
00:22:27.336 --> 00:22:30.206 A:middle
up from my tableView's
delegate which happens

374
00:22:30.206 --> 00:22:31.716 A:middle
to be my mainView
Controller too.

375
00:22:32.536 --> 00:22:35.226 A:middle
And I just have a
straightforward method called

376
00:22:35.226 --> 00:22:38.926 A:middle
presentActionsForearthquake
that shows those actions.

377
00:22:39.516 --> 00:22:42.696 A:middle
And here you can
see that to present

378
00:22:42.696 --> 00:22:45.376 A:middle
that alert sheet I'm
using the new iOS 8 class,

379
00:22:45.796 --> 00:22:49.906 A:middle
UIAlertController or I'm
adding alert actions.

380
00:22:50.596 --> 00:22:56.736 A:middle
But here I'm just passing
the title the string directly

381
00:22:57.306 --> 00:22:58.896 A:middle
to my UIAlertAction.

382
00:23:00.006 --> 00:23:03.756 A:middle
That means that even if I'm
running this application

383
00:23:03.756 --> 00:23:08.606 A:middle
in Swedish or Hindi I'm still
going to see this English text.

384
00:23:08.606 --> 00:23:10.386 A:middle
So I'm just going to wrap this

385
00:23:10.736 --> 00:23:13.736 A:middle
in NSLocalizedString
like I showed you.

386
00:23:17.706 --> 00:23:19.316 A:middle
And I'm also going to put

387
00:23:19.316 --> 00:23:22.266 A:middle
in a comment indicating
what this string is for.

388
00:23:29.516 --> 00:23:34.766 A:middle
And that's all I have to do to
insure that this text will come

389
00:23:34.766 --> 00:23:37.866 A:middle
from my localized strings when
running in other languages.

390
00:23:38.546 --> 00:23:44.586 A:middle
Now I also have the same
problem with my mapsAction title

391
00:23:44.586 --> 00:23:46.126 A:middle
and even with my Cancel title.

392
00:23:46.126 --> 00:23:49.636 A:middle
I could adjust those
here but in the interest

393
00:23:49.636 --> 00:23:54.416 A:middle
of time let's just
pretend that I did.

394
00:23:54.646 --> 00:23:56.676 A:middle
Now there's of course
a bunch more text here.

395
00:23:57.006 --> 00:23:59.686 A:middle
I showed you the name
of the earthquake

396
00:23:59.686 --> 00:24:03.526 A:middle
or rather the location of
the earthquake and the dates

397
00:24:04.346 --> 00:24:06.486 A:middle
and the magnitude
of that earthquake.

398
00:24:07.246 --> 00:24:10.136 A:middle
Now those are going to
be in my tableView cell

399
00:24:10.566 --> 00:24:13.216 A:middle
because this is just a
standard tableView application.

400
00:24:14.616 --> 00:24:18.736 A:middle
And when I select my cell I have
a handy configureWithEarthquake

401
00:24:18.736 --> 00:24:22.086 A:middle
method that hooks up
my interface for me.

402
00:24:25.136 --> 00:24:29.266 A:middle
Now if I zoom in here a
little bit you can see

403
00:24:29.646 --> 00:24:32.206 A:middle
that I'm just passing
the location

404
00:24:32.576 --> 00:24:35.566 A:middle
of that earthquake straight
over to my location label.

405
00:24:36.146 --> 00:24:39.446 A:middle
And that's just text that
comes from the USGS data feed.

406
00:24:40.336 --> 00:24:44.866 A:middle
However I'm not passing the date
directly to that date label.

407
00:24:45.516 --> 00:24:48.616 A:middle
Instead I'm passing it
through a dateFormatter

408
00:24:48.616 --> 00:24:49.936 A:middle
that I've configured
as a property.

409
00:24:50.576 --> 00:24:53.416 A:middle
And the same is true
with my magnitude.

410
00:24:53.616 --> 00:24:54.906 A:middle
I'm not passing it directly.

411
00:24:55.316 --> 00:24:56.816 A:middle
I'm not using string of format.

412
00:24:57.396 --> 00:25:00.196 A:middle
Instead I'm passing it
through a numberFormatter.

413
00:25:01.136 --> 00:25:03.016 A:middle
I'm just going to Command
click that property

414
00:25:03.466 --> 00:25:05.126 A:middle
so that it shows in Xcode.

415
00:25:05.306 --> 00:25:07.016 A:middle
I'll scroll down just
a little bit here

416
00:25:07.016 --> 00:25:08.196 A:middle
so this is more visible.

417
00:25:08.426 --> 00:25:13.256 A:middle
And you can see that this
property is just a lazily

418
00:25:13.256 --> 00:25:17.946 A:middle
initialized numberFormatter
where I'm saying that I want

419
00:25:17.946 --> 00:25:20.946 A:middle
that magnitude to be
presented in a decimal format.

420
00:25:22.306 --> 00:25:26.306 A:middle
And because earthquakes
use a logarithmic scale,

421
00:25:27.406 --> 00:25:32.056 A:middle
we tend to always want to
present a fractional portion.

422
00:25:32.126 --> 00:25:37.256 A:middle
So I just tell my
formatter I always want

423
00:25:37.256 --> 00:25:38.536 A:middle
to show the decimal separator.

424
00:25:38.536 --> 00:25:42.296 A:middle
And that I want to show at
least one fractional digit

425
00:25:43.236 --> 00:25:46.396 A:middle
and actually so as to
avoid overflowing my label,

426
00:25:46.806 --> 00:25:48.506 A:middle
I only want to show
one fractional digit.

427
00:25:49.016 --> 00:25:55.066 A:middle
And for that date I'm just
telling my dateFormatter

428
00:25:55.066 --> 00:25:57.016 A:middle
that I want to use
a medium style

429
00:25:58.826 --> 00:26:01.906 A:middle
and for the time I want
to use a short style.

430
00:26:01.906 --> 00:26:04.826 A:middle
For the date I don't really
care if the earthquake happened

431
00:26:04.826 --> 00:26:06.816 A:middle
on a Saturday or a Wednesday.

432
00:26:07.076 --> 00:26:09.506 A:middle
I just care about the
actual day of the month

433
00:26:09.506 --> 00:26:10.706 A:middle
and the month and the year.

434
00:26:11.186 --> 00:26:14.476 A:middle
And for the time I don't really
care about the milliseconds

435
00:26:14.476 --> 00:26:17.196 A:middle
at least in this app, I
just want to know the --

436
00:26:17.196 --> 00:26:19.606 A:middle
to the minute time
of that earthquake.

437
00:26:20.226 --> 00:26:25.566 A:middle
So we've done a lot of
work to actually make sure

438
00:26:25.566 --> 00:26:28.586 A:middle
that we're getting everything
from localized resources

439
00:26:28.586 --> 00:26:30.906 A:middle
and that we're passing our
data through formatters.

440
00:26:31.766 --> 00:26:33.956 A:middle
Now what does that
actually get us?

441
00:26:34.136 --> 00:26:38.046 A:middle
Well, we haven't translated the
app yet but if I just stop it

442
00:26:38.376 --> 00:26:42.706 A:middle
and go to my Edit Scheme Sheet
I can look under the Options

443
00:26:43.586 --> 00:26:47.666 A:middle
and I have my Application
Language pop up

444
00:26:47.666 --> 00:26:50.036 A:middle
and my Application
Region pop up.

445
00:26:50.216 --> 00:26:52.716 A:middle
Now this is big menu so I
am going to zoom back out.

446
00:26:52.716 --> 00:26:55.226 A:middle
And I'm going to choose Sweden

447
00:26:55.696 --> 00:26:59.696 A:middle
so I can see how our manager
would see this application

448
00:27:00.516 --> 00:27:01.846 A:middle
when he's back home in Sweden.

449
00:27:01.846 --> 00:27:07.386 A:middle
I'm just going to close the
sheet and rerun my application.

450
00:27:08.456 --> 00:27:12.306 A:middle
And you can see that even though
the text is in English still,

451
00:27:12.986 --> 00:27:15.496 A:middle
a number of things about the
application have changed.

452
00:27:16.216 --> 00:27:19.406 A:middle
For example, the date and time
are presented differently.

453
00:27:20.136 --> 00:27:22.876 A:middle
In Sweden evidently the day

454
00:27:23.016 --> 00:27:25.466 A:middle
of the month comes
before the month whereas

455
00:27:25.466 --> 00:27:27.086 A:middle
in the United States we tend

456
00:27:27.086 --> 00:27:29.346 A:middle
to write the month
and then the day.

457
00:27:29.446 --> 00:27:34.016 A:middle
And in Sweden they use a 24 hour
clock instead of a 12 hour clock

458
00:27:34.016 --> 00:27:35.136 A:middle
like in the United States.

459
00:27:35.336 --> 00:27:38.726 A:middle
And finally one of the most
noticeable differences,

460
00:27:39.186 --> 00:27:43.156 A:middle
in Sweden the comma is the
decimal separator rather

461
00:27:43.156 --> 00:27:43.766 A:middle
than the period.

462
00:27:43.766 --> 00:27:46.856 A:middle
And the System Frameworks
handled

463
00:27:46.856 --> 00:27:49.596 A:middle
that for me just by
using a formatter.

464
00:27:55.296 --> 00:27:59.166 A:middle
Now let's take a look at our
interface in Interface Builder.

465
00:27:59.836 --> 00:28:03.816 A:middle
I'm just going to select
that earthquake scene

466
00:28:03.816 --> 00:28:05.816 A:middle
that I'm looking at
in the simulator.

467
00:28:06.116 --> 00:28:11.286 A:middle
And I'm going to bring
up the Preview Assistant

468
00:28:11.856 --> 00:28:16.166 A:middle
that we introduced in Xcode 5.

469
00:28:16.876 --> 00:28:24.126 A:middle
And here I can select the
Preview, and in addition

470
00:28:24.606 --> 00:28:27.786 A:middle
to allowing me to
preview the application

471
00:28:27.786 --> 00:28:29.206 A:middle
in different orientations

472
00:28:29.856 --> 00:28:34.096 A:middle
down in the lower right I can
also select a language in which

473
00:28:34.096 --> 00:28:35.346 A:middle
to preview the application.

474
00:28:36.506 --> 00:28:39.026 A:middle
So here if I move over
a little bit you can see

475
00:28:39.026 --> 00:28:41.656 A:middle
that I only have my
Development Language actually

476
00:28:41.736 --> 00:28:42.646 A:middle
in this project.

477
00:28:43.906 --> 00:28:47.206 A:middle
However under the
Separator I also have one

478
00:28:47.206 --> 00:28:48.776 A:middle
of those pseudo-languages
I mentioned.

479
00:28:49.126 --> 00:28:51.096 A:middle
A Double Length Pseudo-Language.

480
00:28:51.936 --> 00:28:55.946 A:middle
So if I select this and
zoom out, what do I see?

481
00:28:56.856 --> 00:29:01.116 A:middle
Well, all of my labels have
had their text doubled.

482
00:29:01.116 --> 00:29:05.176 A:middle
And this is to simulate
running your application

483
00:29:05.556 --> 00:29:07.296 A:middle
in a more verbose language,

484
00:29:07.296 --> 00:29:10.166 A:middle
a language that uses more
text to say something.

485
00:29:10.966 --> 00:29:15.986 A:middle
For example, German tends to
use about 30 percent more space

486
00:29:16.526 --> 00:29:18.926 A:middle
than English does to say
about the same thing.

487
00:29:19.616 --> 00:29:21.126 A:middle
On the other hand,
there are some languages

488
00:29:21.446 --> 00:29:25.326 A:middle
that use even less space than
English to say the same thing.

489
00:29:25.326 --> 00:29:29.566 A:middle
And your application's interface
needs to accommodate them all.

490
00:29:30.246 --> 00:29:35.016 A:middle
Fortunately Auto Layout will
do most of the work for you.

491
00:29:35.546 --> 00:29:38.586 A:middle
And this Preview
Assistant lets you see

492
00:29:38.586 --> 00:29:40.006 A:middle
that it's actually working.

493
00:29:41.376 --> 00:29:46.916 A:middle
For example, I actually do
have an Auto Layout issue

494
00:29:47.256 --> 00:29:48.456 A:middle
in this preview.

495
00:29:48.796 --> 00:29:52.066 A:middle
You can see that the
Magnitude field has an ellipsis

496
00:29:52.066 --> 00:29:56.796 A:middle
in it indicating that its
text is overflowing the label.

497
00:29:58.366 --> 00:30:01.306 A:middle
Now the largest earthquake
that's ever been recorded was a

498
00:30:01.306 --> 00:30:04.946 A:middle
9.5 so this probably
isn't an issue.

499
00:30:06.066 --> 00:30:07.116 A:middle
At least for this app.

500
00:30:07.446 --> 00:30:10.426 A:middle
However, it is something
that you'll probably want

501
00:30:10.426 --> 00:30:11.696 A:middle
to take into consideration.

502
00:30:12.256 --> 00:30:16.826 A:middle
Of course not all of the text
in this preview is doubled.

503
00:30:17.256 --> 00:30:20.076 A:middle
That's because this heading
that says Prototype Cells

504
00:30:20.296 --> 00:30:24.126 A:middle
and this background that says
Table View Prototype Content,

505
00:30:24.366 --> 00:30:25.676 A:middle
those are actually part

506
00:30:25.676 --> 00:30:27.706 A:middle
of Interface Builder's
user interface,

507
00:30:28.066 --> 00:30:30.966 A:middle
and not your own text.

508
00:30:32.576 --> 00:30:38.036 A:middle
Now if I wanted to localize this
graphic because it uses color

509
00:30:38.036 --> 00:30:42.056 A:middle
and color is another language
and region dependent piece

510
00:30:43.086 --> 00:30:47.726 A:middle
of information that would
also be very easy in Xcode.

511
00:30:48.826 --> 00:30:51.326 A:middle
I would just select the
image I want to localize

512
00:30:52.026 --> 00:30:56.496 A:middle
and then open the
Inspector and go

513
00:30:56.496 --> 00:30:59.336 A:middle
to the Inspector's
Localization section.

514
00:30:59.836 --> 00:31:02.496 A:middle
And we have this nice
big Localized button

515
00:31:02.766 --> 00:31:06.536 A:middle
that will turn any resource
into a localized resource.

516
00:31:07.596 --> 00:31:11.176 A:middle
And that button will just bring
up a pop up alert that asks

517
00:31:11.566 --> 00:31:12.686 A:middle
where I want --

518
00:31:12.806 --> 00:31:15.516 A:middle
what localization I
want that resource

519
00:31:15.586 --> 00:31:16.916 A:middle
to be a part of initially?

520
00:31:18.026 --> 00:31:22.206 A:middle
Now it can't actually be a part
of the base internationalization

521
00:31:22.806 --> 00:31:25.916 A:middle
because it doesn't have
a place as an image

522
00:31:26.486 --> 00:31:28.436 A:middle
into which I can
substitute strings.

523
00:31:29.286 --> 00:31:33.546 A:middle
However, I can make it a part
of my English localization.

524
00:31:34.436 --> 00:31:38.456 A:middle
And let's talk about
what we just saw.

525
00:31:38.916 --> 00:31:43.536 A:middle
We saw how the system
frameworks on iOS

526
00:31:44.186 --> 00:31:49.486 A:middle
and OS X will really do a lot
of the heavy lifting for you

527
00:31:49.486 --> 00:31:52.346 A:middle
in internationalization
and localization.

528
00:31:52.856 --> 00:31:56.516 A:middle
We saw how you can use
the debug-time preview

529
00:31:56.706 --> 00:32:00.416 A:middle
to check your region support
because after all even

530
00:32:00.416 --> 00:32:02.386 A:middle
if you don't localize
your application,

531
00:32:03.166 --> 00:32:06.266 A:middle
your users are still going to
be in different regions all

532
00:32:06.266 --> 00:32:08.866 A:middle
over the world and use
different conventions.

533
00:32:09.506 --> 00:32:14.006 A:middle
And we saw how you
can take advantage

534
00:32:14.416 --> 00:32:18.766 A:middle
of design-time previews and base
internationalizations to ensure

535
00:32:18.766 --> 00:32:22.546 A:middle
that your application is
properly reactive when it comes

536
00:32:22.546 --> 00:32:25.026 A:middle
to the length of text
in the interface.

537
00:32:25.756 --> 00:32:31.306 A:middle
And of course you can localize
other project resources too

538
00:32:31.636 --> 00:32:33.396 A:middle
as you need to.

539
00:32:33.826 --> 00:32:36.816 A:middle
Now to talk about the
actual process of localizing

540
00:32:36.816 --> 00:32:39.416 A:middle
and translating your
application I'm going

541
00:32:39.416 --> 00:32:40.776 A:middle
to hand things back to Zoltan.

542
00:32:41.516 --> 00:32:45.706 A:middle
[ Applause ]

543
00:32:46.206 --> 00:32:46.636 A:middle
&gt;&gt; Thanks, Chris.

544
00:32:47.816 --> 00:32:51.396 A:middle
So you saw how Chris prepared an
internationalized application.

545
00:32:52.646 --> 00:32:55.556 A:middle
He structured it to be
language and region independent.

546
00:32:56.936 --> 00:32:59.446 A:middle
And you saw how the
frameworks provided some

547
00:32:59.446 --> 00:33:03.646 A:middle
of the localized data for users
around the world for free.

548
00:33:03.956 --> 00:33:07.756 A:middle
So what's left to do?

549
00:33:07.986 --> 00:33:11.576 A:middle
Well, it turns out that the
bulk of the remaining work is

550
00:33:11.576 --> 00:33:13.696 A:middle
to translate your
User Facing Strings.

551
00:33:14.356 --> 00:33:19.936 A:middle
And this is still best done
by an expert in the language

552
00:33:21.166 --> 00:33:22.806 A:middle
and not just machine
translation.

553
00:33:23.896 --> 00:33:30.116 A:middle
So your challenge is to extract
those strings from your project.

554
00:33:31.516 --> 00:33:35.336 A:middle
Then patch them up from your
translator for your translator.

555
00:33:36.676 --> 00:33:38.186 A:middle
After they've translated
them you have

556
00:33:38.266 --> 00:33:40.996 A:middle
to integrate them back
into your projects.

557
00:33:41.726 --> 00:33:45.006 A:middle
Sounds like a lot of work.

558
00:33:45.216 --> 00:33:46.096 A:middle
Well, I'm pleased to announce

559
00:33:46.096 --> 00:33:51.326 A:middle
in Xcode 6 we've
streamlined the process.

560
00:33:51.326 --> 00:33:55.526 A:middle
Xcode will now carefully
examine your IB resources

561
00:33:55.736 --> 00:33:57.226 A:middle
and your source files

562
00:33:57.776 --> 00:34:00.176 A:middle
and extract the source
strings for you.

563
00:34:00.776 --> 00:34:05.126 A:middle
It will generate an
open XLIFF format.

564
00:34:05.326 --> 00:34:10.676 A:middle
Now this is that mature standard
that's accepted by a number

565
00:34:10.676 --> 00:34:14.085 A:middle
of translation companies around
the world and it's compatible

566
00:34:14.085 --> 00:34:15.866 A:middle
with a number of
translation tools.

567
00:34:17.176 --> 00:34:20.946 A:middle
So when translators
insert their work

568
00:34:20.946 --> 00:34:26.866 A:middle
into the XLIFF they then
return the XLIFF file to you

569
00:34:27.636 --> 00:34:30.206 A:middle
and then you simply
import it into your project

570
00:34:30.295 --> 00:34:34.775 A:middle
and then Xcode will meticulously
create the resources

571
00:34:34.775 --> 00:34:37.976 A:middle
or update existing resources
to put the translations

572
00:34:37.976 --> 00:34:39.146 A:middle
where they need to go.

573
00:34:40.065 --> 00:34:42.616 A:middle
So you no longer have
to run genstrings

574
00:34:42.616 --> 00:34:44.585 A:middle
or IB tool in order to do this.

575
00:34:45.516 --> 00:34:51.966 A:middle
[ Applause ]

576
00:34:52.466 --> 00:34:52.786 A:middle
Thank you.

577
00:34:53.616 --> 00:34:58.246 A:middle
I'd like to show you that now.

578
00:34:58.476 --> 00:35:01.066 A:middle
So here's the project that
Chris created earlier.

579
00:35:01.066 --> 00:35:05.316 A:middle
I'm just going to navigate to
the project where you find a lot

580
00:35:05.316 --> 00:35:08.366 A:middle
of the localization
related details.

581
00:35:09.086 --> 00:35:15.856 A:middle
So here you can see that at the
moment it's only got English

582
00:35:15.956 --> 00:35:17.026 A:middle
in this project.

583
00:35:22.156 --> 00:35:26.016 A:middle
So if I want to extract
the source strings

584
00:35:26.016 --> 00:35:28.366 A:middle
from this project, I simply
go up to the Editor menu

585
00:35:28.896 --> 00:35:30.776 A:middle
and choose Export
For Localization.

586
00:35:32.176 --> 00:35:34.626 A:middle
I choose a destination
in the Home folder.

587
00:35:35.826 --> 00:35:40.716 A:middle
And then Xcode generates
that XLIFF file based

588
00:35:40.716 --> 00:35:42.186 A:middle
on what it's found
in the projects

589
00:35:42.186 --> 00:35:43.456 A:middle
and I'll just show
you that quickly.

590
00:35:53.726 --> 00:35:59.326 A:middle
It's simply an XML file and
down here you can see the source

591
00:35:59.326 --> 00:36:03.106 A:middle
strings that Chris localized
or internationalized earlier

592
00:36:03.776 --> 00:36:06.246 A:middle
and the comments that he
added to the Translator.

593
00:36:06.846 --> 00:36:12.216 A:middle
So now imagine that I send
that to my translation team.

594
00:36:12.216 --> 00:36:15.086 A:middle
I would e-mail it or
upload it to their service.

595
00:36:15.606 --> 00:36:19.866 A:middle
And after they've
completed their work,

596
00:36:20.256 --> 00:36:23.216 A:middle
when I want to import
these translations,

597
00:36:23.946 --> 00:36:29.346 A:middle
I go back to the Editor menu
and choose Import Localizations.

598
00:36:29.836 --> 00:36:34.316 A:middle
Here's some prepared earlier.

599
00:36:34.886 --> 00:36:38.316 A:middle
Now I've heard that
smorgasbord is grace in Sweden

600
00:36:38.316 --> 00:36:40.826 A:middle
but personally I
prefer curry in India.

601
00:36:41.256 --> 00:36:42.936 A:middle
So we've got some
Hindi translations.

602
00:36:43.616 --> 00:36:52.026 A:middle
And Xcode is inserting those
translations into the project.

603
00:36:53.396 --> 00:37:00.866 A:middle
Now you can see that Hindi is
added to the project and that

604
00:37:01.176 --> 00:37:03.846 A:middle
when I disclose the
storyboard variant group,

605
00:37:05.176 --> 00:37:07.926 A:middle
there's string files
waiting for us.

606
00:37:11.736 --> 00:37:17.146 A:middle
And if choose to run this
application I'll use the new

607
00:37:17.146 --> 00:37:18.896 A:middle
debug-time menu.

608
00:37:19.256 --> 00:37:22.676 A:middle
I'll choose Hindi.

609
00:37:22.936 --> 00:37:28.956 A:middle
I'll choose to preview
it as if a user in India.

610
00:37:36.036 --> 00:37:39.236 A:middle
And now you can see that
beautiful script in place.

611
00:37:40.806 --> 00:37:42.046 A:middle
The dates have changed.

612
00:37:42.886 --> 00:37:43.736 A:middle
The region --

613
00:37:43.736 --> 00:37:46.546 A:middle
the numberFormatter is
the same as in the U.S..

614
00:37:46.546 --> 00:37:50.426 A:middle
And this is one of the things I
like about the Preview feature,

615
00:37:50.876 --> 00:37:54.766 A:middle
it's immediately obvious that
this is not in the right script,

616
00:37:54.956 --> 00:37:56.626 A:middle
the title of this event.

617
00:37:57.336 --> 00:38:01.586 A:middle
So in this case you would
ideally use a localized feed.

618
00:38:01.586 --> 00:38:06.406 A:middle
I also like to point out this is
available on the Command line.

619
00:38:07.286 --> 00:38:10.426 A:middle
So you can now use
the exportLocalization

620
00:38:10.526 --> 00:38:13.576 A:middle
and importLocalization
verbs to build this

621
00:38:13.576 --> 00:38:16.076 A:middle
into your localization workflows

622
00:38:16.076 --> 00:38:17.976 A:middle
and to automate this
process as you want.

623
00:38:18.516 --> 00:38:24.856 A:middle
[ Applause ]

624
00:38:25.356 --> 00:38:30.226 A:middle
So you've seen how Xcode 6 will
now streamline this process

625
00:38:30.226 --> 00:38:31.826 A:middle
of localizing your application.

626
00:38:32.776 --> 00:38:38.756 A:middle
How it will help you to
communicate with your translator

627
00:38:39.056 --> 00:38:40.926 A:middle
in this open XLIFF format.

628
00:38:41.666 --> 00:38:45.716 A:middle
So now that you've got
a localized application,

629
00:38:45.716 --> 00:38:49.286 A:middle
you'd like to keep it that way.

630
00:38:49.876 --> 00:38:53.896 A:middle
And you'd like to build
confidence that it is going

631
00:38:53.936 --> 00:38:56.026 A:middle
to appeal to a global audience.

632
00:38:56.256 --> 00:39:00.136 A:middle
And so I'd like to invite Chris
back on the stage to show you

633
00:39:00.316 --> 00:39:03.816 A:middle
to best maintain this
application and build confidence

634
00:39:04.096 --> 00:39:05.726 A:middle
that it's ready for
a global audience.

635
00:39:06.326 --> 00:39:07.066 A:middle
&gt;&gt; Thank you, Zoltan.

636
00:39:07.476 --> 00:39:08.246 A:middle
That's pretty cool stuff.

637
00:39:08.936 --> 00:39:12.296 A:middle
So of course you
probably don't want

638
00:39:12.296 --> 00:39:16.756 A:middle
to put off localizing your
application until the very end

639
00:39:16.756 --> 00:39:17.996 A:middle
of your development process.

640
00:39:18.516 --> 00:39:21.536 A:middle
That sounds a lot like waterfall
development and we really want

641
00:39:21.536 --> 00:39:22.836 A:middle
to be iterative these days.

642
00:39:24.216 --> 00:39:26.756 A:middle
And the expert and
import workflow

643
00:39:26.756 --> 00:39:29.806 A:middle
that Zoltan showed you
allows you to do that.

644
00:39:29.806 --> 00:39:32.236 A:middle
It allows you to do
what I like to think

645
00:39:32.236 --> 00:39:34.746 A:middle
of as continuous localization

646
00:39:35.056 --> 00:39:37.866 A:middle
because you can export
and import at will.

647
00:39:38.316 --> 00:39:41.516 A:middle
This lets you stay
localized as you work

648
00:39:42.506 --> 00:39:45.846 A:middle
and you can use previews
to catch missing

649
00:39:45.846 --> 00:39:49.266 A:middle
or bogus translations
very easily.

650
00:39:49.816 --> 00:39:54.936 A:middle
And we even include some tools

651
00:39:55.246 --> 00:39:58.426 A:middle
that let you prepare your
application for right

652
00:39:58.426 --> 00:40:03.086 A:middle
to left languages like Arabic
and Hebrew independently

653
00:40:03.256 --> 00:40:06.816 A:middle
of translating your application
into those languages.

654
00:40:07.256 --> 00:40:11.756 A:middle
That can make it much easier
to actually experiment

655
00:40:11.756 --> 00:40:15.236 A:middle
with your user interface
even if you don't speak

656
00:40:15.236 --> 00:40:16.986 A:middle
or read Arabic or Hebrew.

657
00:40:17.586 --> 00:40:23.606 A:middle
So I'd like just like to
show you that right in Xcode.

658
00:40:26.496 --> 00:40:30.176 A:middle
So let's say I've been working
on my project for a while.

659
00:40:30.906 --> 00:40:34.246 A:middle
And I've just received my
Spanish translation back

660
00:40:34.456 --> 00:40:35.386 A:middle
from my translator.

661
00:40:36.776 --> 00:40:39.856 A:middle
To import it all I have to do is

662
00:40:40.116 --> 00:40:43.756 A:middle
as Zoltan showed
select My Project

663
00:40:43.996 --> 00:40:47.616 A:middle
and then choose Import
Localizations and I'm going

664
00:40:47.616 --> 00:40:50.556 A:middle
to pull in my Spanish
XLIFF file.

665
00:40:50.556 --> 00:40:54.566 A:middle
Now what happened here?

666
00:40:55.306 --> 00:40:58.506 A:middle
Unlike what Zoltan showed
you with Hindi there appears

667
00:40:58.556 --> 00:41:00.446 A:middle
to be an issue with
this translation.

668
00:41:01.816 --> 00:41:07.056 A:middle
Well, it turns out that it's
missing the Show Location

669
00:41:07.056 --> 00:41:08.216 A:middle
and Maps functionality.

670
00:41:08.876 --> 00:41:10.736 A:middle
I must have actually
exporting this

671
00:41:10.736 --> 00:41:15.996 A:middle
for localization before I
added that feature to my app.

672
00:41:16.276 --> 00:41:17.426 A:middle
But that's okay.

673
00:41:18.096 --> 00:41:21.846 A:middle
I can still import this
incomplete localization

674
00:41:22.256 --> 00:41:27.396 A:middle
and at least see my application
as it is right now with all

675
00:41:27.396 --> 00:41:30.236 A:middle
of the localization that has
been completed for Spanish.

676
00:41:31.516 --> 00:41:33.706 A:middle
So I'm just going
to import that.

677
00:41:34.406 --> 00:41:36.576 A:middle
And if I just close
my storyboard here,

678
00:41:36.896 --> 00:41:39.076 A:middle
I can see that now
I have strings

679
00:41:39.076 --> 00:41:42.046 A:middle
in both Hindi and
Spanish for it.

680
00:41:44.556 --> 00:41:48.916 A:middle
Now if I want to see how my
application actually runs,

681
00:41:49.036 --> 00:41:51.706 A:middle
as always, I can just choose
my Application Language,

682
00:41:51.706 --> 00:41:54.816 A:middle
in this case Spanish now that
I've added that localization.

683
00:41:55.626 --> 00:42:00.886 A:middle
And I'll also choose the Spain
region so I can see how somebody

684
00:42:00.886 --> 00:42:05.276 A:middle
who speaks Spanish in Spain
would see my application.

685
00:42:05.886 --> 00:42:10.476 A:middle
Now if I run this, I see

686
00:42:10.476 --> 00:42:14.076 A:middle
that earthquakes
here isn't localized.

687
00:42:15.276 --> 00:42:18.746 A:middle
That must have been another
thing that my translator missed.

688
00:42:19.886 --> 00:42:27.276 A:middle
And if I tap an earthquake, I
can see that one of my actions

689
00:42:27.456 --> 00:42:31.566 A:middle
and the Cancel button are
translated but that button

690
00:42:31.566 --> 00:42:37.196 A:middle
that I called out
earlier has not been.

691
00:42:37.356 --> 00:42:40.396 A:middle
Now if I wanted to see this
right in Interface Builder,

692
00:42:41.126 --> 00:42:44.696 A:middle
I could select my main
storyboard and let's just select

693
00:42:44.696 --> 00:42:48.056 A:middle
that earthquake scene and bring
up the Preview window again.

694
00:42:49.566 --> 00:42:54.456 A:middle
The Preview Assistant
I should say.

695
00:42:54.626 --> 00:42:56.886 A:middle
And if I choose my
Spanish localization

696
00:42:56.886 --> 00:43:00.196 A:middle
in Interface Builder,
I can see that some

697
00:43:00.196 --> 00:43:02.426 A:middle
of my placeholder labels
have been translated.

698
00:43:03.966 --> 00:43:09.686 A:middle
However, this earthquake's
title is not only all in English

699
00:43:10.106 --> 00:43:13.256 A:middle
but it's actually been
changed to all capital letters.

700
00:43:13.406 --> 00:43:16.946 A:middle
And that's actually the
frameworks calling out to me

701
00:43:17.396 --> 00:43:20.526 A:middle
that they recognize that
this should be coming

702
00:43:20.816 --> 00:43:24.856 A:middle
from a localized resource
but it wasn't found.

703
00:43:26.396 --> 00:43:30.316 A:middle
And I can get the same effect
in the Edit Scheme Sheet

704
00:43:30.456 --> 00:43:31.766 A:middle
when running my application

705
00:43:32.796 --> 00:43:37.066 A:middle
by choosing this new Show
non-localized strings option.

706
00:43:37.796 --> 00:43:43.076 A:middle
So if just stop and
rerun my application now

707
00:43:43.076 --> 00:43:44.096 A:middle
that I've seen -- set that,

708
00:43:44.776 --> 00:43:47.976 A:middle
I can see that earthquakes
is called

709
00:43:47.976 --> 00:43:49.536 A:middle
out in all capital letters.

710
00:43:50.516 --> 00:43:59.826 A:middle
[ Applause ]

711
00:44:00.326 --> 00:44:03.916 A:middle
Now I said you can
export and import at will.

712
00:44:04.576 --> 00:44:07.516 A:middle
And one reason that
you'll want to export is

713
00:44:07.516 --> 00:44:10.066 A:middle
because you'll be
adding features

714
00:44:10.066 --> 00:44:11.326 A:middle
to your application as you go.

715
00:44:11.326 --> 00:44:13.406 A:middle
And you'll want those
new features

716
00:44:13.406 --> 00:44:15.126 A:middle
that you add to be translated.

717
00:44:15.726 --> 00:44:19.976 A:middle
And you export in exactly
the same way no matter

718
00:44:19.976 --> 00:44:21.576 A:middle
when you do it.

719
00:44:21.576 --> 00:44:24.186 A:middle
You simply select your
project and choose Export

720
00:44:24.186 --> 00:44:28.776 A:middle
For Localization but I've
already added some localizations

721
00:44:28.776 --> 00:44:30.936 A:middle
to this app so what happens?

722
00:44:31.636 --> 00:44:35.346 A:middle
Well, Xcode gives me a
choice of whether I just want

723
00:44:35.346 --> 00:44:40.186 A:middle
to export strings in the
Development Language or if

724
00:44:40.316 --> 00:44:42.326 A:middle
when generating the XLIFF files,

725
00:44:43.296 --> 00:44:45.836 A:middle
it should already
include the strings

726
00:44:46.406 --> 00:44:48.506 A:middle
in the translations that it has.

727
00:44:49.426 --> 00:44:54.326 A:middle
This way I can hand those
XLIFF files to my translators

728
00:44:54.656 --> 00:44:56.496 A:middle
and they can see the work

729
00:44:56.496 --> 00:45:00.626 A:middle
that they've already
done and won't redo it.

730
00:45:00.986 --> 00:45:04.096 A:middle
Instead they'll only
do the work needed

731
00:45:04.396 --> 00:45:06.446 A:middle
for the new and changed strings.

732
00:45:07.166 --> 00:45:11.356 A:middle
So if I save this and replace
the one that was already there,

733
00:45:11.356 --> 00:45:14.846 A:middle
I can see now in the Home folder

734
00:45:16.016 --> 00:45:22.336 A:middle
that I have three exported
localizations in XLIFF format.

735
00:45:22.836 --> 00:45:25.396 A:middle
One in English, one in
Spanish, and one in Hindi.

736
00:45:29.436 --> 00:45:32.706 A:middle
Now finally I'd like to show
you what your app would look

737
00:45:32.706 --> 00:45:34.866 A:middle
like in a right to
left language.

738
00:45:35.286 --> 00:45:38.166 A:middle
For convenience we're just going
to bring up the storyboard again

739
00:45:38.896 --> 00:45:40.476 A:middle
so we have something
to compare against.

740
00:45:43.366 --> 00:45:46.886 A:middle
Stop my app from running in
the simulator and I'm going

741
00:45:46.886 --> 00:45:48.576 A:middle
to Edit My Scheme once more.

742
00:45:49.646 --> 00:45:51.596 A:middle
This time I'm just going
to set my region back

743
00:45:51.596 --> 00:45:54.976 A:middle
to the System Region but
I'm going to set my language

744
00:45:55.616 --> 00:45:59.096 A:middle
to the new Right to
Left Pseudo-Language.

745
00:46:00.576 --> 00:46:06.026 A:middle
Now when you're using a right
to left language on an iPhone

746
00:46:06.026 --> 00:46:11.166 A:middle
or an iPad or a Mac,
it's not just the text

747
00:46:11.796 --> 00:46:12.956 A:middle
that goes from right to left.

748
00:46:13.716 --> 00:46:19.236 A:middle
The entire direction of the
user interface is changed based

749
00:46:19.236 --> 00:46:22.536 A:middle
on how the user prefers to read.

750
00:46:23.136 --> 00:46:27.456 A:middle
I'll just also turn off my
Show non-localized strings

751
00:46:27.496 --> 00:46:28.046 A:middle
setting here.

752
00:46:28.046 --> 00:46:32.016 A:middle
And let's see how
Auto Layout reacts

753
00:46:32.266 --> 00:46:35.076 A:middle
to just changing the
user interface direction.

754
00:46:39.776 --> 00:46:43.506 A:middle
Well, because we use the
concept of leading edge

755
00:46:43.506 --> 00:46:46.416 A:middle
and trailing edge rather
than left and right

756
00:46:47.126 --> 00:46:50.556 A:middle
in our Auto Layout for this app,

757
00:46:51.076 --> 00:46:55.816 A:middle
most of the app just flipped
right to left, just as an Arabic

758
00:46:55.816 --> 00:46:58.166 A:middle
or Hebrew user would see it.

759
00:46:58.936 --> 00:47:02.886 A:middle
We have our magnitude all
the way on the left instead

