

1
00:00:00.506 --> 00:00:12.706 A:middle
[ Silence ]

2
00:00:13.206 --> 00:00:15.056 A:middle
&gt;&gt; Good afternoon, everyone.

3
00:00:15.776 --> 00:00:16.446 A:middle
How you guys doing?

4
00:00:16.446 --> 00:00:18.466 A:middle
Oh, that was weak.

5
00:00:18.466 --> 00:00:18.976 A:middle
Yeah, there we go.

6
00:00:19.516 --> 00:00:21.556 A:middle
[ Applause ]

7
00:00:22.056 --> 00:00:22.746 A:middle
I could have made
a joke and said

8
00:00:22.746 --> 00:00:24.576 A:middle
that was unowned but I won't.

9
00:00:24.576 --> 00:00:29.056 A:middle
So this session is called
What's New in Interface Builder

10
00:00:29.056 --> 00:00:31.906 A:middle
or as we were joking
earlier maybe What Isn't New

11
00:00:31.906 --> 00:00:32.706 A:middle
in Interface Builder.

12
00:00:33.306 --> 00:00:35.846 A:middle
We have all kinds of great
stuff for you guys today.

13
00:00:35.846 --> 00:00:37.246 A:middle
And so my name is Kevin Cathey.

14
00:00:37.246 --> 00:00:39.816 A:middle
I'm one of the Interface
Builder Engineers and me

15
00:00:39.816 --> 00:00:42.556 A:middle
and my colleague Quinn who'll
be joining us later are going

16
00:00:42.556 --> 00:00:44.756 A:middle
to be walking you through
some of what's new.

17
00:00:45.246 --> 00:00:46.586 A:middle
Now we're going to
show you some stuff

18
00:00:46.636 --> 00:00:48.186 A:middle
that you might not
have seen yet.

19
00:00:48.186 --> 00:00:50.606 A:middle
And we're also going to go
into more detail about some

20
00:00:50.606 --> 00:00:53.376 A:middle
of the things that you have
seen so far at this conference.

21
00:00:53.606 --> 00:00:57.496 A:middle
So what we have today
conveniently falls into a couple

22
00:00:57.496 --> 00:00:58.616 A:middle
of themes, themes that
you're going to be --

23
00:00:58.616 --> 00:01:00.686 A:middle
have been familiar with
so far in the conference.

24
00:01:01.006 --> 00:01:02.756 A:middle
The first one is Liveness.

25
00:01:03.116 --> 00:01:05.836 A:middle
Now I don't know about you but I
like seeing what I'm working on.

26
00:01:06.466 --> 00:01:08.626 A:middle
And so as I work on my
code we have features

27
00:01:08.626 --> 00:01:13.076 A:middle
to bring your content, your
code, your custom stuff right

28
00:01:13.076 --> 00:01:14.296 A:middle
into the interface
builder canvas.

29
00:01:14.636 --> 00:01:16.316 A:middle
I think we really want
to help you guys get

30
00:01:16.316 --> 00:01:17.946 A:middle
to your vision faster

31
00:01:18.346 --> 00:01:21.066 A:middle
and to have some fun
while you do it, too.

32
00:01:21.326 --> 00:01:22.656 A:middle
Next is Adaptability.

33
00:01:22.776 --> 00:01:24.716 A:middle
And I love this about
our platforms.

34
00:01:24.716 --> 00:01:27.236 A:middle
It's all the places
that your apps can run.

35
00:01:27.426 --> 00:01:28.246 A:middle
Let's think about it.

36
00:01:28.246 --> 00:01:32.786 A:middle
We've got iPhone, iPad,
Portrait, Landscape, OS X, iOS,

37
00:01:32.786 --> 00:01:34.656 A:middle
and then throw in all
the languages, too.

38
00:01:35.106 --> 00:01:37.586 A:middle
Don't you love getting those
bugs that are like, hey,

39
00:01:37.586 --> 00:01:38.746 A:middle
there's this bug
in this language?

40
00:01:38.746 --> 00:01:40.946 A:middle
And I look at it and I'm like I
haven't heard of that language

41
00:01:40.946 --> 00:01:42.366 A:middle
and I just think that's
something that's great

42
00:01:42.366 --> 00:01:43.646 A:middle
about our platforms --

43
00:01:43.646 --> 00:01:46.636 A:middle
and as application developers
you're probably all well aware

44
00:01:46.876 --> 00:01:47.826 A:middle
of this.

45
00:01:48.396 --> 00:01:49.936 A:middle
Third is Power and Parity.

46
00:01:50.416 --> 00:01:53.726 A:middle
iOS and OS X have taken some
great steps toward each other

47
00:01:53.726 --> 00:01:55.686 A:middle
this year and I think
one of the places

48
00:01:55.686 --> 00:01:59.416 A:middle
that this is really illustrated
best is in Interface Builder.

49
00:01:59.546 --> 00:02:02.196 A:middle
And so we've got some tools
to help you seamlessly work

50
00:02:02.196 --> 00:02:05.806 A:middle
between both of our platforms
using really familiar

51
00:02:05.836 --> 00:02:07.456 A:middle
technologies and workflows.

52
00:02:08.346 --> 00:02:09.776 A:middle
So what's our plan for today?

53
00:02:09.776 --> 00:02:10.916 A:middle
How are we going to do this?

54
00:02:11.246 --> 00:02:12.576 A:middle
Well, my co-worker
started an app

55
00:02:12.866 --> 00:02:15.896 A:middle
and then he conveniently
left for vacation this week.

56
00:02:15.896 --> 00:02:17.346 A:middle
And so he didn't have
a chance to finish it.

57
00:02:17.346 --> 00:02:19.536 A:middle
So we're going to finish
it for him on stage.

58
00:02:20.156 --> 00:02:21.146 A:middle
And here's the ironic thing.

59
00:02:21.456 --> 00:02:23.626 A:middle
The app is actually
about going on vacation

60
00:02:23.626 --> 00:02:25.156 A:middle
and sharing your
photos while you're

61
00:02:25.156 --> 00:02:27.276 A:middle
on vacation and rating those.

62
00:02:27.596 --> 00:02:29.836 A:middle
And so we're going to get to
look at my co-worker's photos

63
00:02:29.836 --> 00:02:31.946 A:middle
as he enjoys a drink
by the beach and Quinn

64
00:02:31.946 --> 00:02:33.046 A:middle
and I give this presentation.

65
00:02:33.246 --> 00:02:35.396 A:middle
So we have a list of sites here.

66
00:02:35.396 --> 00:02:37.846 A:middle
That little ring on the
outside is showing kind

67
00:02:37.976 --> 00:02:40.766 A:middle
of the popularity of that
particular destination.

68
00:02:41.256 --> 00:02:44.536 A:middle
Hawaii and London,
apparently great places to go.

69
00:02:44.536 --> 00:02:45.936 A:middle
I've never actually
been to either of those.

70
00:02:46.336 --> 00:02:49.936 A:middle
But New York, apparently not
the most fun place to visit.

71
00:02:50.026 --> 00:02:51.976 A:middle
It must be that the pizza
isn't as good as Chicago.

72
00:02:52.516 --> 00:02:56.556 A:middle
[ Cheering and Applause ]

73
00:02:57.056 --> 00:02:59.166 A:middle
Now if I tap on one of these
sites it's going to slide over

74
00:02:59.166 --> 00:03:00.106 A:middle
and give me a little slideshow.

75
00:03:00.106 --> 00:03:01.366 A:middle
I can rate my photos.

76
00:03:02.036 --> 00:03:03.766 A:middle
And then, here's
the iPad version,

77
00:03:04.426 --> 00:03:06.506 A:middle
and you might notice a few
little differences here.

78
00:03:06.506 --> 00:03:09.176 A:middle
So, for one, we have a
caption, and then, two,

79
00:03:09.176 --> 00:03:12.326 A:middle
that rating is kind of [whoosh]
moved over to the side there.

80
00:03:12.356 --> 00:03:16.606 A:middle
I'm also a photo nerd so I love
to know how you took your photo.

81
00:03:16.726 --> 00:03:18.656 A:middle
So if you tap that little
Details button, you're going

82
00:03:18.656 --> 00:03:20.846 A:middle
to pop over with some
location data and things

83
00:03:20.846 --> 00:03:22.686 A:middle
like the shutter
speed and f-stop.

84
00:03:23.386 --> 00:03:27.286 A:middle
So I think the best way to do
this is just to jump into a demo

85
00:03:27.286 --> 00:03:28.786 A:middle
and start making
this app awesome.

86
00:03:30.706 --> 00:03:31.656 A:middle
All right.

87
00:03:31.726 --> 00:03:34.926 A:middle
So I have my storyboard
here and I have the mockup

88
00:03:35.186 --> 00:03:36.846 A:middle
that I showed you
earlier from my designer.

89
00:03:36.846 --> 00:03:38.816 A:middle
This is kind of a reference
and we'll use it as we go

90
00:03:38.816 --> 00:03:39.786 A:middle
through our presentation.

91
00:03:39.866 --> 00:03:44.096 A:middle
So in terms of strategy and
just kind of starting your app,

92
00:03:44.186 --> 00:03:45.766 A:middle
the thing that I like
to do personally is I

93
00:03:45.766 --> 00:03:49.076 A:middle
like to get all my views laid
out first and then kind of fill

94
00:03:49.076 --> 00:03:50.036 A:middle
in the custom content.

95
00:03:50.386 --> 00:03:52.286 A:middle
So let's start by
adding constraints

96
00:03:52.286 --> 00:03:53.346 A:middle
for our table view cell here.

97
00:03:54.336 --> 00:03:56.716 A:middle
This box is going to our --

98
00:03:56.786 --> 00:03:59.756 A:middle
that circle tile view that
we'll fill in a little bit.

99
00:03:59.886 --> 00:04:00.826 A:middle
There's a couple of ways

100
00:04:00.826 --> 00:04:02.286 A:middle
to add constraints
in Interface Builder.

101
00:04:02.286 --> 00:04:04.796 A:middle
One, I can just easily
control drag to add

102
00:04:04.796 --> 00:04:06.926 A:middle
like a spacing constraint
for this view.

103
00:04:07.556 --> 00:04:10.676 A:middle
I can also use the
constraint popover here,

104
00:04:11.316 --> 00:04:12.896 A:middle
and this gives me some
additional features

105
00:04:12.896 --> 00:04:15.086 A:middle
for being able to pick
constants right on the fly,

106
00:04:15.086 --> 00:04:18.216 A:middle
pick a different object to
constrain to, things like that.

107
00:04:19.136 --> 00:04:22.676 A:middle
So now that our tile view
has got position and height,

108
00:04:22.906 --> 00:04:24.166 A:middle
well, what about width?

109
00:04:24.166 --> 00:04:26.286 A:middle
Well, we could add an explicit
width constraint but then

110
00:04:26.676 --> 00:04:28.506 A:middle
if I were to go change the
height of my table view cell,

111
00:04:28.506 --> 00:04:30.376 A:middle
I've got to go update it in
all these different spots.

112
00:04:30.776 --> 00:04:33.676 A:middle
So what I really want
to express is just

113
00:04:33.676 --> 00:04:36.546 A:middle
that this view should have the
same width as the same height.

114
00:04:36.546 --> 00:04:38.556 A:middle
And this is what's new since
last year which is the ability

115
00:04:38.556 --> 00:04:39.726 A:middle
to create aspect ratios.

116
00:04:40.796 --> 00:04:44.196 A:middle
With the tile view now in
the spot that we want it,

117
00:04:44.196 --> 00:04:45.086 A:middle
let's work on these labels.

118
00:04:45.086 --> 00:04:47.216 A:middle
So I'm just going to grab
the label and just drag it

119
00:04:47.216 --> 00:04:49.066 A:middle
up in this spot, in
the position here.

120
00:04:49.856 --> 00:04:51.296 A:middle
And I can create
multiple constraints

121
00:04:51.296 --> 00:04:54.136 A:middle
at once using Control
Drag by holding the Shift

122
00:04:54.136 --> 00:04:56.466 A:middle
or the Command key and
then just hitting Return.

123
00:04:57.536 --> 00:04:59.496 A:middle
Now if I look back at my mockup,

124
00:04:59.786 --> 00:05:04.356 A:middle
you can see that the text
is really not centered

125
00:05:04.356 --> 00:05:04.956 A:middle
with the tile view.

126
00:05:04.956 --> 00:05:06.606 A:middle
It's kind of like the
bottom of the text isn't

127
00:05:06.606 --> 00:05:08.976 A:middle
in the center this
particular tile view.

128
00:05:09.616 --> 00:05:11.556 A:middle
So now what we can do,
new since last year,

129
00:05:11.556 --> 00:05:12.676 A:middle
is we can actually go ahead

130
00:05:12.676 --> 00:05:15.076 A:middle
and change the attributes
involved in my constraint.

131
00:05:15.346 --> 00:05:18.096 A:middle
If I just open up the Attributes
Inspector for my constraint,

132
00:05:18.246 --> 00:05:23.056 A:middle
you can see now I can see the
Items and their attributes,

133
00:05:23.456 --> 00:05:25.376 A:middle
and I can just go ahead and
change this from Center Y

134
00:05:26.156 --> 00:05:29.666 A:middle
to Bottom, which is going to
move it down to the other side.

135
00:05:30.046 --> 00:05:31.806 A:middle
But one thing you'll notice is

136
00:05:31.806 --> 00:05:33.716 A:middle
that it didn't do
exactly what I expected.

137
00:05:34.186 --> 00:05:35.566 A:middle
So what's going on here?

138
00:05:35.706 --> 00:05:38.736 A:middle
Well, one of the things that I
notice is that I was thinking

139
00:05:38.736 --> 00:05:41.746 A:middle
about it in terms of the label,
not in terms of the view.

140
00:05:42.146 --> 00:05:44.076 A:middle
So another thing that our
Inspector gives us is the

141
00:05:44.076 --> 00:05:47.346 A:middle
ability to reverse the pieces
of the Constraint in a way

142
00:05:47.346 --> 00:05:48.486 A:middle
that makes sense to you.

143
00:05:48.586 --> 00:05:50.246 A:middle
So let me undo that change.

144
00:05:51.146 --> 00:05:54.406 A:middle
And if I open this up again,
I can select Reverse First

145
00:05:54.406 --> 00:05:56.956 A:middle
and Second Item, and it
just flips the Constraint.

146
00:05:56.956 --> 00:05:58.426 A:middle
This is mathematically
equivalent

147
00:05:58.426 --> 00:06:00.876 A:middle
to the other Constraint but
I can express it in a way

148
00:06:00.876 --> 00:06:01.746 A:middle
that makes sense to me.

149
00:06:02.736 --> 00:06:06.816 A:middle
And now I can say, okay,
the label's Bottom should be

150
00:06:06.816 --> 00:06:08.706 A:middle
at the View's Center Y.

151
00:06:09.366 --> 00:06:12.506 A:middle
Now one new field that you
might have noticed here is

152
00:06:12.506 --> 00:06:13.226 A:middle
the Multiplier.

153
00:06:13.566 --> 00:06:16.036 A:middle
So this is what enables
things like aspect ratios

154
00:06:16.036 --> 00:06:18.836 A:middle
and also proportional sizing
constraints and there's a couple

155
00:06:18.836 --> 00:06:20.796 A:middle
of different ways I can
insert a multiplier depending

156
00:06:20.796 --> 00:06:21.706 A:middle
on my situation.

157
00:06:22.106 --> 00:06:24.556 A:middle
So if I'm thinking about it
in terms of an aspect ratio,

158
00:06:24.556 --> 00:06:26.496 A:middle
I can do something like 1:4.

159
00:06:27.296 --> 00:06:31.356 A:middle
And you can see that now that
label's Bottom is in a ratio

160
00:06:31.356 --> 00:06:34.176 A:middle
of 1 to 4 with the
Center Y of my tile view.

161
00:06:34.966 --> 00:06:35.476 A:middle
But you know what?

162
00:06:35.476 --> 00:06:37.466 A:middle
Fractions might make more
sense to me so I'm going

163
00:06:37.466 --> 00:06:38.496 A:middle
to use a fraction instead.

164
00:06:38.496 --> 00:06:40.196 A:middle
So I can just type
in a fraction.

165
00:06:40.856 --> 00:06:45.506 A:middle
Or, of course, decimal numbers
are also applicable as well.

166
00:06:46.386 --> 00:06:48.646 A:middle
So our Tile Label is
now in the right spot.

167
00:06:48.646 --> 00:06:49.716 A:middle
So let's do this Sub-Label.

168
00:06:50.226 --> 00:06:52.416 A:middle
So I can just drag
this into position.

169
00:06:53.416 --> 00:06:55.276 A:middle
And I'm just going to
do two more constraints

170
00:06:55.626 --> 00:06:58.106 A:middle
to get my views all laid out.

171
00:06:58.526 --> 00:07:02.146 A:middle
And I can show this by
resizing my Table View.

172
00:07:02.146 --> 00:07:04.866 A:middle
Now, one of the things
I love about getting

173
00:07:04.866 --> 00:07:07.646 A:middle
to show Xcode is giving you
guys a few tips and tricks

174
00:07:07.646 --> 00:07:09.436 A:middle
for being even more
productive in Xcode.

175
00:07:09.436 --> 00:07:11.496 A:middle
So this is going to
be Pro Tip Number 1.

176
00:07:12.256 --> 00:07:14.926 A:middle
If I hold Shift when
I right-click

177
00:07:15.046 --> 00:07:17.376 A:middle
in the canvas it will give
me a menu of everything

178
00:07:17.376 --> 00:07:19.856 A:middle
under the mouse at the
point that I clicked.

179
00:07:20.166 --> 00:07:22.316 A:middle
So if I want to quickly
get to my Table View cell,

180
00:07:22.626 --> 00:07:27.156 A:middle
I just do that and select
it and now I'm ready to go.

181
00:07:27.346 --> 00:07:31.386 A:middle
If I resize my Table View cell,
you can see those constraints,

182
00:07:31.766 --> 00:07:34.626 A:middle
they're doing exactly
what I want.

183
00:07:34.626 --> 00:07:37.826 A:middle
I'm going to go ahead
and undo that change.

184
00:07:38.706 --> 00:07:39.556 A:middle
All right.

185
00:07:39.556 --> 00:07:41.566 A:middle
So, with our views in place,

186
00:07:41.566 --> 00:07:43.696 A:middle
we're ready to start
filling in that custom view.

187
00:07:43.766 --> 00:07:47.156 A:middle
And you've already seen
our Custom Views feature.

188
00:07:47.156 --> 00:07:48.536 A:middle
I've showed it a couple
of different times.

189
00:07:48.986 --> 00:07:50.016 A:middle
What I'm going to
do now is I'm going

190
00:07:50.016 --> 00:07:53.546 A:middle
to show you the steps necessary
to have your content showing

191
00:07:53.546 --> 00:07:56.706 A:middle
up Interface Building from start
to finish, and show you, I mean,

192
00:07:56.706 --> 00:07:59.146 A:middle
really, how easy it is.

193
00:07:59.366 --> 00:08:02.166 A:middle
The first thing we need to do,
Step 1 of 4, is we're going

194
00:08:02.166 --> 00:08:04.206 A:middle
to create a custom framework.

195
00:08:05.206 --> 00:08:08.586 A:middle
Frameworks are in OS X in
our new -- in iOS with iOS 8.

196
00:08:09.456 --> 00:08:12.116 A:middle
So I'm going to jump to
my Project Editor here.

197
00:08:12.336 --> 00:08:13.526 A:middle
And I have my list of targets.

198
00:08:13.526 --> 00:08:16.206 A:middle
I'm going to add a new target.

199
00:08:16.206 --> 00:08:17.656 A:middle
We want a Cocoa Touch framework.

200
00:08:19.116 --> 00:08:22.286 A:middle
So I'm going to call
this SiteRate Kit.

201
00:08:22.286 --> 00:08:23.796 A:middle
The name of our app is SiteRate.

202
00:08:24.656 --> 00:08:27.046 A:middle
And I'm choosing to embed
this in my iOS application.

203
00:08:27.046 --> 00:08:28.096 A:middle
It's going to do two things.

204
00:08:28.096 --> 00:08:30.296 A:middle
One, it's going to
link my application

205
00:08:30.296 --> 00:08:33.226 A:middle
against this framework and, two,
when the application builds,

206
00:08:33.226 --> 00:08:35.816 A:middle
it's going to copy that
framework into the app bundle.

207
00:08:35.846 --> 00:08:39.035 A:middle
So let's go ahead and
create that framework.

208
00:08:39.116 --> 00:08:40.466 A:middle
And that's it.

209
00:08:40.466 --> 00:08:43.285 A:middle
I have a custom framework
and it's all ready for me.

210
00:08:43.436 --> 00:08:47.506 A:middle
Now Step Number 2 in
getting your content to show

211
00:08:47.506 --> 00:08:50.516 A:middle
up in Interface Builder is to
create a subclass of UIview

212
00:08:51.346 --> 00:08:52.576 A:middle
or NSView if you're on the Mac.

213
00:08:53.796 --> 00:08:57.426 A:middle
So I can just right-click on
my group here, choose New File.

214
00:08:57.426 --> 00:08:59.406 A:middle
I want a Cocoa Touch class.

215
00:09:00.416 --> 00:09:04.016 A:middle
And I'm going to call
this SiteTileView.

216
00:09:04.896 --> 00:09:05.916 A:middle
Subclass UIView.

217
00:09:05.916 --> 00:09:07.506 A:middle
And we're going to use
Swift as our language.

218
00:09:08.226 --> 00:09:10.326 A:middle
I just want to make sure this
is added to the right target.

219
00:09:10.326 --> 00:09:12.136 A:middle
You want to make sure to add
it to your framework target.

220
00:09:12.886 --> 00:09:15.846 A:middle
And now our class is created.

221
00:09:16.196 --> 00:09:17.616 A:middle
So two steps down already.

222
00:09:18.286 --> 00:09:20.766 A:middle
The third step is to
tell Interface Builder

223
00:09:20.766 --> 00:09:23.646 A:middle
that this class can
display custom content

224
00:09:23.646 --> 00:09:24.436 A:middle
in Interface Builder.

225
00:09:25.406 --> 00:09:30.006 A:middle
And I can do that by marking
the class as @IBDesignable.

226
00:09:31.176 --> 00:09:38.066 A:middle
If I'm in Objective-C, the
attribute just looks like that.

227
00:09:38.946 --> 00:09:40.006 A:middle
So, Step 3 is done.

228
00:09:40.006 --> 00:09:42.216 A:middle
Our class is Designable,
our framework is created.

229
00:09:42.666 --> 00:09:45.726 A:middle
And the final step is to
simply tell Interface Builder

230
00:09:46.056 --> 00:09:48.336 A:middle
that an instance of a view

231
00:09:48.336 --> 00:09:51.246 A:middle
in my storyboard should
actually be this class.

232
00:09:51.276 --> 00:09:53.526 A:middle
So I'm going to go
back to the storyboard,

233
00:09:53.976 --> 00:09:55.376 A:middle
just using the recent
files here.

234
00:09:58.056 --> 00:10:00.596 A:middle
And let me go ahead and
select my tile view.

235
00:10:01.396 --> 00:10:03.406 A:middle
I'm going to open the
Identity Inspector

236
00:10:03.486 --> 00:10:06.846 A:middle
and now I can just type
in that tile view class

237
00:10:06.886 --> 00:10:07.866 A:middle
that I just created.

238
00:10:07.866 --> 00:10:10.136 A:middle
Interface Builder will
auto complete it for me.

239
00:10:10.706 --> 00:10:12.696 A:middle
And now that's everything
that I have to do

240
00:10:12.696 --> 00:10:14.626 A:middle
to get my content showing
up in Interface Builder.

241
00:10:14.666 --> 00:10:15.876 A:middle
It's super, super easy.

242
00:10:16.916 --> 00:10:17.996 A:middle
Now, of course, nothing
is showing up

243
00:10:17.996 --> 00:10:19.406 A:middle
yet because we haven't
written any code,

244
00:10:19.526 --> 00:10:20.456 A:middle
but we're going to get there.

245
00:10:20.576 --> 00:10:24.506 A:middle
So, speaking of which,
let's actually now go ahead

246
00:10:24.506 --> 00:10:25.896 A:middle
and create some code
for our view.

247
00:10:26.156 --> 00:10:29.006 A:middle
So I want to show the code
for my view side-by-side

248
00:10:29.006 --> 00:10:31.016 A:middle
with my storyboard,
and that's really easy.

249
00:10:31.186 --> 00:10:33.476 A:middle
To open my class I'm going

250
00:10:33.476 --> 00:10:36.426 A:middle
to show you another Xcode
code-chip number two.

251
00:10:37.556 --> 00:10:41.126 A:middle
If I option click this
file, many of you know

252
00:10:41.126 --> 00:10:44.696 A:middle
that it will open in a new
assistant or in a new tab,

253
00:10:45.056 --> 00:10:46.696 A:middle
based upon how your
preferences are set.

254
00:10:47.326 --> 00:10:49.946 A:middle
But if I hold Option-shift
and click,

255
00:10:49.946 --> 00:10:51.746 A:middle
I get a little chooser view.

256
00:10:51.996 --> 00:10:54.706 A:middle
And this chooser allows
me to pick the destination

257
00:10:54.706 --> 00:10:56.316 A:middle
of where I want this
file to open.

258
00:10:56.716 --> 00:10:59.816 A:middle
I can target a new split,
a new tab, a new window.

259
00:10:59.816 --> 00:11:03.136 A:middle
I can even target splits in
tabs that aren't even open.

260
00:11:03.446 --> 00:11:05.366 A:middle
So, very, very flexible to get

261
00:11:05.366 --> 00:11:06.506 A:middle
to where I want to
open this file.

262
00:11:06.586 --> 00:11:09.836 A:middle
I'm just going to create it

263
00:11:09.836 --> 00:11:12.426 A:middle
in a new split side-by-side
with my storyboard.

264
00:11:15.416 --> 00:11:15.876 A:middle
All right.

265
00:11:15.876 --> 00:11:17.416 A:middle
So, there's a couple
different ways

266
00:11:17.416 --> 00:11:20.096 A:middle
that you can create
your custom views.

267
00:11:20.536 --> 00:11:22.196 A:middle
And the way that we're going
to do that today is we're going

268
00:11:22.196 --> 00:11:24.196 A:middle
to create our custom
view by composing it

269
00:11:24.656 --> 00:11:26.136 A:middle
of smaller components.

270
00:11:26.136 --> 00:11:29.386 A:middle
And these components are
either sub-views like UILabel,

271
00:11:29.386 --> 00:11:30.916 A:middle
UIImageView or layers.

272
00:11:30.916 --> 00:11:32.866 A:middle
And we're going to
use layers today.

273
00:11:33.646 --> 00:11:35.936 A:middle
If I were to implement
drawRect, that's not going

274
00:11:35.936 --> 00:11:38.676 A:middle
to get us the best performance;
whereas, using sub-layers

275
00:11:38.676 --> 00:11:41.006 A:middle
and sub-views is going to get
us really good performance.

276
00:11:41.006 --> 00:11:43.806 A:middle
So I can just go ahead
and delete this code here.

277
00:11:43.806 --> 00:11:47.456 A:middle
And we're going to start
creating our view, if we go back

278
00:11:47.456 --> 00:11:51.536 A:middle
to our mockup here, by working
on these rings on the outside.

279
00:11:51.536 --> 00:11:54.976 A:middle
So I'm going to start with
this grey ring and then fill it

280
00:11:54.976 --> 00:11:56.206 A:middle
in with a colored one.

281
00:11:56.326 --> 00:12:01.666 A:middle
So let's create a
new shaped layer

282
00:12:01.666 --> 00:12:03.046 A:middle
on this -- set it as a property.

283
00:12:03.046 --> 00:12:04.826 A:middle
And you can see it's
mean error because I need

284
00:12:04.826 --> 00:12:05.916 A:middle
to import the module

285
00:12:05.916 --> 00:12:08.146 A:middle
that contains the core
animation classes.

286
00:12:09.146 --> 00:12:10.296 A:middle
And I want to create this thing.

287
00:12:10.826 --> 00:12:13.726 A:middle
A really convenient
place to create this is

288
00:12:13.956 --> 00:12:16.926 A:middle
in an override or
layout sub-views.

289
00:12:18.276 --> 00:12:20.156 A:middle
First I want to call
super which will make sure

290
00:12:20.156 --> 00:12:22.306 A:middle
that sub-views have
the right size.

291
00:12:22.476 --> 00:12:25.056 A:middle
And then, if I haven't
created the ring layer yet,

292
00:12:25.056 --> 00:12:26.436 A:middle
I'm going to go ahead
and create one,

293
00:12:26.436 --> 00:12:27.906 A:middle
add it to the layer of my view.

294
00:12:28.856 --> 00:12:30.476 A:middle
And then, of course,
we want to make sure

295
00:12:30.476 --> 00:12:31.926 A:middle
that we position it
in the right place.

296
00:12:32.546 --> 00:12:34.016 A:middle
So now we have the layer.

297
00:12:34.016 --> 00:12:35.706 A:middle
Let's do something
interesting with it.

298
00:12:35.886 --> 00:12:38.556 A:middle
I'm going to close
the utility area

299
00:12:39.046 --> 00:12:42.266 A:middle
to give myself a
little more space.

300
00:12:42.946 --> 00:12:44.966 A:middle
So let's create a BezierPath
and we're just going

301
00:12:44.966 --> 00:12:45.986 A:middle
to make this be a circle.

302
00:12:45.986 --> 00:12:49.996 A:middle
And then let's set this as
the shape of my shape layer.

303
00:12:50.066 --> 00:12:53.216 A:middle
And there Interface Builder
is showing me the result

304
00:12:53.326 --> 00:12:55.146 A:middle
of my code so far.

305
00:12:56.516 --> 00:13:01.076 A:middle
[ Applause ]

306
00:13:01.576 --> 00:13:03.466 A:middle
Responds superfast
which is just great.

307
00:13:04.496 --> 00:13:06.686 A:middle
So now I don't really want
a solid circle, right?

308
00:13:06.686 --> 00:13:07.636 A:middle
We want to create a ring.

309
00:13:08.506 --> 00:13:11.866 A:middle
And so CAShapeLayer has
a feature that allows me

310
00:13:11.906 --> 00:13:13.526 A:middle
to struct the outside
of the path.

311
00:13:13.526 --> 00:13:16.956 A:middle
And so I'm going to go ahead
and turn off the fillColor

312
00:13:16.956 --> 00:13:19.716 A:middle
to set a linewidth and set
the strokeColor to black.

313
00:13:20.646 --> 00:13:22.686 A:middle
Now because my content
is showing live

314
00:13:22.686 --> 00:13:24.276 A:middle
in Interface Builder, I can see

315
00:13:24.276 --> 00:13:25.576 A:middle
that I've already
made a mistake.

316
00:13:25.756 --> 00:13:27.626 A:middle
For those of you
familiar with BezierPath,

317
00:13:27.816 --> 00:13:29.906 A:middle
you'll know that when
you have a stroke,

318
00:13:29.906 --> 00:13:32.416 A:middle
half of it draws
outside the path and half

319
00:13:32.416 --> 00:13:33.526 A:middle
of it inside the path.

320
00:13:33.996 --> 00:13:37.516 A:middle
So, actually, I want to inset my
path by half of the linewidth.

321
00:13:37.646 --> 00:13:40.176 A:middle
Now I know I'm going to
use my linewidth a lot,

322
00:13:40.176 --> 00:13:42.446 A:middle
so let's create a
new property for it.

323
00:13:42.896 --> 00:13:47.816 A:middle
And now I can inset my
rectangle by that amount

324
00:13:47.816 --> 00:13:50.146 A:middle
and I'll make sure that
I use it in both spots.

325
00:13:50.526 --> 00:13:52.466 A:middle
And now my shape is
looking much better.

326
00:13:53.896 --> 00:13:56.096 A:middle
So the last thing we want to do
is we want to fill it in with

327
00:13:56.176 --> 00:13:59.056 A:middle
that color that our Designer
gave us, so we'll fill that in.

328
00:13:59.696 --> 00:14:03.416 A:middle
And, wow, that looks
really, really light.

329
00:14:03.416 --> 00:14:06.616 A:middle
Hmm. I'm going to
change this to 0.3.

330
00:14:07.346 --> 00:14:08.846 A:middle
Designers aren't always right.

331
00:14:12.236 --> 00:14:14.046 A:middle
So now that my ring
layer [applause] --

332
00:14:15.796 --> 00:14:18.476 A:middle
I love all of our Designers.

333
00:14:18.716 --> 00:14:21.976 A:middle
Now that our ring layer for
the background's looking pretty

334
00:14:21.976 --> 00:14:23.256 A:middle
good, let's fill it
in with some color.

335
00:14:23.256 --> 00:14:26.146 A:middle
I'm just going to do the
exact same thing pretty much.

336
00:14:26.786 --> 00:14:28.036 A:middle
The only difference
I'm going to do

337
00:14:28.036 --> 00:14:30.346 A:middle
with this other ring layer is
I'm just going to rotate it

338
00:14:30.346 --> 00:14:32.056 A:middle
by 90 degrees so
that when we fill

339
00:14:32.056 --> 00:14:34.966 A:middle
in our [inaudible] it's going to
come from the top of the circle

340
00:14:34.966 --> 00:14:35.866 A:middle
and not out of the side.

341
00:14:36.596 --> 00:14:40.936 A:middle
So I want to drive my shaped
layer now by an actual rating.

342
00:14:40.936 --> 00:14:43.366 A:middle
So let's create a new
property which is the rating.

343
00:14:46.466 --> 00:14:48.796 A:middle
And now we want to actually
update our layer based upon this

344
00:14:48.796 --> 00:14:51.426 A:middle
rating, so I'm going to use
a feature of CAShapeLayer

345
00:14:51.426 --> 00:14:54.156 A:middle
that allows me to set the kind
of the progress of the stroke.

346
00:14:54.536 --> 00:14:56.236 A:middle
And I'm going to do it in a
new method because I'm going

347
00:14:56.236 --> 00:14:58.716 A:middle
to call this row up a
bunch of different spots.

348
00:14:59.536 --> 00:15:02.736 A:middle
So one of these spots
that I'm going to call is

349
00:15:02.906 --> 00:15:04.746 A:middle
from changing the rating itself.

350
00:15:05.286 --> 00:15:07.976 A:middle
It couldn't be easier now
to react to property changes

351
00:15:08.196 --> 00:15:10.186 A:middle
with Swift's new
Property Observers.

352
00:15:10.716 --> 00:15:13.296 A:middle
So all I have to do is just say

353
00:15:13.296 --> 00:15:18.176 A:middle
that when this rating did change
I can just go ahead and call

354
00:15:18.176 --> 00:15:21.726 A:middle
that method that
updates my ShapeLayer.

355
00:15:22.716 --> 00:15:25.146 A:middle
And I'm also going to call
it inside of here just

356
00:15:25.146 --> 00:15:27.666 A:middle
in case we haven't actually
changed those properties yet.

357
00:15:28.576 --> 00:15:32.246 A:middle
And now my ShapeLayer is looking
exactly how I want it so far.

358
00:15:33.356 --> 00:15:37.396 A:middle
Now it's really common when
you're creating different types

359
00:15:37.396 --> 00:15:41.056 A:middle
of custom views that you want to
have properties that you expose

360
00:15:41.316 --> 00:15:43.776 A:middle
that people can change,
either for your code or even

361
00:15:43.776 --> 00:15:44.666 A:middle
within Interface Builder.

362
00:15:44.666 --> 00:15:46.876 A:middle
And Interface Builder
makes that really easy

363
00:15:46.876 --> 00:15:48.506 A:middle
with a new feature
called Inspectables.

364
00:15:49.356 --> 00:15:53.336 A:middle
So if I go up to my rating
property here and mark it

365
00:15:53.336 --> 00:16:00.306 A:middle
as IBInspectable, this is a flag
for Interface Builder that says,

366
00:16:00.306 --> 00:16:02.916 A:middle
hey, this property,
I want you to show it

367
00:16:02.916 --> 00:16:05.786 A:middle
in Interface Builder just
like all the other properties

368
00:16:05.996 --> 00:16:07.196 A:middle
that you edit on your views.

369
00:16:08.066 --> 00:16:12.226 A:middle
So if I jump back to Xcode
and I open the Inspector,

370
00:16:12.226 --> 00:16:16.096 A:middle
you can see that that rating
is showing up and I can edit it

371
00:16:16.096 --> 00:16:19.526 A:middle
and it reflects instantly
in the canvas.

372
00:16:20.516 --> 00:16:25.996 A:middle
[ Applause ]

373
00:16:26.496 --> 00:16:28.506 A:middle
So you might be wondering, well,

374
00:16:28.506 --> 00:16:30.066 A:middle
what can I use with
Inspectables?

375
00:16:30.746 --> 00:16:31.976 A:middle
You can use all kinds

376
00:16:32.046 --> 00:16:34.656 A:middle
of different types
for Inspectables.

377
00:16:35.326 --> 00:16:36.896 A:middle
Now the way that
Inspectables works is

378
00:16:36.896 --> 00:16:38.346 A:middle
that you might be
wondering well,

379
00:16:38.346 --> 00:16:40.126 A:middle
where does all the
data get stored?

380
00:16:40.886 --> 00:16:42.406 A:middle
Inspectables takes advantage

381
00:16:42.716 --> 00:16:45.626 A:middle
of the user-defined runtime
attributes that we've had

382
00:16:45.626 --> 00:16:47.146 A:middle
for a couple of releases
of Interface Builder.

383
00:16:48.436 --> 00:16:51.006 A:middle
You can see that the rating that
I just set is showing up here.

384
00:16:51.566 --> 00:16:55.416 A:middle
Now it's important that we are
using the user-defined runtime

385
00:16:55.416 --> 00:16:57.036 A:middle
attributes for Inspectables
because it means

386
00:16:57.036 --> 00:16:58.996 A:middle
that you don't have
to worry about where

387
00:16:58.996 --> 00:17:01.226 A:middle
to store this data
and how to encode it.

388
00:17:01.416 --> 00:17:02.996 A:middle
We take care of all
of that for you

389
00:17:02.996 --> 00:17:04.955 A:middle
at design time and at runtime.

390
00:17:05.516 --> 00:17:08.715 A:middle
The different types
that I can use

391
00:17:08.715 --> 00:17:10.226 A:middle
for Inspectables are
anything supported

392
00:17:10.226 --> 00:17:12.826 A:middle
by user-defined runtime
attributes -- booleans, strings,

393
00:17:12.826 --> 00:17:17.346 A:middle
numbers, value [inaudible]
like in points and sizes

394
00:17:17.346 --> 00:17:25.185 A:middle
and [inaudible] and even
images, which is new this year.

395
00:17:25.376 --> 00:17:29.796 A:middle
Love it. So Inspectables
I think are great

396
00:17:29.796 --> 00:17:32.146 A:middle
for exposing properties of
your views that you can edit.

397
00:17:32.456 --> 00:17:34.746 A:middle
But I think it's
also really helpful

398
00:17:34.746 --> 00:17:37.806 A:middle
for helping you develop
your views.

399
00:17:38.056 --> 00:17:40.066 A:middle
So there's two ways
that I see this.

400
00:17:40.166 --> 00:17:42.506 A:middle
The first thing is it helps
you just validate the changes

401
00:17:42.506 --> 00:17:44.956 A:middle
that you're making, especially
as you're experimenting

402
00:17:45.266 --> 00:17:46.356 A:middle
with new types of things.

403
00:17:47.096 --> 00:17:48.906 A:middle
So I want to change the color

404
00:17:49.216 --> 00:17:51.726 A:middle
of my rating based upon
how good that rating is.

405
00:17:52.236 --> 00:17:56.686 A:middle
Red means you better catch up,
and green might be well-done.

406
00:17:57.266 --> 00:18:00.706 A:middle
So let's go ahead
and change the color

407
00:18:00.706 --> 00:18:02.896 A:middle
of our stroke based
upon that rating.

408
00:18:02.896 --> 00:18:05.006 A:middle
And I'm using a new
switch statement

409
00:18:05.076 --> 00:18:06.616 A:middle
in Swift to accomplish this.

410
00:18:07.766 --> 00:18:08.806 A:middle
And now you can see

411
00:18:09.056 --> 00:18:11.526 A:middle
that Interface Builder
is doing the right thing

412
00:18:11.526 --> 00:18:12.346 A:middle
in terms of the color.

413
00:18:12.346 --> 00:18:14.596 A:middle
Now I'm going to switch
back to Interface Builder

414
00:18:14.596 --> 00:18:16.286 A:middle
so I can edit the Inspectable.

415
00:18:16.286 --> 00:18:19.036 A:middle
And I'm going to show you
Xcode Pro Trip Number 3.

416
00:18:19.826 --> 00:18:22.806 A:middle
I like to navigate a lot
of times without the mouse.

417
00:18:23.116 --> 00:18:25.776 A:middle
And I can jump around within
Xcode and put the focus

418
00:18:25.776 --> 00:18:29.006 A:middle
in different editors
using command-J.

419
00:18:30.056 --> 00:18:33.016 A:middle
If I hit command-J it gives me
a little chooser and I can pick

420
00:18:33.016 --> 00:18:34.486 A:middle
which editor I want
to have focused.

421
00:18:34.486 --> 00:18:36.356 A:middle
So in this case I want
to jump-focus back

422
00:18:36.866 --> 00:18:37.936 A:middle
to the Interface Builder editor.

423
00:18:37.936 --> 00:18:39.516 A:middle
So I can just go ahead
and hit command-J.

424
00:18:39.516 --> 00:18:40.796 A:middle
It picks the primary.

425
00:18:40.876 --> 00:18:41.476 A:middle
Hit Return.

426
00:18:41.736 --> 00:18:43.586 A:middle
And now you can see I'm
seeing my inspectors

427
00:18:43.646 --> 00:18:44.396 A:middle
for Interface Builder.

428
00:18:44.846 --> 00:18:48.356 A:middle
I can jump to the attributes
inspector with command option 4.

429
00:18:48.936 --> 00:18:53.386 A:middle
And now that field's in focus
and I try out our colors.

430
00:18:53.776 --> 00:18:56.726 A:middle
And everything looks to
be behaving as expected.

431
00:18:59.276 --> 00:19:06.056 A:middle
Now the next place that I
can use Inspectables in terms

432
00:19:06.056 --> 00:19:10.616 A:middle
of playing with my views is
also in just experimenting

433
00:19:11.236 --> 00:19:12.636 A:middle
with different types of values.

434
00:19:12.936 --> 00:19:15.646 A:middle
So I haven't decided
yet on my linewidth.

435
00:19:15.846 --> 00:19:17.526 A:middle
10 might work.

436
00:19:17.526 --> 00:19:18.956 A:middle
It might not be the right thing.

437
00:19:18.956 --> 00:19:20.686 A:middle
So let's mark that
as Inspectable.

438
00:19:21.386 --> 00:19:23.006 A:middle
I'm going to jump back

439
00:19:23.006 --> 00:19:24.656 A:middle
to Interface Builder
using command-J.

440
00:19:24.926 --> 00:19:26.976 A:middle
That language is showing up.

441
00:19:26.976 --> 00:19:28.596 A:middle
And let's try a new value, 12.

442
00:19:28.596 --> 00:19:30.476 A:middle
Whoa, that is pretty thick.

443
00:19:30.566 --> 00:19:32.746 A:middle
So let's just, you know,
come back down here.

444
00:19:32.976 --> 00:19:34.416 A:middle
5's a little small.

445
00:19:34.416 --> 00:19:35.176 A:middle
What about 6?

446
00:19:35.176 --> 00:19:36.396 A:middle
Yeah, 6 looks pretty good to me.

447
00:19:36.476 --> 00:19:38.616 A:middle
So it's very, very
easy to experiment

448
00:19:38.856 --> 00:19:40.776 A:middle
with your custom
views when using them

449
00:19:40.776 --> 00:19:41.626 A:middle
with an Interface Builder.

450
00:19:42.806 --> 00:19:45.306 A:middle
Now I'm also going to show you
just how live these views are.

451
00:19:45.886 --> 00:19:49.096 A:middle
I'm going to go ahead and
resize my table view again.

452
00:19:50.326 --> 00:19:52.276 A:middle
And you can see,
as I'm resizing it,

453
00:19:52.476 --> 00:19:55.566 A:middle
it's just perfectly
redrawing my view.

454
00:19:56.066 --> 00:19:57.416 A:middle
It's interacting with it just

455
00:19:57.416 --> 00:20:00.426 A:middle
like any other view that's
inside of Interface Builder.

456
00:20:02.216 --> 00:20:03.936 A:middle
Let me go ahead and
undo that change.

457
00:20:05.536 --> 00:20:07.376 A:middle
Okay. So our rings are
looking pretty good.

458
00:20:07.376 --> 00:20:08.626 A:middle
Let's go ahead and
fill in that image.

459
00:20:08.626 --> 00:20:10.926 A:middle
So I'm going to create a
new layer for my image.

460
00:20:11.946 --> 00:20:13.796 A:middle
I'm also going to declare
a property that I can set

461
00:20:13.796 --> 00:20:15.366 A:middle
for my code to update
that image.

462
00:20:16.026 --> 00:20:19.816 A:middle
Now, I want to put an image in
there, and so let's go ahead

463
00:20:19.816 --> 00:20:21.366 A:middle
and set that on our layer.

464
00:20:21.446 --> 00:20:25.276 A:middle
I'm going to come back down
to our layer properties here.

465
00:20:26.576 --> 00:20:31.036 A:middle
And, actually, I don't think
I want to create this inside

466
00:20:31.036 --> 00:20:33.546 A:middle
of our property, so let's
actually go ahead and undo that,

467
00:20:34.266 --> 00:20:35.746 A:middle
and let's create
the layer first.

468
00:20:35.746 --> 00:20:38.106 A:middle
And I'm going to do that
inside of our layout sub-views.

469
00:20:38.946 --> 00:20:39.756 A:middle
That's looking a little better.

470
00:20:39.756 --> 00:20:40.786 A:middle
That's a better place to do it.

471
00:20:40.986 --> 00:20:43.816 A:middle
But let's update it down
here in our layer properties.

472
00:20:45.006 --> 00:20:46.936 A:middle
So you can see Interface
Builder is --

473
00:20:46.936 --> 00:20:49.296 A:middle
all I'm doing is I'm
just I'm drawing a square

474
00:20:49.296 --> 00:20:50.786 A:middle
and then I'm drawing a
circle and masking it.

475
00:20:51.096 --> 00:20:53.976 A:middle
And now we can set the
image as the contents

476
00:20:54.286 --> 00:20:56.956 A:middle
of that square layer behind it.

477
00:20:57.286 --> 00:20:59.336 A:middle
So let's get an image
to set inside of here.

478
00:20:59.336 --> 00:21:06.156 A:middle
Now I don't want to ship any
images with my actual framework,

479
00:21:06.386 --> 00:21:08.016 A:middle
the images that I use
for testing, right?

480
00:21:08.016 --> 00:21:09.636 A:middle
Because that would just
bloat the framework.

481
00:21:10.476 --> 00:21:13.246 A:middle
What I'd like to do is be able
to reference an image that's

482
00:21:13.246 --> 00:21:15.986 A:middle
in my project without actually
putting it in a target.

483
00:21:16.786 --> 00:21:20.056 A:middle
And Interface Builder provides
a great place to do this

484
00:21:20.056 --> 00:21:21.796 A:middle
and a great way to do
this through Prepare

485
00:21:21.796 --> 00:21:22.706 A:middle
for Interface Builder.

486
00:21:23.596 --> 00:21:26.126 A:middle
So this is a method
that gets called

487
00:21:26.126 --> 00:21:29.736 A:middle
after your views are initialized
inside of Interface Builder,

488
00:21:30.086 --> 00:21:32.326 A:middle
and allows me to do any
kind of design-time setup.

489
00:21:32.506 --> 00:21:34.286 A:middle
Again, this only gets
called at design-time.

490
00:21:35.376 --> 00:21:38.246 A:middle
Now I have some images in my
projects, some test images.

491
00:21:38.246 --> 00:21:41.136 A:middle
Let me show them to you
over here in this folder.

492
00:21:41.136 --> 00:21:42.486 A:middle
And these aren't in any target.

493
00:21:42.486 --> 00:21:44.336 A:middle
They're just some images
that my designers gave me

494
00:21:44.336 --> 00:21:45.556 A:middle
to help me test to make sure

495
00:21:45.556 --> 00:21:46.916 A:middle
that my app is doing
the right thing.

496
00:21:47.036 --> 00:21:48.916 A:middle
So I'm going to go and
reference one of these.

497
00:21:49.296 --> 00:21:51.606 A:middle
But I want to -- and so
I could pass a, you know,

498
00:21:51.606 --> 00:21:53.616 A:middle
an absolute path and
generate an image.

499
00:21:53.616 --> 00:21:54.986 A:middle
But I'm going to do it
in a way that's going

500
00:21:54.986 --> 00:21:56.456 A:middle
to make sense for
my entire team.

501
00:21:57.146 --> 00:22:00.576 A:middle
So Interface Builder will
actually pass the paths

502
00:22:01.156 --> 00:22:05.156 A:middle
to your projects through the
environment and allow you

503
00:22:05.206 --> 00:22:09.136 A:middle
to actually take advantage of
the resources in your project.

504
00:22:10.346 --> 00:22:14.786 A:middle
So let's go back here and
let's go ahead and look

505
00:22:14.786 --> 00:22:15.546 A:middle
at what that looks like.

506
00:22:15.546 --> 00:22:18.336 A:middle
So inside of our environment
there is an IB underscore

507
00:22:18.336 --> 00:22:20.876 A:middle
PROJECT underscore SOURCE
underscore DIRECTORIES string.

508
00:22:21.016 --> 00:22:24.146 A:middle
That's just a bunch of project
directories concatenated

509
00:22:24.146 --> 00:22:24.786 A:middle
with a colon.

510
00:22:25.436 --> 00:22:28.386 A:middle
And I can split those
up and go ahead

511
00:22:28.386 --> 00:22:30.016 A:middle
and actually get the strings.

512
00:22:30.496 --> 00:22:32.746 A:middle
So I only have one project path
so I'm just going to go ahead

513
00:22:32.746 --> 00:22:36.576 A:middle
and grab the first one and
I can get the path relative

514
00:22:36.576 --> 00:22:38.906 A:middle
to my project just by appending

515
00:22:38.906 --> 00:22:42.026 A:middle
that test images
and that image name.

516
00:22:42.246 --> 00:22:44.956 A:middle
And then we can go ahead
and create the image.

517
00:22:46.106 --> 00:22:50.516 A:middle
And it should -- hmph, it
should show up here any second.

518
00:22:51.206 --> 00:22:54.006 A:middle
Huh. Well, this isn't
exactly looking right to me.

519
00:22:54.006 --> 00:22:56.876 A:middle
I think I must have
missed something.

520
00:22:56.926 --> 00:22:59.776 A:middle
Wouldn't it be great if I
could just debug my view right

521
00:22:59.776 --> 00:23:00.476 A:middle
in the canvas?

522
00:23:00.926 --> 00:23:01.156 A:middle
&gt;&gt; Yeah.

523
00:23:01.606 --> 00:23:02.856 A:middle
&gt;&gt; Well, with live
views you can.

524
00:23:03.726 --> 00:23:06.956 A:middle
So I'm going to set a
breakpoint on my image here.

525
00:23:07.526 --> 00:23:09.866 A:middle
Go back to Interface Builder
and select my tile view.

526
00:23:10.286 --> 00:23:13.126 A:middle
And from the Editor Menu
I can just select Debut

527
00:23:13.126 --> 00:23:14.306 A:middle
Selected Views.

528
00:23:15.176 --> 00:23:19.126 A:middle
And this is going to attach to
Interface Builder and allow me

529
00:23:19.606 --> 00:23:22.706 A:middle
to actually debug
my custom view just

530
00:23:22.706 --> 00:23:24.326 A:middle
like any other debug session.

531
00:23:25.966 --> 00:23:28.966 A:middle
So I can see here the -- it
looks like I'm getting inside

532
00:23:28.966 --> 00:23:31.446 A:middle
of here, so I'm getting
a project path.

533
00:23:31.446 --> 00:23:36.406 A:middle
Let's go ahead and step over and
let's see what that image is.

534
00:23:36.476 --> 00:23:39.686 A:middle
You can see the LDB is
automatically printing

535
00:23:39.686 --> 00:23:41.286 A:middle
out the fact that this
is an optional type

536
00:23:41.286 --> 00:23:43.456 A:middle
and that the optional type
actually has something in it.

537
00:23:43.656 --> 00:23:45.286 A:middle
So let's see what that image is.

538
00:23:45.476 --> 00:23:47.176 A:middle
And, yep, sure enough,
we got an image,

539
00:23:47.656 --> 00:23:49.026 A:middle
so what's going wrong here?

540
00:23:49.356 --> 00:23:50.766 A:middle
Well, let me put a breakpoint

541
00:23:52.106 --> 00:23:54.366 A:middle
where we actually set
our image contents.

542
00:23:54.576 --> 00:23:55.616 A:middle
And let's hit Continue.

543
00:23:56.066 --> 00:23:58.986 A:middle
And, oh, interesting.

544
00:23:59.176 --> 00:24:00.776 A:middle
That method never
actually gets called.

545
00:24:01.426 --> 00:24:03.456 A:middle
What I must be doing is
I must have forgotten

546
00:24:03.456 --> 00:24:07.666 A:middle
to actually update my image
property in my image layer

547
00:24:07.666 --> 00:24:09.086 A:middle
when the image property changes.

548
00:24:10.026 --> 00:24:12.546 A:middle
If I scroll up --
oh, yep, sure enough.

549
00:24:12.546 --> 00:24:15.246 A:middle
I forgot to use a property
observer to make sure

550
00:24:15.246 --> 00:24:18.276 A:middle
that my image proper layer
was going to get updated

551
00:24:18.276 --> 00:24:19.296 A:middle
when the image changed.

552
00:24:19.296 --> 00:24:21.536 A:middle
And there you go.

553
00:24:21.746 --> 00:24:25.726 A:middle
So Interface Builder provides
lots of different ways for you

554
00:24:25.936 --> 00:24:28.016 A:middle
to be able to design your
views using something

555
00:24:28.016 --> 00:24:29.046 A:middle
like prepareForInterfaceBuilder

556
00:24:29.046 --> 00:24:30.806 A:middle
in these IB Project
Source Directories.

557
00:24:31.146 --> 00:24:32.336 A:middle
You can see your custom images.

558
00:24:32.336 --> 00:24:33.986 A:middle
You can debug them.

559
00:24:34.846 --> 00:24:36.146 A:middle
But there's even
more you can do.

560
00:24:36.626 --> 00:24:39.506 A:middle
So let's go ahead and
close the debug area here.

561
00:24:40.076 --> 00:24:43.346 A:middle
I'm going to jump over to a
different View Controller now.

562
00:24:45.006 --> 00:24:47.736 A:middle
And we have this Rating View
which is showing us the number

563
00:24:47.736 --> 00:24:50.156 A:middle
of stars for our
particular image.

564
00:24:50.936 --> 00:24:53.126 A:middle
Now this Rating View
has an Inspectable.

565
00:24:53.786 --> 00:24:54.946 A:middle
It's called Star Rating.

566
00:24:55.656 --> 00:24:58.336 A:middle
And I'm going to go ahead
and change this to 3.5.

567
00:24:59.316 --> 00:25:01.176 A:middle
And when I zoom back
out and zoom in instead

568
00:25:01.176 --> 00:25:05.926 A:middle
on our rating layer,
you can see -- oh, yeah.

569
00:25:06.106 --> 00:25:08.836 A:middle
That label there is
overlapping our star.

570
00:25:09.146 --> 00:25:10.236 A:middle
Well, why is that?

571
00:25:10.236 --> 00:25:13.316 A:middle
Well, we have this explicit
width and height constraint

572
00:25:13.666 --> 00:25:16.036 A:middle
so that the Rating View
doesn't have a chance to grow it

573
00:25:16.036 --> 00:25:17.056 A:middle
at whatever size it is.

574
00:25:17.056 --> 00:25:19.106 A:middle
So let's just go ahead
and delete those.

575
00:25:19.766 --> 00:25:22.186 A:middle
We don't need them.

576
00:25:22.296 --> 00:25:23.176 A:middle
So, again, delete those.

577
00:25:23.176 --> 00:25:25.666 A:middle
And now Interface Builder
is helpfully telling me

578
00:25:26.046 --> 00:25:27.146 A:middle
that my view is ambiguous.

579
00:25:27.146 --> 00:25:28.556 A:middle
It doesn't have enough
constraints.

580
00:25:29.686 --> 00:25:31.496 A:middle
Now for those of you
familiar with Auto Layout,

581
00:25:31.576 --> 00:25:33.786 A:middle
you'll know that there's a
method called Intrinsic Content

582
00:25:33.786 --> 00:25:37.706 A:middle
Size which allows you to define
a size-to-fit-size for my view.

583
00:25:38.046 --> 00:25:39.046 A:middle
Well, I can take advantage

584
00:25:39.046 --> 00:25:40.756 A:middle
of that right inside
of Interface Builder.

585
00:25:42.156 --> 00:25:45.946 A:middle
If we go to our Rating View
Class, and I'm going to open

586
00:25:45.946 --> 00:25:47.066 A:middle
that using Open Quickly.

587
00:25:48.036 --> 00:25:49.756 A:middle
Site Rating View.

588
00:25:49.756 --> 00:25:52.836 A:middle
And I'm going to use
my little Option-shift

589
00:25:53.016 --> 00:25:54.276 A:middle
to target the assistant here.

590
00:25:55.236 --> 00:25:58.526 A:middle
And we'll scroll to the bottom
of the file to add our new code.

591
00:25:59.416 --> 00:26:02.276 A:middle
So I've overwritten our
intrinsicContentSize method

592
00:26:02.666 --> 00:26:04.516 A:middle
and now Interface
Builder is going

593
00:26:04.516 --> 00:26:06.276 A:middle
to recognize that
method is there.

594
00:26:06.276 --> 00:26:08.696 A:middle
It's going to call it just like
it normally would at runtime.

595
00:26:09.026 --> 00:26:14.536 A:middle
And now it's showing me that my
view can grow to fill the size

596
00:26:14.536 --> 00:26:17.796 A:middle
of the stars and the intrinsic
content size of my label,

597
00:26:18.006 --> 00:26:19.826 A:middle
and I can just put
it right into place.

598
00:26:20.296 --> 00:26:23.196 A:middle
And it's also tell me that my
view is now no longer ambiguous.

599
00:26:23.256 --> 00:26:24.256 A:middle
I'm all good to go.

600
00:26:24.476 --> 00:26:26.556 A:middle
It's executing my code and using

601
00:26:26.556 --> 00:26:29.036 A:middle
that intrinsicContentSize
override to figure

602
00:26:29.036 --> 00:26:31.006 A:middle
out which constraints
need to be there.

603
00:26:32.226 --> 00:26:34.296 A:middle
Now for those of you who
are pixel perfectionists,

604
00:26:35.056 --> 00:26:38.966 A:middle
you might realize that that
caption is actually 1 point off

605
00:26:39.516 --> 00:26:42.926 A:middle
from this label in
terms of being aligned.

606
00:26:43.326 --> 00:26:46.466 A:middle
I would like to be able
to align these two things

607
00:26:46.466 --> 00:26:49.356 A:middle
by their baseline but my
Rating View is a custom view

608
00:26:49.356 --> 00:26:50.506 A:middle
that has stuff inside of it.

609
00:26:50.506 --> 00:26:52.936 A:middle
Well, how do I align
it by the baseline?

610
00:26:53.556 --> 00:26:57.876 A:middle
Well, I can override another
method on UIView and NSView,

611
00:26:58.376 --> 00:26:59.776 A:middle
called View for Baseline Layout.

612
00:26:59.776 --> 00:27:02.606 A:middle
I'm going to return the
label that's internal

613
00:27:02.606 --> 00:27:03.776 A:middle
to my custom view.

614
00:27:04.196 --> 00:27:06.166 A:middle
And now Interface
Builder is showing me

615
00:27:06.506 --> 00:27:09.006 A:middle
that this view now has
a baseline running right

616
00:27:09.006 --> 00:27:10.536 A:middle
through the baseline of my label

617
00:27:11.516 --> 00:27:14.976 A:middle
and if I delete the centering
contraint on my caption,

618
00:27:15.186 --> 00:27:16.226 A:middle
I can just drag this here on it.

619
00:27:16.226 --> 00:27:18.496 A:middle
And you can see it's
snapping right to the baseline

620
00:27:18.796 --> 00:27:22.606 A:middle
of that custom view that I
just created entirely in code.

621
00:27:23.516 --> 00:27:28.806 A:middle
[ Applause ]

622
00:27:29.306 --> 00:27:30.586 A:middle
Now I can go ahead
and finish this off

623
00:27:30.656 --> 00:27:35.666 A:middle
by baseline aligning
these to these two views.

624
00:27:35.666 --> 00:27:39.686 A:middle
So that's just a little look
into using live views and some

625
00:27:39.686 --> 00:27:43.166 A:middle
of the things that you can use
to make sure really cool views.

626
00:27:43.166 --> 00:27:45.896 A:middle
I'm really looking forward
to seeing what you guys do.

627
00:27:47.166 --> 00:27:50.436 A:middle
So, the four steps
that you need to do

628
00:27:50.436 --> 00:27:52.506 A:middle
to get your custom content
showing up in Interface Builder.

629
00:27:52.836 --> 00:27:54.176 A:middle
1, create a framework.

630
00:27:54.586 --> 00:27:56.416 A:middle
Why do you need to create a
framework in the first place?

631
00:27:56.946 --> 00:28:01.016 A:middle
The way that this feature works
is that when you define a class

632
00:28:01.016 --> 00:28:03.186 A:middle
as designable, Interface
Builder is going

633
00:28:03.186 --> 00:28:04.756 A:middle
to build your framework target.

634
00:28:04.896 --> 00:28:07.136 A:middle
It's going to launch
a Helper process.

635
00:28:07.136 --> 00:28:09.226 A:middle
It's going to dynamically
load your framework

636
00:28:09.226 --> 00:28:12.586 A:middle
into that Helper process
and then interact with it.

637
00:28:12.586 --> 00:28:15.146 A:middle
And this also helps keep
you from the mistakes that,

638
00:28:15.146 --> 00:28:17.606 A:middle
at least that I make,
while writing code

639
00:28:17.946 --> 00:28:19.676 A:middle
which is something like a crash.

640
00:28:20.136 --> 00:28:22.376 A:middle
That way you don't have to --
you can see what the error is

641
00:28:22.376 --> 00:28:24.006 A:middle
without having to
suffer from it.

642
00:28:24.966 --> 00:28:29.096 A:middle
Secondly, you create a
subclass of UIView either

643
00:28:29.096 --> 00:28:31.846 A:middle
with Objective-C or with Swift.

644
00:28:32.936 --> 00:28:35.146 A:middle
Third, you mark it
as Designable.

645
00:28:35.216 --> 00:28:38.226 A:middle
And I wanted to say a quick
note about Inspectable as well.

646
00:28:38.846 --> 00:28:42.956 A:middle
While Designable is a feature
of this Custom Views feature,

647
00:28:43.006 --> 00:28:46.906 A:middle
you can use Inspectables without
having a Designable class.

648
00:28:46.906 --> 00:28:49.196 A:middle
You can add Inspectables
to any of your classes

649
00:28:49.436 --> 00:28:50.806 A:middle
that you interact with
in Interface Builder,

650
00:28:50.806 --> 00:28:52.856 A:middle
and we'll show you those
properties in the Inspector.

651
00:28:53.416 --> 00:28:56.946 A:middle
And then, finally, you just
hook up your custom view

652
00:28:57.316 --> 00:28:59.866 A:middle
with the class that
you just created.

653
00:29:00.596 --> 00:29:02.516 A:middle
Live Views allows you to
do all kinds of things.

654
00:29:02.516 --> 00:29:03.876 A:middle
You can see your custom drawing.

655
00:29:03.926 --> 00:29:06.086 A:middle
You can have custom
geometry interact with it.

656
00:29:06.536 --> 00:29:08.986 A:middle
One that I didn't show you
is you can also provide the

657
00:29:08.986 --> 00:29:13.276 A:middle
alignment rect insets that
are on both iOS and OS X.

658
00:29:13.276 --> 00:29:15.256 A:middle
You can debug your views
right in the canvas.

659
00:29:15.616 --> 00:29:18.256 A:middle
And you can also use several
mechanisms for interacting

660
00:29:18.256 --> 00:29:19.426 A:middle
with your code of design time.

661
00:29:19.796 --> 00:29:21.416 A:middle
I showed you
prepareForInterfaceBuilder,

662
00:29:21.416 --> 00:29:24.016 A:middle
but another one is this
target conditional,

663
00:29:24.016 --> 00:29:25.806 A:middle
TARGET underscore
INTERFACE underscore BUILDER.

664
00:29:25.806 --> 00:29:29.256 A:middle
And you can use this with
#if to either opt code

665
00:29:29.336 --> 00:29:31.076 A:middle
in or out of live views.

666
00:29:31.076 --> 00:29:34.526 A:middle
So, for example, you might have
some server connection code

667
00:29:34.526 --> 00:29:36.426 A:middle
that you don't want to
run when you're inside

668
00:29:36.426 --> 00:29:37.376 A:middle
of Interface Builder .

669
00:29:37.446 --> 00:29:39.956 A:middle
So you can just opt that out
using this Target Conditional.

670
00:29:40.556 --> 00:29:44.736 A:middle
I also showed you some new Auto
Layout features since last year.

671
00:29:45.506 --> 00:29:46.966 A:middle
Now what we want to do is want

672
00:29:46.966 --> 00:29:50.066 A:middle
to add iPhone Support
to our application.

673
00:29:50.066 --> 00:29:51.936 A:middle
My co-worker [inaudible]
that time for iPad support.

674
00:29:52.906 --> 00:29:53.896 A:middle
And our goal is that we're going

675
00:29:53.896 --> 00:29:55.746 A:middle
to use a single storyboard
to do this.

676
00:29:55.746 --> 00:29:56.896 A:middle
and this is made possible

677
00:29:56.896 --> 00:29:59.026 A:middle
because of a feature
called Size Classes.

678
00:29:59.626 --> 00:30:02.536 A:middle
Size Classes is a feature
of iOS-8 and Xcode-6.

679
00:30:02.766 --> 00:30:05.096 A:middle
That allows you to specify
how you're View Controller

680
00:30:05.096 --> 00:30:06.366 A:middle
and your UI adapt as
the available size

681
00:30:06.366 --> 00:30:07.976 A:middle
for your View controller
changes.

682
00:30:08.336 --> 00:30:11.766 A:middle
Let me tell you -- I'm going
to walk you through an example.

683
00:30:12.246 --> 00:30:13.676 A:middle
Let's say you start out
with some View Controller

684
00:30:13.766 --> 00:30:16.446 A:middle
with some size and it
grows to some new size.

685
00:30:16.986 --> 00:30:20.056 A:middle
What's important here
is not the point size

686
00:30:20.556 --> 00:30:23.366 A:middle
of your View Controller
either in the smaller

687
00:30:23.366 --> 00:30:24.866 A:middle
or bigger configuration.

688
00:30:25.186 --> 00:30:27.126 A:middle
What's important
is the magnitude

689
00:30:27.126 --> 00:30:29.776 A:middle
of the change, small versus big.

690
00:30:30.516 --> 00:30:33.026 A:middle
This magnitude is
called a Size Class.

691
00:30:33.796 --> 00:30:35.696 A:middle
A Size Class can have
one of two values.

692
00:30:35.696 --> 00:30:38.706 A:middle
Compact, think small, or
Regular, think bigger.

693
00:30:38.796 --> 00:30:41.866 A:middle
At any given time, a
View Controller is going

694
00:30:41.866 --> 00:30:45.326 A:middle
to have two Size Classes, one
horizontally and one vertically,

695
00:30:45.776 --> 00:30:48.476 A:middle
making a total number
of combinations, four.

696
00:30:48.606 --> 00:30:50.786 A:middle
So let's look at a
concrete example.

697
00:30:50.886 --> 00:30:54.636 A:middle
So I have our UI here and
when we're in landscape

698
00:30:54.636 --> 00:30:57.826 A:middle
on the iPhone, I'd really like
that bottom bar to tighten

699
00:30:57.826 --> 00:31:00.546 A:middle
up a little bit, to make
more room for those images.

700
00:31:00.546 --> 00:31:05.226 A:middle
So what we can do is
in the configurations

701
00:31:05.226 --> 00:31:08.066 A:middle
of our four configurations,
for whether that bar

702
00:31:08.066 --> 00:31:09.426 A:middle
or whether the View
Controller is

703
00:31:09.426 --> 00:31:12.946 A:middle
in a more compact vertical
environment, we can just set

704
00:31:12.986 --> 00:31:15.806 A:middle
that constant to 30 and the
bigger ones we can set at 52.

705
00:31:15.806 --> 00:31:17.136 A:middle
We're all good, right?

706
00:31:17.136 --> 00:31:18.096 A:middle
Well, kind of.

707
00:31:18.956 --> 00:31:21.416 A:middle
If you notice, I have to
specify the value twice.

708
00:31:21.416 --> 00:31:23.116 A:middle
And this is going to
make it really hard

709
00:31:23.116 --> 00:31:24.306 A:middle
to make edits in the future.

710
00:31:24.376 --> 00:31:26.456 A:middle
It's going to make
hard to maintain my app

711
00:31:26.456 --> 00:31:27.736 A:middle
because everytime I
make a change I've got

712
00:31:27.736 --> 00:31:28.806 A:middle
to make it in 2 places.

713
00:31:29.026 --> 00:31:31.496 A:middle
So Interface Builder
exposes a third value

714
00:31:31.496 --> 00:31:32.846 A:middle
in the Size Class called Any.

715
00:31:33.486 --> 00:31:36.396 A:middle
And Any is simply,
as its name suggests,

716
00:31:36.616 --> 00:31:38.036 A:middle
either of the size classes.

717
00:31:38.526 --> 00:31:42.716 A:middle
So I can say that I want that 30
to be for any horizontal class.

718
00:31:42.716 --> 00:31:44.256 A:middle
I don't care what the width is.

719
00:31:44.306 --> 00:31:46.416 A:middle
All I care is about the
height which is compact.

720
00:31:47.456 --> 00:31:48.616 A:middle
What about this 52?

721
00:31:49.196 --> 00:31:52.476 A:middle
Well, I could also put
it in Any for regular,

722
00:31:52.476 --> 00:31:55.476 A:middle
but where I really want
to put it is in Any Any.

723
00:31:56.346 --> 00:31:58.466 A:middle
This is the default
configuration.

724
00:31:58.796 --> 00:32:01.646 A:middle
This says that it doesn't
matter which device

725
00:32:01.646 --> 00:32:04.716 A:middle
or which orientation or what the
size of my View controller is,

726
00:32:04.716 --> 00:32:06.226 A:middle
I want to use these values.

727
00:32:06.486 --> 00:32:08.426 A:middle
And this brings up a
really important strategy

728
00:32:08.426 --> 00:32:10.746 A:middle
as you're designing
your applications.

729
00:32:11.206 --> 00:32:14.906 A:middle
You want to do as much work
in Any Any as possible.

730
00:32:15.226 --> 00:32:16.586 A:middle
And then you just branch

731
00:32:16.586 --> 00:32:20.516 A:middle
out to those more specific
configurations as needed.

732
00:32:20.516 --> 00:32:23.586 A:middle
Any this is going to make your
app much more maintainable

733
00:32:23.586 --> 00:32:24.816 A:middle
and much more adaptable.

734
00:32:24.816 --> 00:32:27.946 A:middle
Now this grid is going
to become really familiar

735
00:32:27.946 --> 00:32:31.206 A:middle
because this is actually
exactly how we expose switching

736
00:32:31.496 --> 00:32:34.026 A:middle
between the different
configurations inside of Xcode.

737
00:32:34.026 --> 00:32:35.796 A:middle
And let me show you
how that works.

738
00:32:35.796 --> 00:32:36.406 A:middle
All right.

739
00:32:37.156 --> 00:32:40.206 A:middle
So we're back in our
lovely storyboard here.

740
00:32:41.076 --> 00:32:42.166 A:middle
And the first thing
I'm going to do

741
00:32:42.166 --> 00:32:44.056 A:middle
in this storyboard is I'm
going to enable Size Classes.

742
00:32:44.146 --> 00:32:48.886 A:middle
So let me go ahead and open
up the Document Inspector here

743
00:32:48.886 --> 00:32:49.956 A:middle
and check Size Classes.

744
00:32:49.956 --> 00:32:51.366 A:middle
Now 2 things are
going to happen.

745
00:32:52.006 --> 00:32:54.176 A:middle
One, if your document
isn't using Auto Layout,

746
00:32:54.176 --> 00:32:55.686 A:middle
we're going to [inaudible]
a layout for you.

747
00:32:55.806 --> 00:32:59.246 A:middle
And them, secondly, it's going
to upgrade all of your segues

748
00:32:59.246 --> 00:33:01.636 A:middle
to the new Adaptive Segues.

749
00:33:01.636 --> 00:33:03.196 A:middle
Now, I'm going to talk
about that in a little bit.

750
00:33:03.196 --> 00:33:06.186 A:middle
So we're going to
enable Size Classes

751
00:33:06.186 --> 00:33:08.646 A:middle
and immediately we're seeing
the result, the designing,

752
00:33:08.806 --> 00:33:11.556 A:middle
and this great flexible
adaptable environment.

753
00:33:11.736 --> 00:33:14.956 A:middle
Our View Controllers are showing
a square to help reinforce

754
00:33:14.956 --> 00:33:17.716 A:middle
that you're not designing
for any particular device,

755
00:33:17.996 --> 00:33:22.206 A:middle
but rather for the particular
size or magnitude of size

756
00:33:22.206 --> 00:33:23.096 A:middle
of your View Controller.

757
00:33:24.426 --> 00:33:26.986 A:middle
So, the first thing that we
want to do is we want to take

758
00:33:26.986 --> 00:33:31.066 A:middle
that bar and make it a little
bit narrower or shorter

759
00:33:31.896 --> 00:33:33.786 A:middle
when our height is
a little narrower.

760
00:33:33.786 --> 00:33:39.166 A:middle
So I can just go ahead and put
the canvas into a configuration

761
00:33:39.166 --> 00:33:40.026 A:middle
that allows me to do that.

762
00:33:40.026 --> 00:33:42.766 A:middle
So this is the first thing with
Size Classes is transitioning

763
00:33:42.766 --> 00:33:44.186 A:middle
through the different
configurations.

764
00:33:44.296 --> 00:33:45.476 A:middle
It's really easy.

765
00:33:46.746 --> 00:33:49.646 A:middle
If I open up this control here
in the bottom of the canvas,

766
00:33:49.646 --> 00:33:52.546 A:middle
you can see it was that grid
that we were seeing earlier.

767
00:33:52.546 --> 00:33:54.906 A:middle
And this allows me to pick
which configuration I'm editing.

768
00:33:55.286 --> 00:33:56.686 A:middle
When I pick a configuration
to edit,

769
00:33:56.686 --> 00:33:58.646 A:middle
it's going to resize
the View Controllers

770
00:33:58.906 --> 00:34:01.126 A:middle
for that particular
configuration to reflect that.

771
00:34:01.496 --> 00:34:03.596 A:middle
And now, any edits
that I make inside

772
00:34:03.596 --> 00:34:06.546 A:middle
of this particular
configuration will be customized

773
00:34:06.546 --> 00:34:07.566 A:middle
for that configuration.

774
00:34:08.436 --> 00:34:11.005 A:middle
So let's go ahead and do
that now for the constant,

775
00:34:11.005 --> 00:34:12.896 A:middle
the height constant, on our bar.

776
00:34:12.896 --> 00:34:14.856 A:middle
So I'm going to go
ahead and select this.

777
00:34:14.856 --> 00:34:16.856 A:middle
Now I could double-click
to edit this constraint,

778
00:34:16.856 --> 00:34:17.876 A:middle
but instead what I'm
going to do is I'm going

779
00:34:17.876 --> 00:34:19.136 A:middle
to open the Size Inspector.

780
00:34:19.275 --> 00:34:23.326 A:middle
And you can see here all
the constraints for my bar.

781
00:34:23.676 --> 00:34:26.606 A:middle
Well, I really just want to see
the ones that are being defined

782
00:34:26.606 --> 00:34:28.826 A:middle
by my parent to kind of
position and size this.

783
00:34:28.826 --> 00:34:32.056 A:middle
I'm just going to filter the
constraints down to those.

784
00:34:32.926 --> 00:34:35.896 A:middle
And furthermore, I'm just going
to look at size constraints.

785
00:34:37.456 --> 00:34:41.556 A:middle
Then, to change the constant,
just click once, type in 30,

786
00:34:41.686 --> 00:34:44.335 A:middle
hit Return, and now
I've customized my bar

787
00:34:44.656 --> 00:34:46.976 A:middle
for Any compact.

788
00:34:47.516 --> 00:34:53.065 A:middle
[ Applause ]

789
00:34:53.565 --> 00:34:55.545 A:middle
And you can see the
result of that

790
00:34:55.545 --> 00:34:56.775 A:middle
if I switch back
to Any Any here.

791
00:34:56.976 --> 00:35:00.436 A:middle
And you can see that bar grew
back to that taller height.

792
00:35:00.666 --> 00:35:03.356 A:middle
So, really, really easy
to make customizations

793
00:35:03.356 --> 00:35:04.446 A:middle
between configurations.

794
00:35:04.866 --> 00:35:06.916 A:middle
Now the second thing about
Size Classes that I wanted

795
00:35:06.916 --> 00:35:08.986 A:middle
to say is well, what's
customizable

796
00:35:08.986 --> 00:35:10.196 A:middle
between configurations?

797
00:35:10.636 --> 00:35:12.406 A:middle
There are four things
that are customizable

798
00:35:12.406 --> 00:35:13.576 A:middle
between configurations.

799
00:35:13.726 --> 00:35:15.566 A:middle
One, I can change a
constraint constant.

800
00:35:16.076 --> 00:35:17.156 A:middle
Two, I can change a font.

801
00:35:17.756 --> 00:35:20.056 A:middle
Three, I can change whole
sets of constraints.

802
00:35:20.056 --> 00:35:21.826 A:middle
I can turn off an entire
set of constraints,

803
00:35:21.826 --> 00:35:24.796 A:middle
say my Portrait Constraints,
and turn on a whole other set,

804
00:35:24.796 --> 00:35:26.106 A:middle
say my Landscape Constraints.

805
00:35:27.036 --> 00:35:29.886 A:middle
And then, fourth, I can
also customize sub-views,

806
00:35:29.926 --> 00:35:30.926 A:middle
turning them on and off.

807
00:35:30.926 --> 00:35:32.256 A:middle
And this is different
from hidden.

808
00:35:32.656 --> 00:35:35.266 A:middle
When a view is just hidden, it's
still participating in layout.

809
00:35:35.756 --> 00:35:38.836 A:middle
But when I uninstall the
constraint using the view using

810
00:35:38.836 --> 00:35:41.726 A:middle
Size Classes, it actually takes
it out of the View hierarchy

811
00:35:41.956 --> 00:35:43.436 A:middle
so I can have new
sets of constraints.

812
00:35:44.356 --> 00:35:45.986 A:middle
So let's see an example
of that now.

813
00:35:46.906 --> 00:35:48.966 A:middle
When I don't have a lot
of horizontal space,

814
00:35:48.966 --> 00:35:50.936 A:middle
I want to turn off this rating.

815
00:35:52.186 --> 00:35:56.406 A:middle
So I'm going to go ahead and put
the canvas into compact width.

816
00:35:56.406 --> 00:35:57.806 A:middle
And I don't really
care what height it is.

817
00:35:57.806 --> 00:36:01.456 A:middle
It can, you know, be as tall
or short as it needs to be.

818
00:36:01.986 --> 00:36:04.846 A:middle
And you can see, wow, yeah,
that looks pretty bad.

819
00:36:04.946 --> 00:36:06.656 A:middle
So let's go ahead and
turn that caption off.

820
00:36:06.776 --> 00:36:09.606 A:middle
When I want to turn
a sub-view off

821
00:36:09.606 --> 00:36:12.146 A:middle
in a configuration it's
really just as easy

822
00:36:12.146 --> 00:36:14.036 A:middle
as turning off the constraints
of that configuration

823
00:36:14.036 --> 00:36:15.566 A:middle
and then turning
the View off itself.

824
00:36:16.526 --> 00:36:19.156 A:middle
When I use the constraint
commands over in this menu,

825
00:36:19.156 --> 00:36:21.626 A:middle
they're going to apply, again,
for just this configuration.

826
00:36:21.626 --> 00:36:23.876 A:middle
So let's go ahead and just clear
the constraints for this View,

827
00:36:24.156 --> 00:36:26.416 A:middle
and now we can uninstall
it from this configuration.

828
00:36:26.906 --> 00:36:29.556 A:middle
I can do this using the
Inspector on a per-view instance

829
00:36:29.636 --> 00:36:31.286 A:middle
or a really quick
shortcut for getting

830
00:36:31.286 --> 00:36:33.776 A:middle
that done is just
Command-Delete.

831
00:36:34.116 --> 00:36:36.046 A:middle
And Command-Delete
will just turn it off

832
00:36:36.046 --> 00:36:36.996 A:middle
in this configuration.

833
00:36:37.236 --> 00:36:39.716 A:middle
Delete will delete it in
all of the configurations.

834
00:36:41.156 --> 00:36:44.306 A:middle
I also want to go ahead
and remove this constraint.

835
00:36:44.306 --> 00:36:46.246 A:middle
So I can just select the
constraint, Command-Delete,

836
00:36:46.246 --> 00:36:47.126 A:middle
and now I've turned it off.

837
00:36:47.356 --> 00:36:48.916 A:middle
And now I can add
new constraints

838
00:36:48.916 --> 00:36:50.166 A:middle
for just this configuration.

839
00:36:50.336 --> 00:36:52.176 A:middle
So I'd like to take
this Rating View

840
00:36:52.176 --> 00:36:54.416 A:middle
and align it horizontally
in my container.

841
00:36:54.486 --> 00:36:56.966 A:middle
And I'm going to use the
new -- or not the new --

842
00:36:57.046 --> 00:36:59.686 A:middle
just the existing
alignment pop over here.

843
00:37:00.486 --> 00:37:02.936 A:middle
I'm going to choose Horizontal,
Center, and Container.

844
00:37:03.356 --> 00:37:06.616 A:middle
And I'm going to change one
of this Update Frame's values.

845
00:37:06.716 --> 00:37:08.026 A:middle
You might have been
wondering what this is.

846
00:37:08.476 --> 00:37:11.216 A:middle
This allows, when you're
adding new constraints,

847
00:37:11.596 --> 00:37:13.946 A:middle
the values that you're
adding those constraints

848
00:37:13.946 --> 00:37:15.466 A:middle
for might not be
the actual values

849
00:37:15.466 --> 00:37:17.046 A:middle
that are currently
reflected in the canvas.

850
00:37:17.046 --> 00:37:19.636 A:middle
For example, I want to add
Center in my bottom bar

851
00:37:19.636 --> 00:37:22.016 A:middle
but my View currently isn't
centered in the bottom bar.

852
00:37:22.376 --> 00:37:23.656 A:middle
So I can tell Interface
Builder, hey,

853
00:37:23.656 --> 00:37:25.866 A:middle
when you add these constraints,
just go ahead and put the Views

854
00:37:26.196 --> 00:37:27.296 A:middle
in those new locations.

855
00:37:27.656 --> 00:37:29.496 A:middle
And that's what these
options allow me to do.

856
00:37:29.946 --> 00:37:32.566 A:middle
All Frames is just -- it updates
it for the whole View Controller

857
00:37:32.866 --> 00:37:34.316 A:middle
and items of new constraints.

858
00:37:34.506 --> 00:37:36.326 A:middle
This is helpful if you're
in the middle of doing a lot

859
00:37:36.326 --> 00:37:38.186 A:middle
of different constraint
surgery and you just want

860
00:37:38.186 --> 00:37:39.326 A:middle
to move one or two Views.

861
00:37:39.786 --> 00:37:40.676 A:middle
But I'm going to
do in this case,

862
00:37:40.716 --> 00:37:43.226 A:middle
I'm going to do all the
frames in my View Controller.

863
00:37:43.226 --> 00:37:44.606 A:middle
And you can see it adds
that constraint [whoosh]

864
00:37:44.606 --> 00:37:47.686 A:middle
and it slides that
Rating View right on over.

865
00:37:47.966 --> 00:37:53.916 A:middle
And if we go back
to Any Any, voila.

866
00:37:53.916 --> 00:37:56.086 A:middle
We've customized our interface

867
00:37:56.086 --> 00:37:58.416 A:middle
across two different
configurations very,

868
00:37:58.416 --> 00:37:59.096 A:middle
very easily.

869
00:37:59.466 --> 00:38:01.246 A:middle
And let's see what this
looks like at runtime.

870
00:38:02.636 --> 00:38:04.646 A:middle
If I go ahead and
run my application.

871
00:38:08.116 --> 00:38:10.786 A:middle
There it's showing up, and I
can rotate it, and you can see

872
00:38:10.786 --> 00:38:12.626 A:middle
that bar is automatically
adjusting.

873
00:38:13.026 --> 00:38:15.456 A:middle
And on iPhone, because
it's compact,

874
00:38:15.456 --> 00:38:17.076 A:middle
you can see that that
caption isn't showing.

875
00:38:17.706 --> 00:38:21.116 A:middle
Now one thing I haven't
talked about or pointed out

876
00:38:21.116 --> 00:38:22.866 A:middle
yet is maybe something
that you guys are wondering

877
00:38:22.866 --> 00:38:25.826 A:middle
and you're saying, hey,
you had an iPad storyboard.

878
00:38:25.976 --> 00:38:26.586 A:middle
Wait a second.

879
00:38:27.166 --> 00:38:28.696 A:middle
I saw a Split-View
Controller in there.

880
00:38:28.696 --> 00:38:30.066 A:middle
I saw that you had
a Replace Segue.

881
00:38:30.066 --> 00:38:31.616 A:middle
I saw that you had
a Popover Segue.

882
00:38:32.136 --> 00:38:33.716 A:middle
How is that working on iPhone?

883
00:38:34.416 --> 00:38:37.786 A:middle
With the new adaptive View
Controller API in iOS 8,

884
00:38:38.416 --> 00:38:41.206 A:middle
all the wonderful system
classes that you've come to know

885
00:38:41.206 --> 00:38:43.926 A:middle
and love work on
both iPad and iPhone.

886
00:38:44.446 --> 00:38:45.356 A:middle
And the way that it works is

887
00:38:45.356 --> 00:38:47.556 A:middle
that they adapt their
environment based upon

888
00:38:47.556 --> 00:38:48.706 A:middle
that available size.

889
00:38:49.266 --> 00:38:51.036 A:middle
So, for example, our
Split View Controller ,

890
00:38:51.476 --> 00:38:53.166 A:middle
instead of showing side-by-side,

891
00:38:53.216 --> 00:38:55.636 A:middle
because the environment is more
compact, it's actually going

892
00:38:55.636 --> 00:38:58.936 A:middle
to just push my detail
onto my master when I'm

893
00:38:58.986 --> 00:39:02.116 A:middle
in a more compact
environment like an iPhone.

894
00:39:02.266 --> 00:39:05.396 A:middle
Similarly, with my
Popover Segue,

895
00:39:05.396 --> 00:39:08.956 A:middle
instead of being a popover
on iPhone, it's been turned

896
00:39:08.956 --> 00:39:11.956 A:middle
into a modal without
me writing any code.

897
00:39:12.046 --> 00:39:15.306 A:middle
And this has to do with those
new Adaptive Segue types.

898
00:39:15.306 --> 00:39:20.196 A:middle
So let's take a look
at those now.

899
00:39:20.336 --> 00:39:23.866 A:middle
If I select this
Popover Segue here and go

900
00:39:23.866 --> 00:39:26.006 A:middle
over to the Attributes
Inspector, you can see it's one

901
00:39:26.006 --> 00:39:28.076 A:middle
of the new Present
As Popover Segues.

902
00:39:28.076 --> 00:39:29.556 A:middle
And this is one of the
new Adaptive Segues.

903
00:39:29.556 --> 00:39:32.116 A:middle
Let's take a look at what
other Adaptive Segues we have.

904
00:39:33.146 --> 00:39:35.336 A:middle
Show is a replacement,
for example, for Push.

905
00:39:35.616 --> 00:39:38.656 A:middle
And what Show in Show Detail
does is it looks at the context

906
00:39:38.656 --> 00:39:40.876 A:middle
that you're in to
decide what to do.

907
00:39:41.256 --> 00:39:43.566 A:middle
So, for example, a Split
View Controller in iPad,

908
00:39:43.566 --> 00:39:45.136 A:middle
it's going to actually
replace the Detail

909
00:39:45.136 --> 00:39:47.136 A:middle
if you have a Show Detail.

910
00:39:47.636 --> 00:39:49.436 A:middle
But on iPhone, it's
going to push

911
00:39:49.436 --> 00:39:52.456 A:middle
that Detail aside
on to the Master.

912
00:39:53.106 --> 00:39:54.696 A:middle
Now what's really
cool about this is

913
00:39:54.696 --> 00:39:56.276 A:middle
that this is accomplished

914
00:39:56.276 --> 00:39:59.486 A:middle
by using two new UIView
Controller Selectors,

915
00:39:59.486 --> 00:40:00.976 A:middle
Show View Controller and
Show Detail View Controller.

916
00:40:01.136 --> 00:40:05.106 A:middle
You can override these
for custom containers

917
00:40:05.366 --> 00:40:07.786 A:middle
and then you can design those
containers in Interface Builder

918
00:40:07.786 --> 00:40:10.786 A:middle
to set up your Segues and it's
just going to work at runtime.

919
00:40:11.336 --> 00:40:15.636 A:middle
The other two types are Present
Modally and Present As Popover.

920
00:40:16.126 --> 00:40:20.676 A:middle
And these are using the Present
View Controller API instead

921
00:40:20.676 --> 00:40:23.296 A:middle
of Present Modal View
Controller which allows you

922
00:40:23.296 --> 00:40:27.456 A:middle
to take advantage of the new
Presentation Controller API

923
00:40:27.926 --> 00:40:30.606 A:middle
which is a new object when you
use Present View Controller.

924
00:40:30.756 --> 00:40:33.986 A:middle
And you can do things like make
sure that the custom transitions

925
00:40:33.986 --> 00:40:36.656 A:middle
that you have are
all coordinated along

926
00:40:36.656 --> 00:40:39.236 A:middle
with the animations which
is really, really great.

927
00:40:39.456 --> 00:40:42.186 A:middle
So we're going to use
Present As Popover

928
00:40:42.586 --> 00:40:45.796 A:middle
which will allow our
Presentation View Controller

929
00:40:46.716 --> 00:40:47.786 A:middle
to automatically adapt.

930
00:40:48.936 --> 00:40:52.206 A:middle
Now if I go back to
my storyboard here,

931
00:40:52.206 --> 00:40:55.106 A:middle
you can see there's no
button for closing this.

932
00:40:55.656 --> 00:40:59.526 A:middle
And so, if I had time, I
could go ahead and add this,

933
00:40:59.786 --> 00:41:01.046 A:middle
and you're welcome
to come on the labs

934
00:41:01.046 --> 00:41:02.076 A:middle
and I'll show you
how to do this.

935
00:41:02.376 --> 00:41:04.436 A:middle
But with the new Adaptive
View Controller API,

936
00:41:04.436 --> 00:41:07.686 A:middle
what I can do is I can
take advantage of some

937
00:41:07.686 --> 00:41:10.006 A:middle
of the overrides in delicate
methods to do things like,

938
00:41:10.076 --> 00:41:11.656 A:middle
for example in this
case, I can say,

939
00:41:11.656 --> 00:41:14.746 A:middle
when this Popover Segue
gets fired, go ahead

940
00:41:14.746 --> 00:41:16.576 A:middle
and wrap the View Control
that you're presenting

941
00:41:16.756 --> 00:41:20.256 A:middle
in a Navigation Controller,
add a bar item, and then just

942
00:41:20.256 --> 00:41:22.886 A:middle
on iPhone it's going to show
me a Done button that I can use

943
00:41:22.886 --> 00:41:25.406 A:middle
to close that Modal
View Controller.

944
00:41:25.746 --> 00:41:28.486 A:middle
But when on iPad, and it's
showing as a Popover, well,

945
00:41:28.486 --> 00:41:30.896 A:middle
I don't need that,
so it won't show it.

946
00:41:30.896 --> 00:41:34.306 A:middle
Very, very cool for being
able to create great apps

947
00:41:34.356 --> 00:41:37.166 A:middle
between both iPhone and iPad.

948
00:41:39.116 --> 00:41:41.036 A:middle
So we just talked
about Size Classes.

949
00:41:41.496 --> 00:41:43.956 A:middle
And, again, Size Classes is
a really great technology

950
00:41:43.956 --> 00:41:45.696 A:middle
that will make it
really easy for you guys

951
00:41:46.046 --> 00:41:49.346 A:middle
to create these experiences
both for iPhone and iPad all

952
00:41:49.346 --> 00:41:50.966 A:middle
within the same storyboard.

953
00:41:51.176 --> 00:41:54.166 A:middle
And I also talked to you about
the new Adaptive Segue Types.

954
00:41:54.166 --> 00:41:55.046 A:middle
And we really want you guys

955
00:41:55.046 --> 00:41:56.956 A:middle
to use these new Adaptive
Segue Types because it's going

956
00:41:56.956 --> 00:41:59.806 A:middle
to make your application
be able to, hence,

957
00:41:59.806 --> 00:42:02.426 A:middle
as their name suggests,
adapt very easily

958
00:42:02.736 --> 00:42:03.646 A:middle
between the different types

959
00:42:03.646 --> 00:42:05.036 A:middle
of environments that
it might run in.

960
00:42:05.036 --> 00:42:08.936 A:middle
I also pointed out that you
can create custom containers

961
00:42:08.936 --> 00:42:12.476 A:middle
and use those Show and Show
Detail View Controller methods

962
00:42:12.826 --> 00:42:16.176 A:middle
to customize exactly how those
View Controllers are going

963
00:42:16.176 --> 00:42:16.636 A:middle
to get presented.

964
00:42:16.636 --> 00:42:19.176 A:middle
Maybe you have a Sliding
View Controller or something

965
00:42:19.176 --> 00:42:21.066 A:middle
like that, and you
can build all that now

966
00:42:21.066 --> 00:42:22.006 A:middle
within Interface Builder.

967
00:42:22.886 --> 00:42:25.396 A:middle
What I want to do now is have
my colleague, Quinn, come up.

968
00:42:25.396 --> 00:42:27.336 A:middle
He's going to show you
even more stuff that's new

969
00:42:27.336 --> 00:42:28.046 A:middle
in Interface Builder

970
00:42:28.046 --> 00:42:29.586 A:middle
and hopefully tell some
better jokes than I did.

971
00:42:29.886 --> 00:42:30.166 A:middle
Quinn.

972
00:42:31.516 --> 00:42:36.546 A:middle
[ Applause ]

973
00:42:37.046 --> 00:42:37.356 A:middle
&gt;&gt; Thank you.

974
00:42:37.356 --> 00:42:38.016 A:middle
Hi. Thank you, Kevin.

975
00:42:38.426 --> 00:42:39.446 A:middle
So my name is Quinn Taylor.

976
00:42:39.446 --> 00:42:41.866 A:middle
I'm also an Engineer on
the Interface Builder Team.

977
00:42:41.866 --> 00:42:43.126 A:middle
This is such a fantastic team

978
00:42:43.126 --> 00:42:45.356 A:middle
and I hope you can feel how
much hard work we've done

979
00:42:45.356 --> 00:42:46.186 A:middle
to bring to you guys.

980
00:42:46.186 --> 00:42:48.086 A:middle
We love these new features
and I can't wait to tell you

981
00:42:48.086 --> 00:42:48.796 A:middle
about a few more of them.

982
00:42:49.806 --> 00:42:52.066 A:middle
So, first off, I want to talk
to you about Asset Catalogs.

983
00:42:52.366 --> 00:42:54.936 A:middle
We introduced Asset Catalogs
last year with Xcode 5.

984
00:42:55.286 --> 00:42:56.346 A:middle
And they're a fantastic way

985
00:42:56.346 --> 00:42:58.766 A:middle
to manage resources
inside your application,

986
00:42:58.856 --> 00:43:00.186 A:middle
both for iOS and for OS X.

987
00:43:00.186 --> 00:43:03.026 A:middle
And one of the first new
features that we've added

988
00:43:03.026 --> 00:43:06.396 A:middle
to Asset Catalogs in Xcode 6
is support for Size Classes.

989
00:43:06.716 --> 00:43:08.576 A:middle
As Kevin has just been
demonstrating to you,

990
00:43:08.816 --> 00:43:12.066 A:middle
you can easily adapt your
user interface for compact

991
00:43:12.066 --> 00:43:13.026 A:middle
or regular height or width.

992
00:43:13.296 --> 00:43:15.716 A:middle
And now notice that we have
new fields in the Inspector

993
00:43:15.776 --> 00:43:17.646 A:middle
when you selected an image
in your Asset Catalog

994
00:43:17.956 --> 00:43:19.476 A:middle
that allow you to
customize the same way.

995
00:43:20.016 --> 00:43:21.026 A:middle
Now if you select
one of these --

996
00:43:21.186 --> 00:43:23.576 A:middle
for example, we'll
customize on compact width.

997
00:43:23.996 --> 00:43:25.566 A:middle
You'll see that new rows
appear that allow me

998
00:43:25.626 --> 00:43:29.336 A:middle
to optionally specify new
images that will be used if I'm

999
00:43:29.366 --> 00:43:30.956 A:middle
in a compact width scenario.

1000
00:43:31.536 --> 00:43:34.266 A:middle
So, any images that you
don't actually specify

1001
00:43:34.436 --> 00:43:36.316 A:middle
for a specific configuration
will be inherited

1002
00:43:36.386 --> 00:43:37.846 A:middle
from a less specific
configuration,

1003
00:43:37.846 --> 00:43:40.176 A:middle
just as Kevin was talking
about with Any Any.

1004
00:43:40.366 --> 00:43:42.186 A:middle
So this is a fantastic feature
to allow you to customize.

1005
00:43:43.476 --> 00:43:45.206 A:middle
Second, Alignment support.

1006
00:43:45.586 --> 00:43:48.196 A:middle
So, there may be occasions
where you have an image provided

1007
00:43:48.196 --> 00:43:49.066 A:middle
to you by a designer

1008
00:43:49.316 --> 00:43:51.406 A:middle
that doesn't fill the
entire space of the image.

1009
00:43:51.406 --> 00:43:54.196 A:middle
For example, it may have a
glow effect, some other padding

1010
00:43:54.276 --> 00:43:55.926 A:middle
that causes it to be inset.

1011
00:43:56.286 --> 00:43:59.516 A:middle
And now you can also show
that information and convey

1012
00:43:59.516 --> 00:44:02.476 A:middle
that inside of Interface
Builder and your Asset Catalogs.

1013
00:44:02.726 --> 00:44:05.426 A:middle
And this will correspond to
the Alignment Rect Properties

1014
00:44:05.426 --> 00:44:08.566 A:middle
on either NSImage or UIImage
when you can specify alignments

1015
00:44:08.726 --> 00:44:10.196 A:middle
from any of the four edges.

1016
00:44:10.466 --> 00:44:11.226 A:middle
This is fantastic.

1017
00:44:12.436 --> 00:44:14.706 A:middle
And next is Image Formats.

1018
00:44:14.816 --> 00:44:16.696 A:middle
So when we launched the
Asset Catalogs last year,

1019
00:44:16.816 --> 00:44:18.206 A:middle
we supported PNG images.

1020
00:44:18.536 --> 00:44:19.416 A:middle
So we've heard your requests.

1021
00:44:19.416 --> 00:44:20.696 A:middle
The first thing we
added is support

1022
00:44:20.696 --> 00:44:21.716 A:middle
for JPEG images [applause].

1023
00:44:22.556 --> 00:44:22.646 A:middle
&gt;&gt; Whoo.

1024
00:44:23.276 --> 00:44:25.666 A:middle
&gt;&gt; Some of you love
your JPEG images.

1025
00:44:26.496 --> 00:44:28.536 A:middle
This can be really handy
when you have resources

1026
00:44:28.536 --> 00:44:30.896 A:middle
that might be large and compress
better with JPEG than they do

1027
00:44:31.026 --> 00:44:32.196 A:middle
with PNG, so you can save space

1028
00:44:32.196 --> 00:44:33.806 A:middle
in your application,
and that's great.

1029
00:44:33.876 --> 00:44:37.006 A:middle
Second is PF vector images,
and these are great as well.

1030
00:44:37.316 --> 00:44:40.516 A:middle
So this is -- let me tell
you, this is a fantastic way

1031
00:44:41.086 --> 00:44:44.006 A:middle
to specify an image that
will scale automatically

1032
00:44:44.006 --> 00:44:45.586 A:middle
to your different
scales and resolutions.

1033
00:44:46.396 --> 00:44:48.476 A:middle
When you're building an
Asset Catalog for iOS,

1034
00:44:48.916 --> 00:44:50.756 A:middle
those vector images
we've rasterized

1035
00:44:50.946 --> 00:44:53.586 A:middle
to the correct resolutions
and scales at build time.

1036
00:44:54.006 --> 00:44:56.216 A:middle
On OS X, however, they're
preserved at runtime

1037
00:44:56.216 --> 00:44:58.376 A:middle
and they'll even appear
at scale for printing

1038
00:44:58.536 --> 00:45:00.466 A:middle
which is a really cool bonus.

1039
00:45:00.466 --> 00:45:03.796 A:middle
And you're also able to mix and
match bitmap and vector images

1040
00:45:03.796 --> 00:45:05.186 A:middle
for any particular asset.

1041
00:45:06.136 --> 00:45:07.826 A:middle
And last is support
for template images.

1042
00:45:07.876 --> 00:45:09.256 A:middle
Matthew mentioned
this a bit on Monday.

1043
00:45:09.636 --> 00:45:12.606 A:middle
Template images allow an
image to be treated kind

1044
00:45:12.606 --> 00:45:15.116 A:middle
of as a stencil in
your application

1045
00:45:15.346 --> 00:45:17.926 A:middle
so you get kind of
a outline effect.

1046
00:45:18.426 --> 00:45:19.576 A:middle
And traditionally this is done

1047
00:45:19.576 --> 00:45:22.186 A:middle
by detecting whether the
file name ends in "Template."

1048
00:45:22.646 --> 00:45:24.706 A:middle
And now we give you the
ability to override this,

1049
00:45:24.706 --> 00:45:27.026 A:middle
[inaudible] default behavior
directly in Interface Builder

1050
00:45:27.096 --> 00:45:28.046 A:middle
in your Asset Catalogs.

1051
00:45:28.826 --> 00:45:30.306 A:middle
So, that's it for
Asset Catalogs.

1052
00:45:30.636 --> 00:45:32.206 A:middle
Next, you've seen
a few new classes.

1053
00:45:32.206 --> 00:45:33.756 A:middle
I'm going to talk
about OS X for minute.

1054
00:45:33.756 --> 00:45:37.016 A:middle
NSVisualEffectView is a brand
new class in OS X Yosemite.

1055
00:45:37.886 --> 00:45:39.936 A:middle
You've seen in pervasively
throughout the system behind

1056
00:45:39.936 --> 00:45:42.936 A:middle
Notification Center,
behind your menus

1057
00:45:42.936 --> 00:45:44.506 A:middle
and behind your source
lists and so on.

1058
00:45:44.826 --> 00:45:47.586 A:middle
You'll see effects like
blurring, translucency,

1059
00:45:47.676 --> 00:45:49.926 A:middle
vibrancy, punch-through
effects, and masking.

1060
00:45:50.246 --> 00:45:52.986 A:middle
And you can bring
these same effects

1061
00:45:53.096 --> 00:45:54.426 A:middle
to your own applications.

1062
00:45:55.256 --> 00:45:57.786 A:middle
VisualEffectView is supported
completely in Interface Builder.

1063
00:45:58.086 --> 00:46:00.706 A:middle
And you can have your own
custom views participate

1064
00:46:00.706 --> 00:46:01.696 A:middle
in vibrancy effects

1065
00:46:01.966 --> 00:46:04.936 A:middle
by overriding the allowsVibrancy
method on NSView or UIView.

1066
00:46:05.176 --> 00:46:07.556 A:middle
For much more information
about how to integrate this,

1067
00:46:07.946 --> 00:46:10.386 A:middle
definitely check out this
session on Adopting New Features

1068
00:46:10.386 --> 00:46:11.866 A:middle
of the UI in Yosemite on video.

1069
00:46:13.496 --> 00:46:15.926 A:middle
Next, you've heard word
of a new System Font.

1070
00:46:15.926 --> 00:46:16.706 A:middle
Andrea's talked about this.

1071
00:46:16.736 --> 00:46:19.286 A:middle
The great news is for you,
you don't have to do anything.

1072
00:46:19.726 --> 00:46:21.446 A:middle
Use the system font;
it's going to work.

1073
00:46:21.516 --> 00:46:23.006 A:middle
AppKit and Xcode will
take care of you,

1074
00:46:23.356 --> 00:46:24.846 A:middle
so you don't have any
worries on that front.

1075
00:46:25.556 --> 00:46:28.366 A:middle
Speaking of fonts, iOS
Custom Fonts [applause].

1076
00:46:28.366 --> 00:46:30.446 A:middle
You're already excited.

1077
00:46:32.656 --> 00:46:33.626 A:middle
I share your enthusiasm.

1078
00:46:34.906 --> 00:46:36.656 A:middle
For a couple of releases
now, you've been able

1079
00:46:36.656 --> 00:46:40.036 A:middle
to use Custom Fonts in
your iOS Applications.

1080
00:46:40.156 --> 00:46:42.206 A:middle
You can put them in your project
and copy them to your bundle.

1081
00:46:42.586 --> 00:46:44.666 A:middle
And now we're adding
support for being able

1082
00:46:44.666 --> 00:46:46.946 A:middle
to pick those fonts
directly in Interface Builder

1083
00:46:47.086 --> 00:46:48.696 A:middle
and have them show up in
the canvas live for you.

1084
00:46:49.036 --> 00:46:51.606 A:middle
So here I've chosen this font
that looked pretty cool in OS X,

1085
00:46:51.606 --> 00:46:54.106 A:middle
brought it over, and I can
see, I can ingest the metrics

1086
00:46:54.106 --> 00:46:55.846 A:middle
and make sure that it looks
just right without having

1087
00:46:55.846 --> 00:46:57.146 A:middle
to run my application
over and over.

1088
00:46:57.326 --> 00:46:58.646 A:middle
This is a fantastic timesaver.

1089
00:47:00.026 --> 00:47:01.366 A:middle
All right.

1090
00:47:01.366 --> 00:47:03.246 A:middle
So pictures are worth
a thousand words.

1091
00:47:03.926 --> 00:47:06.076 A:middle
I feel that demos are
worth a thousand pictures.

1092
00:47:06.076 --> 00:47:11.976 A:middle
You know, I'm going to,
I'm going to get in a --

1093
00:47:11.976 --> 00:47:13.896 A:middle
step on Kevin's toes
just a little bit here

1094
00:47:14.486 --> 00:47:15.696 A:middle
with this custom font.

1095
00:47:15.826 --> 00:47:18.136 A:middle
So I've got my iOS story,
but he's been working on.

1096
00:47:18.806 --> 00:47:20.716 A:middle
And, you know, this
looks fantastic.

1097
00:47:20.716 --> 00:47:21.916 A:middle
He's done such an awesome job.

1098
00:47:22.416 --> 00:47:25.346 A:middle
But, you know, the thing
is, this is a vacation app.

1099
00:47:25.346 --> 00:47:27.046 A:middle
And to make it, you know,
make it a little bit more fun

1100
00:47:27.046 --> 00:47:29.236 A:middle
and vacationey, maybe we
just need a custom font.

1101
00:47:29.686 --> 00:47:32.426 A:middle
Now I've actually snuck a
font into his project here.

1102
00:47:32.426 --> 00:47:36.206 A:middle
So I'm going to go right over to
the Font Picker, and you'll see

1103
00:47:36.206 --> 00:47:38.506 A:middle
that it shows right up in
here in Interface Builder,

1104
00:47:38.746 --> 00:47:39.716 A:middle
and I can pick my font.

1105
00:47:39.716 --> 00:47:40.216 A:middle
It shows right up.

1106
00:47:40.476 --> 00:47:41.576 A:middle
Now that looks a
little bit smaller

1107
00:47:41.576 --> 00:47:43.476 A:middle
than what I was expecting,
so maybe I can bump

1108
00:47:43.476 --> 00:47:45.446 A:middle
up the size just a
little bit to 36.

1109
00:47:45.446 --> 00:47:46.096 A:middle
That looks pretty good.

1110
00:47:46.416 --> 00:47:50.356 A:middle
And I could do the same thing
here for my subtitle, my label.

1111
00:47:51.066 --> 00:47:56.166 A:middle
Hmm. Bump the size up to
-- 20 looks pretty good.

1112
00:47:56.166 --> 00:47:59.296 A:middle
Okay. And now, since those fonts
are just a little bit different

1113
00:47:59.296 --> 00:48:02.396 A:middle
in metrics, I can
update those frames.

1114
00:48:02.796 --> 00:48:04.206 A:middle
Okay. So that looks fantastic.

1115
00:48:04.206 --> 00:48:06.006 A:middle
Now I can see right on
the canvas what it's going

1116
00:48:06.006 --> 00:48:06.656 A:middle
to look like at runtime.

1117
00:48:06.656 --> 00:48:08.446 A:middle
I've got that information
available to me.

1118
00:48:08.676 --> 00:48:10.116 A:middle
And it's going to
save a lot of time

1119
00:48:10.356 --> 00:48:12.026 A:middle
when you're designing
your iOS Applications.

1120
00:48:12.946 --> 00:48:13.316 A:middle
All right.

1121
00:48:13.316 --> 00:48:15.516 A:middle
So now I'm going to jump over
to what I've been working

1122
00:48:15.516 --> 00:48:16.956 A:middle
on while Kevin was onstage.

1123
00:48:16.956 --> 00:48:19.136 A:middle
I was working on the
Mac version of this.

1124
00:48:19.536 --> 00:48:21.906 A:middle
He's a pretty quick worker, so I
was trying to catch up with him.

1125
00:48:22.076 --> 00:48:24.456 A:middle
I've kind of copied some of
his work here, you can see.

1126
00:48:24.456 --> 00:48:25.896 A:middle
So we've got a very
similar layout.

1127
00:48:25.896 --> 00:48:28.326 A:middle
And what you'll notice is
I'm using OS X Storyboards

1128
00:48:28.666 --> 00:48:30.786 A:middle
which is a new feature
in OS X Yosemite.

1129
00:48:31.366 --> 00:48:32.756 A:middle
And, if you're familiar
with storyboards,

1130
00:48:32.756 --> 00:48:34.856 A:middle
this will be immediately
comfortable to you.

1131
00:48:35.016 --> 00:48:38.226 A:middle
We're building up our
interface using Scenes connected

1132
00:48:38.226 --> 00:48:38.866 A:middle
with Segues.

1133
00:48:38.956 --> 00:48:41.176 A:middle
And we're showing our
organization directly here

1134
00:48:41.176 --> 00:48:42.926 A:middle
in the canvas, all the
connections between them,

1135
00:48:42.926 --> 00:48:44.546 A:middle
and how my application's
going to flow.

1136
00:48:44.826 --> 00:48:46.486 A:middle
And this can be an
incredibly convenient way

1137
00:48:46.836 --> 00:48:49.396 A:middle
to see how your application
works.

1138
00:48:49.646 --> 00:48:51.996 A:middle
You'll notice that my main menu
is actually still present here

1139
00:48:51.996 --> 00:48:55.626 A:middle
and I can edit that just
as I would in .VIV Files.

1140
00:48:55.796 --> 00:48:58.206 A:middle
You can actually do your
entire application development

1141
00:48:58.206 --> 00:48:59.366 A:middle
within an OS X Storyboard.

1142
00:48:59.866 --> 00:49:04.176 A:middle
So, in addition to just being
familiar to iOS developers,

1143
00:49:04.376 --> 00:49:06.276 A:middle
there's some great
features within storyboards

1144
00:49:06.376 --> 00:49:08.676 A:middle
that actually make your life a
lot easier, you Mac developers.

1145
00:49:08.756 --> 00:49:10.956 A:middle
For example, presenting
a Popover

1146
00:49:10.956 --> 00:49:13.196 A:middle
or a Sheet can be
rather difficult.

1147
00:49:13.196 --> 00:49:15.566 A:middle
And you have to write code
to get it to start and end.

1148
00:49:15.746 --> 00:49:17.036 A:middle
And this is just as simple

1149
00:49:17.036 --> 00:49:19.266 A:middle
as creating a Segue
to present a Popover.

1150
00:49:19.266 --> 00:49:20.536 A:middle
You have a scene
that has your view,

1151
00:49:20.886 --> 00:49:22.576 A:middle
and voila, it's right there.

1152
00:49:22.726 --> 00:49:24.226 A:middle
It's a really fast way to do it.

1153
00:49:24.546 --> 00:49:26.376 A:middle
In addition, managing
Tab and Split Views.

1154
00:49:26.616 --> 00:49:28.516 A:middle
Here, in fact, we have
a Split View Controller.

1155
00:49:29.236 --> 00:49:30.646 A:middle
Now NSSplitViewController

1156
00:49:30.846 --> 00:49:33.216 A:middle
and NSTabViewController
are also new in Yosemite.

1157
00:49:33.216 --> 00:49:35.906 A:middle
And you can use those in
either XIBs or Storyboards.

1158
00:49:36.456 --> 00:49:38.316 A:middle
So I've configured a
Split View Controller here

1159
00:49:38.316 --> 00:49:42.366 A:middle
with two Split View items
with my Master and my Detail,

1160
00:49:42.526 --> 00:49:44.186 A:middle
similar as what I
would do on iPad.

1161
00:49:44.186 --> 00:49:47.026 A:middle
And you can see I can use
the same type of things here.

1162
00:49:47.026 --> 00:49:47.656 A:middle
I've got, in fact,

1163
00:49:47.656 --> 00:49:50.096 A:middle
an NSVisualEffectView
down at the bottom.

1164
00:49:50.096 --> 00:49:51.346 A:middle
And it just works.

1165
00:49:51.346 --> 00:49:53.646 A:middle
So let me show you,
running this application,

1166
00:49:55.186 --> 00:49:56.756 A:middle
on Mac using storyboards.

1167
00:50:00.786 --> 00:50:00.956 A:middle
Okay.

1168
00:50:01.126 --> 00:50:02.546 A:middle
So here's my application.

1169
00:50:02.986 --> 00:50:04.436 A:middle
I've got a nice looking
source list

1170
00:50:04.436 --> 00:50:06.516 A:middle
and I can click between them.

1171
00:50:06.516 --> 00:50:07.716 A:middle
I've got my photo,
I've got my rating

1172
00:50:07.716 --> 00:50:09.446 A:middle
at the bottom, I've
got my captions.

1173
00:50:10.006 --> 00:50:11.456 A:middle
And I've done it
with Storyboards.

1174
00:50:11.626 --> 00:50:14.156 A:middle
I can see all of it in one place
and it's incredibly convenient.

1175
00:50:14.156 --> 00:50:16.456 A:middle
So I hope you guys will check
this out as you're working

1176
00:50:16.456 --> 00:50:17.946 A:middle
on Yosemite and higher.

1177
00:50:17.946 --> 00:50:19.866 A:middle
These can be deployed only
to Yosemite and above.

1178
00:50:20.296 --> 00:50:22.486 A:middle
But they are a fantastic way
for new application development

1179
00:50:22.636 --> 00:50:23.916 A:middle
to speed up your development.

1180
00:50:24.546 --> 00:50:25.566 A:middle
All right.

1181
00:50:25.786 --> 00:50:27.546 A:middle
Next I want to talk
to you a little bit

1182
00:50:27.546 --> 00:50:28.706 A:middle
about gesture recognizers.

1183
00:50:28.706 --> 00:50:30.786 A:middle
You're probably also
familiar with these from iOS.

1184
00:50:31.246 --> 00:50:34.146 A:middle
Now in Yosemite we've added
five gesture recognizers

1185
00:50:34.146 --> 00:50:35.906 A:middle
and we have support for them
in Interface Builder as well.

1186
00:50:35.906 --> 00:50:38.796 A:middle
So let's say that I want to
add a gesture recognizer.

1187
00:50:38.796 --> 00:50:40.046 A:middle
I'll filter an Object Library.

1188
00:50:40.116 --> 00:50:42.336 A:middle
You can see these
five that pop up.

1189
00:50:42.736 --> 00:50:45.206 A:middle
Let's say that I want
to go ahead and put

1190
00:50:45.206 --> 00:50:47.006 A:middle
in a magnification
gesture recognizer.

1191
00:50:47.006 --> 00:50:49.786 A:middle
I want to do some sort of
pinch-to-zoom kind of action.

1192
00:50:50.156 --> 00:50:52.326 A:middle
So it's as simple as dragging
it from the Object Library

1193
00:50:52.326 --> 00:50:54.646 A:middle
onto the view where you want
to recognize the events.

1194
00:50:55.056 --> 00:50:55.736 A:middle
Drop it right there.

1195
00:50:56.086 --> 00:50:56.776 A:middle
You'll see it appears

1196
00:50:56.776 --> 00:50:58.496 A:middle
in my Document Outline
here on the left.

1197
00:50:59.096 --> 00:51:00.876 A:middle
Okay? Now all I have
to do is connect it

1198
00:51:00.876 --> 00:51:01.656 A:middle
up to the source code.

1199
00:51:01.796 --> 00:51:04.036 A:middle
So I have my View
Controller here.

1200
00:51:04.036 --> 00:51:07.186 A:middle
I'm going to Option-Click
on my Site View Controller

1201
00:51:07.616 --> 00:51:08.636 A:middle
to open it in a split.

1202
00:51:09.056 --> 00:51:11.616 A:middle
And let me close
this area for now.

1203
00:51:12.296 --> 00:51:14.816 A:middle
I can use the ConnectToSource
feature

1204
00:51:15.266 --> 00:51:16.176 A:middle
within Interface Builder.

1205
00:51:17.146 --> 00:51:18.976 A:middle
I can Control-Click and drag

1206
00:51:19.056 --> 00:51:21.776 A:middle
from my magnification
gesture recognizer directly

1207
00:51:21.776 --> 00:51:24.026 A:middle
into my source code
and have it create an

1208
00:51:24.026 --> 00:51:24.906 A:middle
out [inaudible] and
action for me.

1209
00:51:25.316 --> 00:51:27.436 A:middle
In this case, I want to
create an action method

1210
00:51:27.676 --> 00:51:30.536 A:middle
that my gesture recognizer
will invoke when events happen.

1211
00:51:30.536 --> 00:51:32.616 A:middle
So I'm going to select
Action and try

1212
00:51:33.136 --> 00:51:34.126 A:middle
to be a little clever here.

1213
00:51:34.216 --> 00:51:35.506 A:middle
I like to use fun
names sometimes,

1214
00:51:35.506 --> 00:51:38.346 A:middle
so I'm going to call
this biggify.

1215
00:51:38.346 --> 00:51:40.196 A:middle
Add some mystique and
excitement to the code.

1216
00:51:40.196 --> 00:51:40.616 A:middle
All right.

1217
00:51:40.616 --> 00:51:43.346 A:middle
So now you can see I've got
this connection right here

1218
00:51:43.646 --> 00:51:46.066 A:middle
to the action method, right,
for my gesture recognizer.

1219
00:51:46.066 --> 00:51:48.496 A:middle
And when I run this, this
method's going to be invoked

1220
00:51:48.806 --> 00:51:52.516 A:middle
and the code that I write here
will be fired without me having

1221
00:51:52.516 --> 00:51:54.186 A:middle
to do any event detection
myself.

1222
00:51:54.346 --> 00:51:55.956 A:middle
It's a fantastically
convenient way

1223
00:51:56.266 --> 00:51:57.316 A:middle
to develop your applications.

1224
00:51:58.276 --> 00:52:01.506 A:middle
Okay. You know I'm already kind
of starting to regret the choice

1225
00:52:01.636 --> 00:52:02.896 A:middle
of that selector name, biggify.

1226
00:52:03.406 --> 00:52:06.116 A:middle
It's a -- you know, when
my co-worker comes back

1227
00:52:06.116 --> 00:52:07.656 A:middle
from vacation -- look
at how happy he is there

1228
00:52:07.656 --> 00:52:08.806 A:middle
on vacation while we're at WWDC.

1229
00:52:08.806 --> 00:52:11.306 A:middle
And you know, he's not
going to be too pleased

1230
00:52:11.306 --> 00:52:12.296 A:middle
to find a name like biggify.

1231
00:52:12.296 --> 00:52:15.056 A:middle
So we're going to use the
new Find and Replace feature.

1232
00:52:15.056 --> 00:52:17.686 A:middle
And I'm going to use
Command-Option-Shift-F to bring

1233
00:52:17.686 --> 00:52:20.566 A:middle
up my Find Navigator in
the Find and Replace mode.

1234
00:52:21.186 --> 00:52:22.176 A:middle
So I'm going to get

1235
00:52:22.176 --> 00:52:23.706 A:middle
that horrible selector
name out of here.

1236
00:52:23.706 --> 00:52:24.686 A:middle
I'm going to search for biggify

1237
00:52:24.746 --> 00:52:26.826 A:middle
and something more
reasonable like Zoom.

1238
00:52:26.826 --> 00:52:31.276 A:middle
And as I hit Return, you'll see
that it detects now instances

1239
00:52:31.276 --> 00:52:33.136 A:middle
in that selector,
both in my source code

1240
00:52:33.136 --> 00:52:34.736 A:middle
and in my Interface
Builder documents.

1241
00:52:34.996 --> 00:52:35.976 A:middle
They're a fantastic timesaver.

1242
00:52:36.516 --> 00:52:40.746 A:middle
[ Applause ]

1243
00:52:41.246 --> 00:52:44.816 A:middle
So I can select both of these
instances and replace them.

1244
00:52:44.946 --> 00:52:46.486 A:middle
I don't see -- Snapshot
is trying to get

1245
00:52:46.486 --> 00:52:47.886 A:middle
in on my photo application here.

1246
00:52:47.886 --> 00:52:49.186 A:middle
It wants to take a picture, too.

1247
00:52:49.576 --> 00:52:51.396 A:middle
So we're going to
actually just replace that.

1248
00:52:51.396 --> 00:52:53.506 A:middle
And you can see I've
got Zoom right here

1249
00:52:53.866 --> 00:52:55.686 A:middle
for my Magnification
Gesture Recognizer.

1250
00:52:55.876 --> 00:52:57.336 A:middle
The action has been
replaced as Zoom.

1251
00:52:57.336 --> 00:52:59.636 A:middle
I don't have to destroy
my connection,

1252
00:52:59.936 --> 00:53:01.176 A:middle
change my selector name,

1253
00:53:01.176 --> 00:53:03.086 A:middle
and recreate all those
connections it may call into it.

1254
00:53:03.086 --> 00:53:05.916 A:middle
So it's a fantastic timesaver
for Find and Replace.

1255
00:53:06.576 --> 00:53:10.926 A:middle
In fact, Find and Replace also
works within Document Find.

1256
00:53:11.516 --> 00:53:14.446 A:middle
So with Command-F, I can
bring it up right inside

1257
00:53:14.446 --> 00:53:16.856 A:middle
of my document here and I can
search for all sorts of things.

1258
00:53:16.856 --> 00:53:19.226 A:middle
You can find strings
that appear in text.

1259
00:53:19.486 --> 00:53:22.106 A:middle
If I look for a label, I
can find those as well.

1260
00:53:22.686 --> 00:53:25.006 A:middle
And it will highlight for
me where it may appear

1261
00:53:25.006 --> 00:53:27.026 A:middle
in a Selector Name, where
it may appear in text

1262
00:53:27.026 --> 00:53:28.656 A:middle
in a string, and so on.

1263
00:53:28.656 --> 00:53:31.336 A:middle
For example, let's look for --
another thing that you can use,

1264
00:53:31.636 --> 00:53:33.986 A:middle
to find for, unexpectedly
convenient,

1265
00:53:33.986 --> 00:53:36.286 A:middle
is to jump between parts
of your view if you like.

1266
00:53:36.566 --> 00:53:38.556 A:middle
So, for example, I have
my Site View Control

1267
00:53:38.556 --> 00:53:39.426 A:middle
and I have a list you can draw.

1268
00:53:39.426 --> 00:53:41.526 A:middle
So I can type List, and
it's going to show me --

1269
00:53:41.726 --> 00:53:43.426 A:middle
here's my Site List
Table View Controller.

1270
00:53:43.746 --> 00:53:46.076 A:middle
This can be incredibly handy
when you have a large storyboard

1271
00:53:46.076 --> 00:53:48.746 A:middle
and you have your scenes named
appropriately, and you can jump

1272
00:53:48.746 --> 00:53:51.126 A:middle
between them with Find
right in the document.

1273
00:53:51.376 --> 00:53:53.186 A:middle
So this is a fantastic
timesaver as well.

1274
00:53:53.866 --> 00:53:56.146 A:middle
So the last thing that
I'd like to demonstrate

1275
00:53:56.196 --> 00:53:59.826 A:middle
for you is a little bit of how
Interface Builder participates

1276
00:53:59.876 --> 00:54:02.576 A:middle
in your localization
workflow to help improve that.

1277
00:54:02.996 --> 00:54:05.056 A:middle
So I'm going to open my
Assistant Editor again,

1278
00:54:05.166 --> 00:54:07.486 A:middle
and I'm going to
close my utility area.

1279
00:54:08.046 --> 00:54:09.726 A:middle
Now I want to bring
up my Preview.

1280
00:54:10.576 --> 00:54:12.156 A:middle
And you'll see that
my Selected View shows

1281
00:54:12.156 --> 00:54:15.746 A:middle
up in the Preview
on the right side.

1282
00:54:15.816 --> 00:54:18.556 A:middle
Now if I have localizations
already,

1283
00:54:18.646 --> 00:54:19.596 A:middle
I can use just a preview.

1284
00:54:19.756 --> 00:54:20.986 A:middle
Kevin and I have
only been working

1285
00:54:20.986 --> 00:54:22.156 A:middle
on this for a little bit.

1286
00:54:22.156 --> 00:54:24.326 A:middle
But we're pretty sure this app
is going to take off worldwide

1287
00:54:24.326 --> 00:54:25.876 A:middle
and we're going to have
all sorts of localizations.

1288
00:54:25.876 --> 00:54:27.816 A:middle
For now, all we have is English.

1289
00:54:28.356 --> 00:54:30.186 A:middle
But even when you don't
have any translations,

1290
00:54:30.546 --> 00:54:32.956 A:middle
you'll see this entry in there,
Double Length Pseudo-Language.

1291
00:54:33.356 --> 00:54:36.576 A:middle
So I can test this and see
how is my user interface going

1292
00:54:36.576 --> 00:54:36.996 A:middle
to react.

1293
00:54:37.376 --> 00:54:38.856 A:middle
Are my auto-layout
constraints set

1294
00:54:38.856 --> 00:54:40.176 A:middle
up correctly to help
those views?

1295
00:54:40.216 --> 00:54:41.486 A:middle
You can go ahead and clap, yeah.

1296
00:54:41.486 --> 00:54:41.976 A:middle
That's fantastic.

1297
00:54:42.516 --> 00:54:44.996 A:middle
[ Applause ]

1298
00:54:45.496 --> 00:54:48.936 A:middle
I can see without running my
application how my interface is

1299
00:54:48.936 --> 00:54:49.546 A:middle
going to react.

1300
00:54:49.846 --> 00:54:52.206 A:middle
And I can see that as I
select from view to view.

1301
00:54:52.206 --> 00:54:54.326 A:middle
All my strings will be doubled
and I can easily see that.

1302
00:54:54.586 --> 00:54:58.176 A:middle
Once you have translations, you
can easily plug those in as well

1303
00:54:58.176 --> 00:55:01.066 A:middle
and you can test those in
Interface Builder at design time

1304
00:55:01.166 --> 00:55:02.496 A:middle
which is a fantastic timesaver.

1305
00:55:03.316 --> 00:55:03.856 A:middle
All right.

1306
00:55:04.696 --> 00:55:08.366 A:middle
So, you've seen some of
the great new features

1307
00:55:08.366 --> 00:55:10.856 A:middle
that we've been working hard
to bring to you this year

1308
00:55:10.966 --> 00:55:12.366 A:middle
in Interface Builder
and Xcode 6.

1309
00:55:12.636 --> 00:55:14.666 A:middle
Again, revisiting
these three big themes.

1310
00:55:15.016 --> 00:55:18.906 A:middle
First is Liveness, that more
of your views and your content

1311
00:55:18.906 --> 00:55:20.986 A:middle
and your application are live

1312
00:55:21.156 --> 00:55:23.566 A:middle
in the IB design
canvas than ever before.

1313
00:55:23.956 --> 00:55:26.256 A:middle
There's more power for
you to iterate quickly

1314
00:55:26.326 --> 00:55:29.896 A:middle
and avoid the costly build
and run and debug loops.

1315
00:55:30.616 --> 00:55:33.266 A:middle
Second is Adaptability
and greater Dynamism.

1316
00:55:33.266 --> 00:55:35.746 A:middle
Being able to adapt to
changes in configuration

1317
00:55:35.746 --> 00:55:36.646 A:middle
where your view can appear.

1318
00:55:38.196 --> 00:55:39.486 A:middle
And third is Power and Parity.

1319
00:55:39.576 --> 00:55:42.126 A:middle
Great new features
in OS X and iOS

1320
00:55:42.546 --> 00:55:43.856 A:middle
and within Interface
Builder itself

1321
00:55:43.856 --> 00:55:45.146 A:middle
to help you work more quickly

1322
00:55:45.146 --> 00:55:46.566 A:middle
and efficiently than
ever before.

1323
00:55:47.866 --> 00:55:49.366 A:middle
Any questions you have
should be directed

1324
00:55:49.366 --> 00:55:51.116 A:middle
to our Developer
Evangelist, Dave Delong.

1325
00:55:51.356 --> 00:55:53.436 A:middle
We have great documentation
online available.

1326
00:55:53.906 --> 00:55:56.726 A:middle
There are quite a few related
sessions that will be fantastic

1327
00:55:56.726 --> 00:55:58.496 A:middle
for deeper dives into
the subject matter

1328
00:55:58.496 --> 00:55:59.636 A:middle
that you can catch on video.

1329
00:55:59.636 --> 00:56:00.976 A:middle
Thank you so much and enjoy
the rest of the conference.

